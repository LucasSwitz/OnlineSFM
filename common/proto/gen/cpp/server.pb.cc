// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#include "server.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CameraIntrinsics_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetImageRegionsResponse_FeatureList_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetImageRegionsResponse_FeatureList_Feature_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetImageRegionsResponse_RegionsEntry_DoNotUse_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImageData_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImageMetaData_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OBJData_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OBJMetaData_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReconstructionUploadImageRequest_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SparsePointCloudData_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SparsePointCloudMetaData_server_2eproto;
class ImageMetaDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImageMetaData> _instance;
} _ImageMetaData_default_instance_;
class ImageDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImageData> _instance;
} _ImageData_default_instance_;
class SparsePointCloudDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SparsePointCloudData> _instance;
} _SparsePointCloudData_default_instance_;
class SparsePointCloudMetaDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SparsePointCloudMetaData> _instance;
} _SparsePointCloudMetaData_default_instance_;
class OBJMetaDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OBJMetaData> _instance;
} _OBJMetaData_default_instance_;
class OBJDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OBJData> _instance;
} _OBJData_default_instance_;
class ReconstructionDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReconstructionData> _instance;
} _ReconstructionData_default_instance_;
class ReconstructionUploadImageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReconstructionUploadImageResponse> _instance;
} _ReconstructionUploadImageResponse_default_instance_;
class ReconstructionUploadImageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReconstructionUploadImageRequest> _instance;
} _ReconstructionUploadImageRequest_default_instance_;
class NewReconstructionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NewReconstructionRequest> _instance;
} _NewReconstructionRequest_default_instance_;
class NewReconstructionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NewReconstructionResponse> _instance;
} _NewReconstructionResponse_default_instance_;
class SparseReconstructRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SparseReconstructRequest> _instance;
} _SparseReconstructRequest_default_instance_;
class GetOBJRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOBJRequest> _instance;
} _GetOBJRequest_default_instance_;
class GetOBJResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOBJResponse> _instance;
} _GetOBJResponse_default_instance_;
class SparseReconstructResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SparseReconstructResponse> _instance;
} _SparseReconstructResponse_default_instance_;
class ReconstructionOBJDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReconstructionOBJ> _instance;
} _ReconstructionOBJ_default_instance_;
class DeleteReconstructionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteReconstructionRequest> _instance;
} _DeleteReconstructionRequest_default_instance_;
class DeleteReconstructionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteReconstructionResponse> _instance;
} _DeleteReconstructionResponse_default_instance_;
class CameraIntrinsicsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CameraIntrinsics> _instance;
} _CameraIntrinsics_default_instance_;
class HandhsakeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HandhsakeRequest> _instance;
} _HandhsakeRequest_default_instance_;
class HandshakeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HandshakeResponse> _instance;
} _HandshakeResponse_default_instance_;
class StartSessionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartSessionRequest> _instance;
} _StartSessionRequest_default_instance_;
class StartSessionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartSessionResponse> _instance;
} _StartSessionResponse_default_instance_;
class StopSessionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopSessionRequest> _instance;
} _StopSessionRequest_default_instance_;
class StopSessionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopSessionResponse> _instance;
} _StopSessionResponse_default_instance_;
class SessionAddImageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SessionAddImageRequest> _instance;
} _SessionAddImageRequest_default_instance_;
class SessionAddImageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SessionAddImageResponse> _instance;
} _SessionAddImageResponse_default_instance_;
class GetSparseRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSparseRequest> _instance;
} _GetSparseRequest_default_instance_;
class GetSparseResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSparseResponse> _instance;
} _GetSparseResponse_default_instance_;
class GetReconstructionConfigRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetReconstructionConfigRequest> _instance;
} _GetReconstructionConfigRequest_default_instance_;
class GetReconstructionConfigResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetReconstructionConfigResponse> _instance;
} _GetReconstructionConfigResponse_default_instance_;
class ReconstructionUploadImageBatchRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReconstructionUploadImageBatchRequest> _instance;
} _ReconstructionUploadImageBatchRequest_default_instance_;
class ReconstructionUploadImageBatchResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReconstructionUploadImageBatchResponse> _instance;
} _ReconstructionUploadImageBatchResponse_default_instance_;
class MVSRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MVSRequest> _instance;
} _MVSRequest_default_instance_;
class MVSResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MVSResponse> _instance;
} _MVSResponse_default_instance_;
class SetAgentConfigFieldsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetAgentConfigFieldsRequest> _instance;
} _SetAgentConfigFieldsRequest_default_instance_;
class SetAgentConfigFieldsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetAgentConfigFieldsResponse> _instance;
} _SetAgentConfigFieldsResponse_default_instance_;
class SetReconstructionConfigFieldsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetReconstructionConfigFieldsRequest> _instance;
} _SetReconstructionConfigFieldsRequest_default_instance_;
class SetReconstructionConfigFieldsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetReconstructionConfigFieldsResponse> _instance;
} _SetReconstructionConfigFieldsResponse_default_instance_;
class GetAgentConfigRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAgentConfigRequest> _instance;
} _GetAgentConfigRequest_default_instance_;
class GetAgentCOnfigResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAgentCOnfigResponse> _instance;
} _GetAgentCOnfigResponse_default_instance_;
class ComputeMatchesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ComputeMatchesRequest> _instance;
} _ComputeMatchesRequest_default_instance_;
class ComputeMatchesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ComputeMatchesResponse> _instance;
} _ComputeMatchesResponse_default_instance_;
class GetAllImagesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllImagesRequest> _instance;
} _GetAllImagesRequest_default_instance_;
class GetAllImagesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllImagesResponse> _instance;
} _GetAllImagesResponse_default_instance_;
class GetImageRegionsResponse_FeatureList_FeatureDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetImageRegionsResponse_FeatureList_Feature> _instance;
} _GetImageRegionsResponse_FeatureList_Feature_default_instance_;
class GetImageRegionsResponse_FeatureListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetImageRegionsResponse_FeatureList> _instance;
} _GetImageRegionsResponse_FeatureList_default_instance_;
class GetImageRegionsResponse_RegionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetImageRegionsResponse_RegionsEntry_DoNotUse> _instance;
} _GetImageRegionsResponse_RegionsEntry_DoNotUse_default_instance_;
class GetImageRegionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetImageRegionsResponse> _instance;
} _GetImageRegionsResponse_default_instance_;
class GetImageRegionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetImageRegionsRequest> _instance;
} _GetImageRegionsRequest_default_instance_;
class ScoreImagesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScoreImagesRequest> _instance;
} _ScoreImagesRequest_default_instance_;
class ScoreImagesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScoreImagesResponse> _instance;
} _ScoreImagesResponse_default_instance_;
static void InitDefaultsscc_info_CameraIntrinsics_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CameraIntrinsics_default_instance_;
    new (ptr) ::CameraIntrinsics();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CameraIntrinsics::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CameraIntrinsics_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CameraIntrinsics_server_2eproto}, {}};

static void InitDefaultsscc_info_ComputeMatchesRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ComputeMatchesRequest_default_instance_;
    new (ptr) ::ComputeMatchesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ComputeMatchesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ComputeMatchesRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ComputeMatchesRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_ComputeMatchesResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ComputeMatchesResponse_default_instance_;
    new (ptr) ::ComputeMatchesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ComputeMatchesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ComputeMatchesResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ComputeMatchesResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_DeleteReconstructionRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeleteReconstructionRequest_default_instance_;
    new (ptr) ::DeleteReconstructionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeleteReconstructionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteReconstructionRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteReconstructionRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_DeleteReconstructionResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeleteReconstructionResponse_default_instance_;
    new (ptr) ::DeleteReconstructionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeleteReconstructionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteReconstructionResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteReconstructionResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_GetAgentCOnfigResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetAgentCOnfigResponse_default_instance_;
    new (ptr) ::GetAgentCOnfigResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetAgentCOnfigResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAgentCOnfigResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAgentCOnfigResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_GetAgentConfigRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetAgentConfigRequest_default_instance_;
    new (ptr) ::GetAgentConfigRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetAgentConfigRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAgentConfigRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAgentConfigRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_GetAllImagesRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetAllImagesRequest_default_instance_;
    new (ptr) ::GetAllImagesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetAllImagesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllImagesRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllImagesRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_GetAllImagesResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetAllImagesResponse_default_instance_;
    new (ptr) ::GetAllImagesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetAllImagesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllImagesResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllImagesResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_GetImageRegionsRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetImageRegionsRequest_default_instance_;
    new (ptr) ::GetImageRegionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetImageRegionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetImageRegionsRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetImageRegionsRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_GetImageRegionsResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetImageRegionsResponse_default_instance_;
    new (ptr) ::GetImageRegionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetImageRegionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetImageRegionsResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetImageRegionsResponse_server_2eproto}, {
      &scc_info_GetImageRegionsResponse_RegionsEntry_DoNotUse_server_2eproto.base,}};

static void InitDefaultsscc_info_GetImageRegionsResponse_FeatureList_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetImageRegionsResponse_FeatureList_default_instance_;
    new (ptr) ::GetImageRegionsResponse_FeatureList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetImageRegionsResponse_FeatureList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetImageRegionsResponse_FeatureList_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetImageRegionsResponse_FeatureList_server_2eproto}, {
      &scc_info_GetImageRegionsResponse_FeatureList_Feature_server_2eproto.base,}};

static void InitDefaultsscc_info_GetImageRegionsResponse_FeatureList_Feature_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetImageRegionsResponse_FeatureList_Feature_default_instance_;
    new (ptr) ::GetImageRegionsResponse_FeatureList_Feature();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetImageRegionsResponse_FeatureList_Feature::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetImageRegionsResponse_FeatureList_Feature_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetImageRegionsResponse_FeatureList_Feature_server_2eproto}, {}};

static void InitDefaultsscc_info_GetImageRegionsResponse_RegionsEntry_DoNotUse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetImageRegionsResponse_RegionsEntry_DoNotUse_default_instance_;
    new (ptr) ::GetImageRegionsResponse_RegionsEntry_DoNotUse();
  }
  ::GetImageRegionsResponse_RegionsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetImageRegionsResponse_RegionsEntry_DoNotUse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetImageRegionsResponse_RegionsEntry_DoNotUse_server_2eproto}, {
      &scc_info_GetImageRegionsResponse_FeatureList_server_2eproto.base,}};

static void InitDefaultsscc_info_GetOBJRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetOBJRequest_default_instance_;
    new (ptr) ::GetOBJRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetOBJRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOBJRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetOBJRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_GetOBJResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetOBJResponse_default_instance_;
    new (ptr) ::GetOBJResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetOBJResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetOBJResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetOBJResponse_server_2eproto}, {
      &scc_info_OBJData_server_2eproto.base,}};

static void InitDefaultsscc_info_GetReconstructionConfigRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetReconstructionConfigRequest_default_instance_;
    new (ptr) ::GetReconstructionConfigRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetReconstructionConfigRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetReconstructionConfigRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetReconstructionConfigRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_GetReconstructionConfigResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetReconstructionConfigResponse_default_instance_;
    new (ptr) ::GetReconstructionConfigResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetReconstructionConfigResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetReconstructionConfigResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetReconstructionConfigResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_GetSparseRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetSparseRequest_default_instance_;
    new (ptr) ::GetSparseRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetSparseRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSparseRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSparseRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_GetSparseResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetSparseResponse_default_instance_;
    new (ptr) ::GetSparseResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetSparseResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSparseResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetSparseResponse_server_2eproto}, {
      &scc_info_SparsePointCloudData_server_2eproto.base,}};

static void InitDefaultsscc_info_HandhsakeRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_HandhsakeRequest_default_instance_;
    new (ptr) ::HandhsakeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HandhsakeRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HandhsakeRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_HandhsakeRequest_server_2eproto}, {
      &scc_info_CameraIntrinsics_server_2eproto.base,}};

static void InitDefaultsscc_info_HandshakeResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_HandshakeResponse_default_instance_;
    new (ptr) ::HandshakeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HandshakeResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HandshakeResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HandshakeResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_ImageData_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ImageData_default_instance_;
    new (ptr) ::ImageData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImageData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImageData_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImageData_server_2eproto}, {
      &scc_info_ImageMetaData_server_2eproto.base,}};

static void InitDefaultsscc_info_ImageMetaData_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ImageMetaData_default_instance_;
    new (ptr) ::ImageMetaData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImageMetaData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImageMetaData_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImageMetaData_server_2eproto}, {}};

static void InitDefaultsscc_info_MVSRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MVSRequest_default_instance_;
    new (ptr) ::MVSRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MVSRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MVSRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MVSRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_MVSResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MVSResponse_default_instance_;
    new (ptr) ::MVSResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MVSResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MVSResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MVSResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_NewReconstructionRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_NewReconstructionRequest_default_instance_;
    new (ptr) ::NewReconstructionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NewReconstructionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NewReconstructionRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NewReconstructionRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_NewReconstructionResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_NewReconstructionResponse_default_instance_;
    new (ptr) ::NewReconstructionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NewReconstructionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NewReconstructionResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NewReconstructionResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_OBJData_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_OBJData_default_instance_;
    new (ptr) ::OBJData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OBJData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OBJData_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OBJData_server_2eproto}, {
      &scc_info_OBJMetaData_server_2eproto.base,}};

static void InitDefaultsscc_info_OBJMetaData_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_OBJMetaData_default_instance_;
    new (ptr) ::OBJMetaData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OBJMetaData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OBJMetaData_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OBJMetaData_server_2eproto}, {}};

static void InitDefaultsscc_info_ReconstructionData_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReconstructionData_default_instance_;
    new (ptr) ::ReconstructionData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReconstructionData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReconstructionData_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReconstructionData_server_2eproto}, {}};

static void InitDefaultsscc_info_ReconstructionOBJ_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReconstructionOBJ_default_instance_;
    new (ptr) ::ReconstructionOBJ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReconstructionOBJ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReconstructionOBJ_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReconstructionOBJ_server_2eproto}, {}};

static void InitDefaultsscc_info_ReconstructionUploadImageBatchRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReconstructionUploadImageBatchRequest_default_instance_;
    new (ptr) ::ReconstructionUploadImageBatchRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReconstructionUploadImageBatchRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReconstructionUploadImageBatchRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ReconstructionUploadImageBatchRequest_server_2eproto}, {
      &scc_info_ImageData_server_2eproto.base,}};

static void InitDefaultsscc_info_ReconstructionUploadImageBatchResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReconstructionUploadImageBatchResponse_default_instance_;
    new (ptr) ::ReconstructionUploadImageBatchResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReconstructionUploadImageBatchResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReconstructionUploadImageBatchResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReconstructionUploadImageBatchResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_ReconstructionUploadImageRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReconstructionUploadImageRequest_default_instance_;
    new (ptr) ::ReconstructionUploadImageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReconstructionUploadImageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReconstructionUploadImageRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ReconstructionUploadImageRequest_server_2eproto}, {
      &scc_info_ImageData_server_2eproto.base,}};

static void InitDefaultsscc_info_ReconstructionUploadImageResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReconstructionUploadImageResponse_default_instance_;
    new (ptr) ::ReconstructionUploadImageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReconstructionUploadImageResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReconstructionUploadImageResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReconstructionUploadImageResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_ScoreImagesRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ScoreImagesRequest_default_instance_;
    new (ptr) ::ScoreImagesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScoreImagesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScoreImagesRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScoreImagesRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_ScoreImagesResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ScoreImagesResponse_default_instance_;
    new (ptr) ::ScoreImagesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScoreImagesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScoreImagesResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScoreImagesResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_SessionAddImageRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SessionAddImageRequest_default_instance_;
    new (ptr) ::SessionAddImageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SessionAddImageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SessionAddImageRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SessionAddImageRequest_server_2eproto}, {
      &scc_info_ReconstructionUploadImageRequest_server_2eproto.base,}};

static void InitDefaultsscc_info_SessionAddImageResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SessionAddImageResponse_default_instance_;
    new (ptr) ::SessionAddImageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SessionAddImageResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SessionAddImageResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SessionAddImageResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_SetAgentConfigFieldsRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SetAgentConfigFieldsRequest_default_instance_;
    new (ptr) ::SetAgentConfigFieldsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetAgentConfigFieldsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetAgentConfigFieldsRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetAgentConfigFieldsRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_SetAgentConfigFieldsResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SetAgentConfigFieldsResponse_default_instance_;
    new (ptr) ::SetAgentConfigFieldsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetAgentConfigFieldsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetAgentConfigFieldsResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetAgentConfigFieldsResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_SetReconstructionConfigFieldsRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SetReconstructionConfigFieldsRequest_default_instance_;
    new (ptr) ::SetReconstructionConfigFieldsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetReconstructionConfigFieldsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetReconstructionConfigFieldsRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetReconstructionConfigFieldsRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_SetReconstructionConfigFieldsResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SetReconstructionConfigFieldsResponse_default_instance_;
    new (ptr) ::SetReconstructionConfigFieldsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetReconstructionConfigFieldsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetReconstructionConfigFieldsResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetReconstructionConfigFieldsResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_SparsePointCloudData_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SparsePointCloudData_default_instance_;
    new (ptr) ::SparsePointCloudData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SparsePointCloudData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SparsePointCloudData_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SparsePointCloudData_server_2eproto}, {
      &scc_info_SparsePointCloudMetaData_server_2eproto.base,}};

static void InitDefaultsscc_info_SparsePointCloudMetaData_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SparsePointCloudMetaData_default_instance_;
    new (ptr) ::SparsePointCloudMetaData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SparsePointCloudMetaData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SparsePointCloudMetaData_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SparsePointCloudMetaData_server_2eproto}, {}};

static void InitDefaultsscc_info_SparseReconstructRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SparseReconstructRequest_default_instance_;
    new (ptr) ::SparseReconstructRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SparseReconstructRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SparseReconstructRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SparseReconstructRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_SparseReconstructResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SparseReconstructResponse_default_instance_;
    new (ptr) ::SparseReconstructResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SparseReconstructResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SparseReconstructResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SparseReconstructResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_StartSessionRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StartSessionRequest_default_instance_;
    new (ptr) ::StartSessionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StartSessionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartSessionRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StartSessionRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_StartSessionResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StartSessionResponse_default_instance_;
    new (ptr) ::StartSessionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StartSessionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartSessionResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StartSessionResponse_server_2eproto}, {}};

static void InitDefaultsscc_info_StopSessionRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StopSessionRequest_default_instance_;
    new (ptr) ::StopSessionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StopSessionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopSessionRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopSessionRequest_server_2eproto}, {}};

static void InitDefaultsscc_info_StopSessionResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StopSessionResponse_default_instance_;
    new (ptr) ::StopSessionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StopSessionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopSessionResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopSessionResponse_server_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_server_2eproto[52];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_server_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_server_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_server_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ImageMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ImageMetaData, id_),
  PROTOBUF_FIELD_OFFSET(::ImageMetaData, reconstruction_),
  PROTOBUF_FIELD_OFFSET(::ImageMetaData, path_),
  PROTOBUF_FIELD_OFFSET(::ImageMetaData, format_),
  PROTOBUF_FIELD_OFFSET(::ImageMetaData, undistorted_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ImageData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ImageData, data_),
  PROTOBUF_FIELD_OFFSET(::ImageData, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SparsePointCloudData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SparsePointCloudData, data_),
  PROTOBUF_FIELD_OFFSET(::SparsePointCloudData, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SparsePointCloudMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SparsePointCloudMetaData, id_),
  PROTOBUF_FIELD_OFFSET(::SparsePointCloudMetaData, reconstruction_),
  PROTOBUF_FIELD_OFFSET(::SparsePointCloudMetaData, mvs_path_),
  PROTOBUF_FIELD_OFFSET(::SparsePointCloudMetaData, ply_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OBJMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OBJMetaData, id_),
  PROTOBUF_FIELD_OFFSET(::OBJMetaData, reconstruction_),
  PROTOBUF_FIELD_OFFSET(::OBJMetaData, path_),
  PROTOBUF_FIELD_OFFSET(::OBJMetaData, texture_path_),
  PROTOBUF_FIELD_OFFSET(::OBJMetaData, mtl_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OBJData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OBJData, obj_data_),
  PROTOBUF_FIELD_OFFSET(::OBJData, texture_data_),
  PROTOBUF_FIELD_OFFSET(::OBJData, mtl_data_),
  PROTOBUF_FIELD_OFFSET(::OBJData, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReconstructionData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ReconstructionData, id_),
  PROTOBUF_FIELD_OFFSET(::ReconstructionData, root_),
  PROTOBUF_FIELD_OFFSET(::ReconstructionData, images_),
  PROTOBUF_FIELD_OFFSET(::ReconstructionData, sparse_reconstruction_),
  PROTOBUF_FIELD_OFFSET(::ReconstructionData, obj_),
  PROTOBUF_FIELD_OFFSET(::ReconstructionData, images_path_),
  PROTOBUF_FIELD_OFFSET(::ReconstructionData, sfm_path_),
  PROTOBUF_FIELD_OFFSET(::ReconstructionData, mvs_path_),
  PROTOBUF_FIELD_OFFSET(::ReconstructionData, features_path_),
  PROTOBUF_FIELD_OFFSET(::ReconstructionData, matches_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReconstructionUploadImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ReconstructionUploadImageResponse, success_),
  PROTOBUF_FIELD_OFFSET(::ReconstructionUploadImageResponse, image_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReconstructionUploadImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ReconstructionUploadImageRequest, reconstruction_id_),
  PROTOBUF_FIELD_OFFSET(::ReconstructionUploadImageRequest, compute_matches_),
  PROTOBUF_FIELD_OFFSET(::ReconstructionUploadImageRequest, image_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NewReconstructionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NewReconstructionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::NewReconstructionResponse, reconstruction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SparseReconstructRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SparseReconstructRequest, reconstruction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetOBJRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetOBJRequest, reconstruction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetOBJResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetOBJResponse, success_),
  PROTOBUF_FIELD_OFFSET(::GetOBJResponse, obj_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SparseReconstructResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SparseReconstructResponse, success_),
  PROTOBUF_FIELD_OFFSET(::SparseReconstructResponse, error_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReconstructionOBJ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ReconstructionOBJ, obj_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeleteReconstructionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DeleteReconstructionRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeleteReconstructionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DeleteReconstructionResponse, success_),
  PROTOBUF_FIELD_OFFSET(::DeleteReconstructionResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CameraIntrinsics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CameraIntrinsics, model_),
  PROTOBUF_FIELD_OFFSET(::CameraIntrinsics, maker_),
  PROTOBUF_FIELD_OFFSET(::CameraIntrinsics, numeric_model_),
  PROTOBUF_FIELD_OFFSET(::CameraIntrinsics, sensor_size_),
  PROTOBUF_FIELD_OFFSET(::CameraIntrinsics, focus_mode_),
  PROTOBUF_FIELD_OFFSET(::CameraIntrinsics, horizontal_view_angle_),
  PROTOBUF_FIELD_OFFSET(::CameraIntrinsics, jpeg_quality_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HandhsakeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::HandhsakeRequest, identifier_),
  PROTOBUF_FIELD_OFFSET(::HandhsakeRequest, camera_intrinsics_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HandshakeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::HandshakeResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StartSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StartSessionRequest, reconstruction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StartSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StartSessionResponse, reconstruction_id_),
  PROTOBUF_FIELD_OFFSET(::StartSessionResponse, session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StopSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StopSessionRequest, session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StopSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StopSessionResponse, session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SessionAddImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SessionAddImageRequest, session_id_),
  PROTOBUF_FIELD_OFFSET(::SessionAddImageRequest, upload_image_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SessionAddImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetSparseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetSparseRequest, reconstruction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetSparseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetSparseResponse, sparse_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetReconstructionConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetReconstructionConfigRequest, reconstruction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetReconstructionConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetReconstructionConfigResponse, config_json_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReconstructionUploadImageBatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ReconstructionUploadImageBatchRequest, idx_),
  PROTOBUF_FIELD_OFFSET(::ReconstructionUploadImageBatchRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReconstructionUploadImageBatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ReconstructionUploadImageBatchResponse, images_uploaded_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MVSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MVSRequest, reconstruction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MVSResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MVSResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SetAgentConfigFieldsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SetAgentConfigFieldsRequest, reconstruction_id_),
  PROTOBUF_FIELD_OFFSET(::SetAgentConfigFieldsRequest, agent_name_),
  PROTOBUF_FIELD_OFFSET(::SetAgentConfigFieldsRequest, config_json_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SetAgentConfigFieldsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SetReconstructionConfigFieldsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SetReconstructionConfigFieldsRequest, reconstruction_id_),
  PROTOBUF_FIELD_OFFSET(::SetReconstructionConfigFieldsRequest, config_json_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SetReconstructionConfigFieldsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetAgentConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetAgentConfigRequest, reconstruction_id_),
  PROTOBUF_FIELD_OFFSET(::GetAgentConfigRequest, agent_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetAgentCOnfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetAgentCOnfigResponse, config_json_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ComputeMatchesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ComputeMatchesRequest, reconstruction_id_),
  PROTOBUF_FIELD_OFFSET(::ComputeMatchesRequest, image_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ComputeMatchesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetAllImagesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetAllImagesRequest, reconstruction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetAllImagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetAllImagesResponse, images_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsResponse_FeatureList_Feature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsResponse_FeatureList_Feature, x_),
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsResponse_FeatureList_Feature, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsResponse_FeatureList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsResponse_FeatureList, features_),
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsResponse_RegionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsResponse_RegionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsResponse_RegionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsResponse_RegionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsResponse, regions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsRequest, reconstruction_id_),
  PROTOBUF_FIELD_OFFSET(::GetImageRegionsRequest, image_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ScoreImagesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ScoreImagesRequest, reconstruction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ScoreImagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ImageMetaData)},
  { 10, -1, sizeof(::ImageData)},
  { 17, -1, sizeof(::SparsePointCloudData)},
  { 24, -1, sizeof(::SparsePointCloudMetaData)},
  { 33, -1, sizeof(::OBJMetaData)},
  { 43, -1, sizeof(::OBJData)},
  { 52, -1, sizeof(::ReconstructionData)},
  { 67, -1, sizeof(::ReconstructionUploadImageResponse)},
  { 74, -1, sizeof(::ReconstructionUploadImageRequest)},
  { 82, -1, sizeof(::NewReconstructionRequest)},
  { 87, -1, sizeof(::NewReconstructionResponse)},
  { 93, -1, sizeof(::SparseReconstructRequest)},
  { 99, -1, sizeof(::GetOBJRequest)},
  { 105, -1, sizeof(::GetOBJResponse)},
  { 112, -1, sizeof(::SparseReconstructResponse)},
  { 119, -1, sizeof(::ReconstructionOBJ)},
  { 125, -1, sizeof(::DeleteReconstructionRequest)},
  { 131, -1, sizeof(::DeleteReconstructionResponse)},
  { 138, -1, sizeof(::CameraIntrinsics)},
  { 150, -1, sizeof(::HandhsakeRequest)},
  { 157, -1, sizeof(::HandshakeResponse)},
  { 163, -1, sizeof(::StartSessionRequest)},
  { 169, -1, sizeof(::StartSessionResponse)},
  { 176, -1, sizeof(::StopSessionRequest)},
  { 182, -1, sizeof(::StopSessionResponse)},
  { 188, -1, sizeof(::SessionAddImageRequest)},
  { 195, -1, sizeof(::SessionAddImageResponse)},
  { 200, -1, sizeof(::GetSparseRequest)},
  { 206, -1, sizeof(::GetSparseResponse)},
  { 212, -1, sizeof(::GetReconstructionConfigRequest)},
  { 218, -1, sizeof(::GetReconstructionConfigResponse)},
  { 224, -1, sizeof(::ReconstructionUploadImageBatchRequest)},
  { 231, -1, sizeof(::ReconstructionUploadImageBatchResponse)},
  { 237, -1, sizeof(::MVSRequest)},
  { 243, -1, sizeof(::MVSResponse)},
  { 249, -1, sizeof(::SetAgentConfigFieldsRequest)},
  { 257, -1, sizeof(::SetAgentConfigFieldsResponse)},
  { 262, -1, sizeof(::SetReconstructionConfigFieldsRequest)},
  { 269, -1, sizeof(::SetReconstructionConfigFieldsResponse)},
  { 274, -1, sizeof(::GetAgentConfigRequest)},
  { 281, -1, sizeof(::GetAgentCOnfigResponse)},
  { 287, -1, sizeof(::ComputeMatchesRequest)},
  { 294, -1, sizeof(::ComputeMatchesResponse)},
  { 299, -1, sizeof(::GetAllImagesRequest)},
  { 305, -1, sizeof(::GetAllImagesResponse)},
  { 311, -1, sizeof(::GetImageRegionsResponse_FeatureList_Feature)},
  { 318, -1, sizeof(::GetImageRegionsResponse_FeatureList)},
  { 324, 331, sizeof(::GetImageRegionsResponse_RegionsEntry_DoNotUse)},
  { 333, -1, sizeof(::GetImageRegionsResponse)},
  { 339, -1, sizeof(::GetImageRegionsRequest)},
  { 346, -1, sizeof(::ScoreImagesRequest)},
  { 352, -1, sizeof(::ScoreImagesResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ImageMetaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ImageData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SparsePointCloudData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SparsePointCloudMetaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_OBJMetaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_OBJData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ReconstructionData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ReconstructionUploadImageResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ReconstructionUploadImageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_NewReconstructionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_NewReconstructionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SparseReconstructRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetOBJRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetOBJResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SparseReconstructResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ReconstructionOBJ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_DeleteReconstructionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_DeleteReconstructionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CameraIntrinsics_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_HandhsakeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_HandshakeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StartSessionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StartSessionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StopSessionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StopSessionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SessionAddImageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SessionAddImageResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetSparseRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetSparseResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetReconstructionConfigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetReconstructionConfigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ReconstructionUploadImageBatchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ReconstructionUploadImageBatchResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MVSRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MVSResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SetAgentConfigFieldsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SetAgentConfigFieldsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SetReconstructionConfigFieldsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SetReconstructionConfigFieldsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetAgentConfigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetAgentCOnfigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ComputeMatchesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ComputeMatchesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetAllImagesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetAllImagesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetImageRegionsResponse_FeatureList_Feature_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetImageRegionsResponse_FeatureList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetImageRegionsResponse_RegionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetImageRegionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetImageRegionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ScoreImagesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ScoreImagesResponse_default_instance_),
};

const char descriptor_table_protodef_server_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014server.proto\"k\n\rImageMetaData\022\n\n\002id\030\001 "
  "\001(\t\022\026\n\016reconstruction\030\002 \001(\t\022\014\n\004path\030\003 \001("
  "\t\022\016\n\006format\030\004 \001(\t\022\030\n\020undistorted_path\030\005 "
  "\001(\t\";\n\tImageData\022\014\n\004data\030\001 \001(\014\022 \n\010metada"
  "ta\030\002 \001(\0132\016.ImageMetaData\"Q\n\024SparsePointC"
  "loudData\022\014\n\004data\030\001 \001(\014\022+\n\010metadata\030\002 \001(\013"
  "2\031.SparsePointCloudMetaData\"b\n\030SparsePoi"
  "ntCloudMetaData\022\n\n\002id\030\001 \001(\t\022\026\n\016reconstru"
  "ction\030\002 \001(\t\022\020\n\010mvs_path\030\003 \001(\t\022\020\n\010ply_pat"
  "h\030\004 \001(\t\"g\n\013OBJMetaData\022\n\n\002id\030\001 \001(\t\022\026\n\016re"
  "construction\030\002 \001(\t\022\014\n\004path\030\003 \001(\t\022\024\n\014text"
  "ure_path\030\004 \001(\t\022\020\n\010mtl_path\030\005 \001(\t\"c\n\007OBJD"
  "ata\022\020\n\010obj_data\030\001 \001(\014\022\024\n\014texture_data\030\002 "
  "\001(\014\022\020\n\010mtl_data\030\003 \001(\014\022\036\n\010metadata\030\004 \001(\0132"
  "\014.OBJMetaData\"\320\001\n\022ReconstructionData\022\n\n\002"
  "id\030\001 \001(\t\022\014\n\004root\030\002 \001(\t\022\016\n\006images\030\003 \003(\t\022\035"
  "\n\025sparse_reconstruction\030\004 \001(\t\022\013\n\003obj\030\005 \001"
  "(\t\022\023\n\013images_path\030\006 \001(\t\022\020\n\010sfm_path\030\007 \001("
  "\t\022\020\n\010mvs_path\030\010 \001(\t\022\025\n\rfeatures_path\030\t \001"
  "(\t\022\024\n\014matches_path\030\n \001(\t\"F\n!Reconstructi"
  "onUploadImageResponse\022\017\n\007success\030\001 \001(\010\022\020"
  "\n\010image_id\030\002 \001(\t\"q\n ReconstructionUpload"
  "ImageRequest\022\031\n\021reconstruction_id\030\001 \001(\t\022"
  "\027\n\017compute_matches\030\002 \001(\010\022\031\n\005image\030\003 \001(\0132"
  "\n.ImageData\"\032\n\030NewReconstructionRequest\""
  "6\n\031NewReconstructionResponse\022\031\n\021reconstr"
  "uction_id\030\001 \001(\t\"5\n\030SparseReconstructRequ"
  "est\022\031\n\021reconstruction_id\030\001 \001(\t\"*\n\rGetOBJ"
  "Request\022\031\n\021reconstruction_id\030\001 \001(\t\"8\n\016Ge"
  "tOBJResponse\022\017\n\007success\030\001 \001(\010\022\025\n\003obj\030\002 \001"
  "(\0132\010.OBJData\"\?\n\031SparseReconstructRespons"
  "e\022\017\n\007success\030\001 \001(\010\022\021\n\terror_msg\030\002 \001(\t\" \n"
  "\021ReconstructionOBJ\022\013\n\003obj\030\001 \001(\014\")\n\033Delet"
  "eReconstructionRequest\022\n\n\002id\030\001 \001(\t\";\n\034De"
  "leteReconstructionResponse\022\017\n\007success\030\001 "
  "\001(\010\022\n\n\002id\030\002 \001(\t\"\245\001\n\020CameraIntrinsics\022\r\n\005"
  "model\030\001 \001(\t\022\r\n\005maker\030\002 \001(\t\022\025\n\rnumeric_mo"
  "del\030\003 \001(\t\022\023\n\013sensor_size\030\004 \001(\002\022\022\n\nfocus_"
  "mode\030\005 \001(\t\022\035\n\025horizontal_view_angle\030\006 \001("
  "\002\022\024\n\014jpeg_quality\030\007 \001(\005\"T\n\020HandhsakeRequ"
  "est\022\022\n\nidentifier\030\001 \001(\t\022,\n\021camera_intrin"
  "sics\030\002 \001(\0132\021.CameraIntrinsics\"$\n\021Handsha"
  "keResponse\022\017\n\007success\030\001 \001(\010\"0\n\023StartSess"
  "ionRequest\022\031\n\021reconstruction_id\030\001 \001(\t\"E\n"
  "\024StartSessionResponse\022\031\n\021reconstruction_"
  "id\030\001 \001(\t\022\022\n\nsession_id\030\002 \001(\t\"(\n\022StopSess"
  "ionRequest\022\022\n\nsession_id\030\001 \001(\t\")\n\023StopSe"
  "ssionResponse\022\022\n\nsession_id\030\001 \001(\t\"e\n\026Ses"
  "sionAddImageRequest\022\022\n\nsession_id\030\001 \001(\t\022"
  "7\n\014upload_image\030\002 \001(\0132!.ReconstructionUp"
  "loadImageRequest\"\031\n\027SessionAddImageRespo"
  "nse\"-\n\020GetSparseRequest\022\031\n\021reconstructio"
  "n_id\030\001 \001(\t\":\n\021GetSparseResponse\022%\n\006spars"
  "e\030\001 \001(\0132\025.SparsePointCloudData\";\n\036GetRec"
  "onstructionConfigRequest\022\031\n\021reconstructi"
  "on_id\030\001 \001(\t\"6\n\037GetReconstructionConfigRe"
  "sponse\022\023\n\013config_json\030\001 \001(\t\"N\n%Reconstru"
  "ctionUploadImageBatchRequest\022\013\n\003idx\030\001 \001("
  "\005\022\030\n\004data\030\002 \001(\0132\n.ImageData\"A\n&Reconstru"
  "ctionUploadImageBatchResponse\022\027\n\017images_"
  "uploaded\030\001 \001(\005\"\'\n\nMVSRequest\022\031\n\021reconstr"
  "uction_id\030\001 \001(\t\"\036\n\013MVSResponse\022\017\n\007succes"
  "s\030\001 \001(\010\"a\n\033SetAgentConfigFieldsRequest\022\031"
  "\n\021reconstruction_id\030\001 \001(\t\022\022\n\nagent_name\030"
  "\002 \001(\t\022\023\n\013config_json\030\003 \001(\t\"\036\n\034SetAgentCo"
  "nfigFieldsResponse\"V\n$SetReconstructionC"
  "onfigFieldsRequest\022\031\n\021reconstruction_id\030"
  "\001 \001(\t\022\023\n\013config_json\030\002 \001(\t\"\'\n%SetReconst"
  "ructionConfigFieldsResponse\"F\n\025GetAgentC"
  "onfigRequest\022\031\n\021reconstruction_id\030\001 \001(\t\022"
  "\022\n\nagent_name\030\002 \001(\t\"-\n\026GetAgentCOnfigRes"
  "ponse\022\023\n\013config_json\030\001 \001(\t\"D\n\025ComputeMat"
  "chesRequest\022\031\n\021reconstruction_id\030\001 \001(\t\022\020"
  "\n\010image_id\030\002 \001(\t\"\030\n\026ComputeMatchesRespon"
  "se\"0\n\023GetAllImagesRequest\022\031\n\021reconstruct"
  "ion_id\030\001 \001(\t\"&\n\024GetAllImagesResponse\022\016\n\006"
  "images\030\001 \003(\t\"\227\002\n\027GetImageRegionsResponse"
  "\0226\n\007regions\030\001 \003(\0132%.GetImageRegionsRespo"
  "nse.RegionsEntry\032n\n\013FeatureList\022>\n\010featu"
  "res\030\001 \003(\0132,.GetImageRegionsResponse.Feat"
  "ureList.Feature\032\037\n\007Feature\022\t\n\001x\030\001 \001(\005\022\t\n"
  "\001y\030\002 \001(\005\032T\n\014RegionsEntry\022\013\n\003key\030\001 \001(\t\0223\n"
  "\005value\030\002 \001(\0132$.GetImageRegionsResponse.F"
  "eatureList:\0028\001\"E\n\026GetImageRegionsRequest"
  "\022\031\n\021reconstruction_id\030\001 \001(\t\022\020\n\010image_id\030"
  "\002 \001(\t\"/\n\022ScoreImagesRequest\022\031\n\021reconstru"
  "ction_id\030\001 \001(\t\"\025\n\023ScoreImagesResponse2\301\013"
  "\n\025ReconstructionService\0224\n\tHandshake\022\021.H"
  "andhsakeRequest\032\022.HandshakeResponse\"\000\022f\n"
  "\031ReconstructionUploadImage\022!.Reconstruct"
  "ionUploadImageRequest\032\".ReconstructionUp"
  "loadImageResponse\"\000(\001\022A\n\016ComputeMatches\022"
  "\026.ComputeMatchesRequest\032\027.ComputeMatches"
  "Response\022J\n\021SparseReconstruct\022\031.SparseRe"
  "constructRequest\032\032.SparseReconstructResp"
  "onse\022+\n\006GetOBJ\022\016.GetOBJRequest\032\017.GetOBJR"
  "esponse0\001\0224\n\tGetSparse\022\021.GetSparseReques"
  "t\032\022.GetSparseResponse0\001\022J\n\021NewReconstruc"
  "tion\022\031.NewReconstructionRequest\032\032.NewRec"
  "onstructionResponse\022S\n\024DeleteReconstruct"
  "ion\022\034.DeleteReconstructionRequest\032\035.Dele"
  "teReconstructionResponse\022;\n\014StartSession"
  "\022\024.StartSessionRequest\032\025.StartSessionRes"
  "ponse\0228\n\013StopSession\022\023.StopSessionReques"
  "t\032\024.StopSessionResponse\022F\n\017SessionAddIma"
  "ge\022\027.SessionAddImageRequest\032\030.SessionAdd"
  "ImageResponse(\001\022\\\n\027GetReconstructionConf"
  "ig\022\037.GetReconstructionConfigRequest\032 .Ge"
  "tReconstructionConfigResponse\022A\n\016GetAgen"
  "tConfig\022\026.GetAgentConfigRequest\032\027.GetAge"
  "ntCOnfigResponse\022s\n\036ReconstructionUpload"
  "ImageBatch\022&.ReconstructionUploadImageBa"
  "tchRequest\032\'.ReconstructionUploadImageBa"
  "tchResponse(\001\022 \n\003MVS\022\013.MVSRequest\032\014.MVSR"
  "esponse\022S\n\024SetAgentConfigFields\022\034.SetAge"
  "ntConfigFieldsRequest\032\035.SetAgentConfigFi"
  "eldsResponse\022n\n\035SetReconstructionConfigF"
  "ields\022%.SetReconstructionConfigFieldsReq"
  "uest\032&.SetReconstructionConfigFieldsResp"
  "onse\022;\n\014GetAllImages\022\024.GetAllImagesReque"
  "st\032\025.GetAllImagesResponse\022D\n\017GetImageReg"
  "ions\022\027.GetImageRegionsRequest\032\030.GetImage"
  "RegionsResponse\0228\n\013ScoreImages\022\023.ScoreIm"
  "agesRequest\032\024.ScoreImagesResponseb\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_server_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_server_2eproto_sccs[52] = {
  &scc_info_CameraIntrinsics_server_2eproto.base,
  &scc_info_ComputeMatchesRequest_server_2eproto.base,
  &scc_info_ComputeMatchesResponse_server_2eproto.base,
  &scc_info_DeleteReconstructionRequest_server_2eproto.base,
  &scc_info_DeleteReconstructionResponse_server_2eproto.base,
  &scc_info_GetAgentCOnfigResponse_server_2eproto.base,
  &scc_info_GetAgentConfigRequest_server_2eproto.base,
  &scc_info_GetAllImagesRequest_server_2eproto.base,
  &scc_info_GetAllImagesResponse_server_2eproto.base,
  &scc_info_GetImageRegionsRequest_server_2eproto.base,
  &scc_info_GetImageRegionsResponse_server_2eproto.base,
  &scc_info_GetImageRegionsResponse_FeatureList_server_2eproto.base,
  &scc_info_GetImageRegionsResponse_FeatureList_Feature_server_2eproto.base,
  &scc_info_GetImageRegionsResponse_RegionsEntry_DoNotUse_server_2eproto.base,
  &scc_info_GetOBJRequest_server_2eproto.base,
  &scc_info_GetOBJResponse_server_2eproto.base,
  &scc_info_GetReconstructionConfigRequest_server_2eproto.base,
  &scc_info_GetReconstructionConfigResponse_server_2eproto.base,
  &scc_info_GetSparseRequest_server_2eproto.base,
  &scc_info_GetSparseResponse_server_2eproto.base,
  &scc_info_HandhsakeRequest_server_2eproto.base,
  &scc_info_HandshakeResponse_server_2eproto.base,
  &scc_info_ImageData_server_2eproto.base,
  &scc_info_ImageMetaData_server_2eproto.base,
  &scc_info_MVSRequest_server_2eproto.base,
  &scc_info_MVSResponse_server_2eproto.base,
  &scc_info_NewReconstructionRequest_server_2eproto.base,
  &scc_info_NewReconstructionResponse_server_2eproto.base,
  &scc_info_OBJData_server_2eproto.base,
  &scc_info_OBJMetaData_server_2eproto.base,
  &scc_info_ReconstructionData_server_2eproto.base,
  &scc_info_ReconstructionOBJ_server_2eproto.base,
  &scc_info_ReconstructionUploadImageBatchRequest_server_2eproto.base,
  &scc_info_ReconstructionUploadImageBatchResponse_server_2eproto.base,
  &scc_info_ReconstructionUploadImageRequest_server_2eproto.base,
  &scc_info_ReconstructionUploadImageResponse_server_2eproto.base,
  &scc_info_ScoreImagesRequest_server_2eproto.base,
  &scc_info_ScoreImagesResponse_server_2eproto.base,
  &scc_info_SessionAddImageRequest_server_2eproto.base,
  &scc_info_SessionAddImageResponse_server_2eproto.base,
  &scc_info_SetAgentConfigFieldsRequest_server_2eproto.base,
  &scc_info_SetAgentConfigFieldsResponse_server_2eproto.base,
  &scc_info_SetReconstructionConfigFieldsRequest_server_2eproto.base,
  &scc_info_SetReconstructionConfigFieldsResponse_server_2eproto.base,
  &scc_info_SparsePointCloudData_server_2eproto.base,
  &scc_info_SparsePointCloudMetaData_server_2eproto.base,
  &scc_info_SparseReconstructRequest_server_2eproto.base,
  &scc_info_SparseReconstructResponse_server_2eproto.base,
  &scc_info_StartSessionRequest_server_2eproto.base,
  &scc_info_StartSessionResponse_server_2eproto.base,
  &scc_info_StopSessionRequest_server_2eproto.base,
  &scc_info_StopSessionResponse_server_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_server_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_server_2eproto = {
  false, false, descriptor_table_protodef_server_2eproto, "server.proto", 4961,
  &descriptor_table_server_2eproto_once, descriptor_table_server_2eproto_sccs, descriptor_table_server_2eproto_deps, 52, 0,
  schemas, file_default_instances, TableStruct_server_2eproto::offsets,
  file_level_metadata_server_2eproto, 52, file_level_enum_descriptors_server_2eproto, file_level_service_descriptors_server_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_server_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_server_2eproto)), true);

// ===================================================================

void ImageMetaData::InitAsDefaultInstance() {
}
class ImageMetaData::_Internal {
 public:
};

ImageMetaData::ImageMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ImageMetaData)
}
ImageMetaData::ImageMetaData(const ImageMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  reconstruction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction().empty()) {
    reconstruction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_format().empty()) {
    format_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_format(),
      GetArena());
  }
  undistorted_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_undistorted_path().empty()) {
    undistorted_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_undistorted_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ImageMetaData)
}

void ImageMetaData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImageMetaData_server_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reconstruction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  undistorted_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ImageMetaData::~ImageMetaData() {
  // @@protoc_insertion_point(destructor:ImageMetaData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImageMetaData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reconstruction_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  format_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  undistorted_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImageMetaData::ArenaDtor(void* object) {
  ImageMetaData* _this = reinterpret_cast< ImageMetaData* >(object);
  (void)_this;
}
void ImageMetaData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImageMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImageMetaData& ImageMetaData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImageMetaData_server_2eproto.base);
  return *internal_default_instance();
}


void ImageMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:ImageMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reconstruction_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  format_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  undistorted_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImageMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ImageMetaData.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string reconstruction = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_reconstruction();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ImageMetaData.reconstruction"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ImageMetaData.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string format = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_format();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ImageMetaData.format"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string undistorted_path = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_undistorted_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ImageMetaData.undistorted_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImageMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ImageMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ImageMetaData.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string reconstruction = 2;
  if (this->reconstruction().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction().data(), static_cast<int>(this->_internal_reconstruction().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ImageMetaData.reconstruction");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_reconstruction(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ImageMetaData.path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_path(), target);
  }

  // string format = 4;
  if (this->format().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_format().data(), static_cast<int>(this->_internal_format().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ImageMetaData.format");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_format(), target);
  }

  // string undistorted_path = 5;
  if (this->undistorted_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_undistorted_path().data(), static_cast<int>(this->_internal_undistorted_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ImageMetaData.undistorted_path");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_undistorted_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImageMetaData)
  return target;
}

size_t ImageMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImageMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string reconstruction = 2;
  if (this->reconstruction().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction());
  }

  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string format = 4;
  if (this->format().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_format());
  }

  // string undistorted_path = 5;
  if (this->undistorted_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_undistorted_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImageMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImageMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImageMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImageMetaData)
    MergeFrom(*source);
  }
}

void ImageMetaData::MergeFrom(const ImageMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImageMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.reconstruction().size() > 0) {
    _internal_set_reconstruction(from._internal_reconstruction());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.format().size() > 0) {
    _internal_set_format(from._internal_format());
  }
  if (from.undistorted_path().size() > 0) {
    _internal_set_undistorted_path(from._internal_undistorted_path());
  }
}

void ImageMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImageMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageMetaData::CopyFrom(const ImageMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImageMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageMetaData::IsInitialized() const {
  return true;
}

void ImageMetaData::InternalSwap(ImageMetaData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reconstruction_.Swap(&other->reconstruction_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  format_.Swap(&other->format_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  undistorted_path_.Swap(&other->undistorted_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ImageMetaData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ImageData::InitAsDefaultInstance() {
  ::_ImageData_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::ImageMetaData*>(
      ::ImageMetaData::internal_default_instance());
}
class ImageData::_Internal {
 public:
  static const ::ImageMetaData& metadata(const ImageData* msg);
};

const ::ImageMetaData&
ImageData::_Internal::metadata(const ImageData* msg) {
  return *msg->metadata_;
}
ImageData::ImageData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ImageData)
}
ImageData::ImageData(const ImageData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::ImageMetaData(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ImageData)
}

void ImageData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImageData_server_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metadata_ = nullptr;
}

ImageData::~ImageData() {
  // @@protoc_insertion_point(destructor:ImageData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImageData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void ImageData::ArenaDtor(void* object) {
  ImageData* _this = reinterpret_cast< ImageData* >(object);
  (void)_this;
}
void ImageData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImageData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImageData& ImageData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImageData_server_2eproto.base);
  return *internal_default_instance();
}


void ImageData::Clear() {
// @@protoc_insertion_point(message_clear_start:ImageData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImageData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ImageMetaData metadata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImageData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ImageData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  // .ImageMetaData metadata = 2;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImageData)
  return target;
}

size_t ImageData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImageData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // .ImageMetaData metadata = 2;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImageData)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImageData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImageData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImageData)
    MergeFrom(*source);
  }
}

void ImageData::MergeFrom(const ImageData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImageData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->::ImageMetaData::MergeFrom(from._internal_metadata());
  }
}

void ImageData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageData::CopyFrom(const ImageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageData::IsInitialized() const {
  return true;
}

void ImageData::InternalSwap(ImageData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(metadata_, other->metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImageData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SparsePointCloudData::InitAsDefaultInstance() {
  ::_SparsePointCloudData_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::SparsePointCloudMetaData*>(
      ::SparsePointCloudMetaData::internal_default_instance());
}
class SparsePointCloudData::_Internal {
 public:
  static const ::SparsePointCloudMetaData& metadata(const SparsePointCloudData* msg);
};

const ::SparsePointCloudMetaData&
SparsePointCloudData::_Internal::metadata(const SparsePointCloudData* msg) {
  return *msg->metadata_;
}
SparsePointCloudData::SparsePointCloudData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SparsePointCloudData)
}
SparsePointCloudData::SparsePointCloudData(const SparsePointCloudData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::SparsePointCloudMetaData(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:SparsePointCloudData)
}

void SparsePointCloudData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SparsePointCloudData_server_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metadata_ = nullptr;
}

SparsePointCloudData::~SparsePointCloudData() {
  // @@protoc_insertion_point(destructor:SparsePointCloudData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SparsePointCloudData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void SparsePointCloudData::ArenaDtor(void* object) {
  SparsePointCloudData* _this = reinterpret_cast< SparsePointCloudData* >(object);
  (void)_this;
}
void SparsePointCloudData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SparsePointCloudData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SparsePointCloudData& SparsePointCloudData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SparsePointCloudData_server_2eproto.base);
  return *internal_default_instance();
}


void SparsePointCloudData::Clear() {
// @@protoc_insertion_point(message_clear_start:SparsePointCloudData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SparsePointCloudData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .SparsePointCloudMetaData metadata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SparsePointCloudData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SparsePointCloudData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  // .SparsePointCloudMetaData metadata = 2;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SparsePointCloudData)
  return target;
}

size_t SparsePointCloudData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SparsePointCloudData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // .SparsePointCloudMetaData metadata = 2;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SparsePointCloudData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SparsePointCloudData)
  GOOGLE_DCHECK_NE(&from, this);
  const SparsePointCloudData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SparsePointCloudData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SparsePointCloudData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SparsePointCloudData)
    MergeFrom(*source);
  }
}

void SparsePointCloudData::MergeFrom(const SparsePointCloudData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SparsePointCloudData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->::SparsePointCloudMetaData::MergeFrom(from._internal_metadata());
  }
}

void SparsePointCloudData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SparsePointCloudData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SparsePointCloudData::CopyFrom(const SparsePointCloudData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SparsePointCloudData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SparsePointCloudData::IsInitialized() const {
  return true;
}

void SparsePointCloudData::InternalSwap(SparsePointCloudData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(metadata_, other->metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SparsePointCloudData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SparsePointCloudMetaData::InitAsDefaultInstance() {
}
class SparsePointCloudMetaData::_Internal {
 public:
};

SparsePointCloudMetaData::SparsePointCloudMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SparsePointCloudMetaData)
}
SparsePointCloudMetaData::SparsePointCloudMetaData(const SparsePointCloudMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  reconstruction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction().empty()) {
    reconstruction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction(),
      GetArena());
  }
  mvs_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mvs_path().empty()) {
    mvs_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mvs_path(),
      GetArena());
  }
  ply_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ply_path().empty()) {
    ply_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ply_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:SparsePointCloudMetaData)
}

void SparsePointCloudMetaData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SparsePointCloudMetaData_server_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reconstruction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mvs_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ply_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SparsePointCloudMetaData::~SparsePointCloudMetaData() {
  // @@protoc_insertion_point(destructor:SparsePointCloudMetaData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SparsePointCloudMetaData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reconstruction_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mvs_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ply_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SparsePointCloudMetaData::ArenaDtor(void* object) {
  SparsePointCloudMetaData* _this = reinterpret_cast< SparsePointCloudMetaData* >(object);
  (void)_this;
}
void SparsePointCloudMetaData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SparsePointCloudMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SparsePointCloudMetaData& SparsePointCloudMetaData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SparsePointCloudMetaData_server_2eproto.base);
  return *internal_default_instance();
}


void SparsePointCloudMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:SparsePointCloudMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reconstruction_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mvs_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ply_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SparsePointCloudMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SparsePointCloudMetaData.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string reconstruction = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_reconstruction();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SparsePointCloudMetaData.reconstruction"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mvs_path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_mvs_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SparsePointCloudMetaData.mvs_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ply_path = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_ply_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SparsePointCloudMetaData.ply_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SparsePointCloudMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SparsePointCloudMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SparsePointCloudMetaData.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string reconstruction = 2;
  if (this->reconstruction().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction().data(), static_cast<int>(this->_internal_reconstruction().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SparsePointCloudMetaData.reconstruction");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_reconstruction(), target);
  }

  // string mvs_path = 3;
  if (this->mvs_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mvs_path().data(), static_cast<int>(this->_internal_mvs_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SparsePointCloudMetaData.mvs_path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_mvs_path(), target);
  }

  // string ply_path = 4;
  if (this->ply_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ply_path().data(), static_cast<int>(this->_internal_ply_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SparsePointCloudMetaData.ply_path");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_ply_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SparsePointCloudMetaData)
  return target;
}

size_t SparsePointCloudMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SparsePointCloudMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string reconstruction = 2;
  if (this->reconstruction().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction());
  }

  // string mvs_path = 3;
  if (this->mvs_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mvs_path());
  }

  // string ply_path = 4;
  if (this->ply_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ply_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SparsePointCloudMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SparsePointCloudMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const SparsePointCloudMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SparsePointCloudMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SparsePointCloudMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SparsePointCloudMetaData)
    MergeFrom(*source);
  }
}

void SparsePointCloudMetaData::MergeFrom(const SparsePointCloudMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SparsePointCloudMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.reconstruction().size() > 0) {
    _internal_set_reconstruction(from._internal_reconstruction());
  }
  if (from.mvs_path().size() > 0) {
    _internal_set_mvs_path(from._internal_mvs_path());
  }
  if (from.ply_path().size() > 0) {
    _internal_set_ply_path(from._internal_ply_path());
  }
}

void SparsePointCloudMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SparsePointCloudMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SparsePointCloudMetaData::CopyFrom(const SparsePointCloudMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SparsePointCloudMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SparsePointCloudMetaData::IsInitialized() const {
  return true;
}

void SparsePointCloudMetaData::InternalSwap(SparsePointCloudMetaData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reconstruction_.Swap(&other->reconstruction_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mvs_path_.Swap(&other->mvs_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ply_path_.Swap(&other->ply_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SparsePointCloudMetaData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OBJMetaData::InitAsDefaultInstance() {
}
class OBJMetaData::_Internal {
 public:
};

OBJMetaData::OBJMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:OBJMetaData)
}
OBJMetaData::OBJMetaData(const OBJMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  reconstruction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction().empty()) {
    reconstruction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  texture_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_texture_path().empty()) {
    texture_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_texture_path(),
      GetArena());
  }
  mtl_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mtl_path().empty()) {
    mtl_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mtl_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:OBJMetaData)
}

void OBJMetaData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OBJMetaData_server_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reconstruction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  texture_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mtl_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

OBJMetaData::~OBJMetaData() {
  // @@protoc_insertion_point(destructor:OBJMetaData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OBJMetaData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reconstruction_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  texture_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mtl_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OBJMetaData::ArenaDtor(void* object) {
  OBJMetaData* _this = reinterpret_cast< OBJMetaData* >(object);
  (void)_this;
}
void OBJMetaData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OBJMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OBJMetaData& OBJMetaData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OBJMetaData_server_2eproto.base);
  return *internal_default_instance();
}


void OBJMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:OBJMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reconstruction_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  texture_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mtl_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OBJMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OBJMetaData.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string reconstruction = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_reconstruction();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OBJMetaData.reconstruction"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OBJMetaData.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string texture_path = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_texture_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OBJMetaData.texture_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mtl_path = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_mtl_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OBJMetaData.mtl_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OBJMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OBJMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OBJMetaData.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string reconstruction = 2;
  if (this->reconstruction().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction().data(), static_cast<int>(this->_internal_reconstruction().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OBJMetaData.reconstruction");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_reconstruction(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OBJMetaData.path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_path(), target);
  }

  // string texture_path = 4;
  if (this->texture_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_texture_path().data(), static_cast<int>(this->_internal_texture_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OBJMetaData.texture_path");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_texture_path(), target);
  }

  // string mtl_path = 5;
  if (this->mtl_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mtl_path().data(), static_cast<int>(this->_internal_mtl_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OBJMetaData.mtl_path");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_mtl_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OBJMetaData)
  return target;
}

size_t OBJMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OBJMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string reconstruction = 2;
  if (this->reconstruction().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction());
  }

  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string texture_path = 4;
  if (this->texture_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_texture_path());
  }

  // string mtl_path = 5;
  if (this->mtl_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mtl_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OBJMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OBJMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const OBJMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OBJMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OBJMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OBJMetaData)
    MergeFrom(*source);
  }
}

void OBJMetaData::MergeFrom(const OBJMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OBJMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.reconstruction().size() > 0) {
    _internal_set_reconstruction(from._internal_reconstruction());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.texture_path().size() > 0) {
    _internal_set_texture_path(from._internal_texture_path());
  }
  if (from.mtl_path().size() > 0) {
    _internal_set_mtl_path(from._internal_mtl_path());
  }
}

void OBJMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OBJMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OBJMetaData::CopyFrom(const OBJMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OBJMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OBJMetaData::IsInitialized() const {
  return true;
}

void OBJMetaData::InternalSwap(OBJMetaData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reconstruction_.Swap(&other->reconstruction_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  texture_path_.Swap(&other->texture_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mtl_path_.Swap(&other->mtl_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata OBJMetaData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OBJData::InitAsDefaultInstance() {
  ::_OBJData_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::OBJMetaData*>(
      ::OBJMetaData::internal_default_instance());
}
class OBJData::_Internal {
 public:
  static const ::OBJMetaData& metadata(const OBJData* msg);
};

const ::OBJMetaData&
OBJData::_Internal::metadata(const OBJData* msg) {
  return *msg->metadata_;
}
OBJData::OBJData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:OBJData)
}
OBJData::OBJData(const OBJData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  obj_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_obj_data().empty()) {
    obj_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_obj_data(),
      GetArena());
  }
  texture_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_texture_data().empty()) {
    texture_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_texture_data(),
      GetArena());
  }
  mtl_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mtl_data().empty()) {
    mtl_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mtl_data(),
      GetArena());
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::OBJMetaData(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OBJData)
}

void OBJData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OBJData_server_2eproto.base);
  obj_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  texture_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mtl_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metadata_ = nullptr;
}

OBJData::~OBJData() {
  // @@protoc_insertion_point(destructor:OBJData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OBJData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  obj_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  texture_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mtl_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void OBJData::ArenaDtor(void* object) {
  OBJData* _this = reinterpret_cast< OBJData* >(object);
  (void)_this;
}
void OBJData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OBJData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OBJData& OBJData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OBJData_server_2eproto.base);
  return *internal_default_instance();
}


void OBJData::Clear() {
// @@protoc_insertion_point(message_clear_start:OBJData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  texture_data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mtl_data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OBJData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes obj_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_obj_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes texture_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_texture_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes mtl_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_mtl_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .OBJMetaData metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OBJData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OBJData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes obj_data = 1;
  if (this->obj_data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_obj_data(), target);
  }

  // bytes texture_data = 2;
  if (this->texture_data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_texture_data(), target);
  }

  // bytes mtl_data = 3;
  if (this->mtl_data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_mtl_data(), target);
  }

  // .OBJMetaData metadata = 4;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OBJData)
  return target;
}

size_t OBJData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OBJData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes obj_data = 1;
  if (this->obj_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_obj_data());
  }

  // bytes texture_data = 2;
  if (this->texture_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_texture_data());
  }

  // bytes mtl_data = 3;
  if (this->mtl_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_mtl_data());
  }

  // .OBJMetaData metadata = 4;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OBJData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OBJData)
  GOOGLE_DCHECK_NE(&from, this);
  const OBJData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OBJData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OBJData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OBJData)
    MergeFrom(*source);
  }
}

void OBJData::MergeFrom(const OBJData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OBJData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_data().size() > 0) {
    _internal_set_obj_data(from._internal_obj_data());
  }
  if (from.texture_data().size() > 0) {
    _internal_set_texture_data(from._internal_texture_data());
  }
  if (from.mtl_data().size() > 0) {
    _internal_set_mtl_data(from._internal_mtl_data());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->::OBJMetaData::MergeFrom(from._internal_metadata());
  }
}

void OBJData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OBJData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OBJData::CopyFrom(const OBJData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OBJData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OBJData::IsInitialized() const {
  return true;
}

void OBJData::InternalSwap(OBJData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  obj_data_.Swap(&other->obj_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  texture_data_.Swap(&other->texture_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mtl_data_.Swap(&other->mtl_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(metadata_, other->metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OBJData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReconstructionData::InitAsDefaultInstance() {
}
class ReconstructionData::_Internal {
 public:
};

ReconstructionData::ReconstructionData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  images_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ReconstructionData)
}
ReconstructionData::ReconstructionData(const ReconstructionData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      images_(from.images_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_root().empty()) {
    root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_root(),
      GetArena());
  }
  sparse_reconstruction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sparse_reconstruction().empty()) {
    sparse_reconstruction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sparse_reconstruction(),
      GetArena());
  }
  obj_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_obj().empty()) {
    obj_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_obj(),
      GetArena());
  }
  images_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_images_path().empty()) {
    images_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_images_path(),
      GetArena());
  }
  sfm_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sfm_path().empty()) {
    sfm_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sfm_path(),
      GetArena());
  }
  mvs_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mvs_path().empty()) {
    mvs_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mvs_path(),
      GetArena());
  }
  features_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_features_path().empty()) {
    features_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_features_path(),
      GetArena());
  }
  matches_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches_path().empty()) {
    matches_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_matches_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ReconstructionData)
}

void ReconstructionData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReconstructionData_server_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sparse_reconstruction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  images_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sfm_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mvs_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  features_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  matches_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReconstructionData::~ReconstructionData() {
  // @@protoc_insertion_point(destructor:ReconstructionData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReconstructionData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sparse_reconstruction_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  images_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sfm_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mvs_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  features_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  matches_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReconstructionData::ArenaDtor(void* object) {
  ReconstructionData* _this = reinterpret_cast< ReconstructionData* >(object);
  (void)_this;
}
void ReconstructionData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReconstructionData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReconstructionData& ReconstructionData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReconstructionData_server_2eproto.base);
  return *internal_default_instance();
}


void ReconstructionData::Clear() {
// @@protoc_insertion_point(message_clear_start:ReconstructionData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sparse_reconstruction_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  obj_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  images_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sfm_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mvs_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  features_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  matches_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReconstructionData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ReconstructionData.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string root = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ReconstructionData.root"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string images = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_images();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ReconstructionData.images"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string sparse_reconstruction = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_sparse_reconstruction();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ReconstructionData.sparse_reconstruction"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string obj = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_obj();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ReconstructionData.obj"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string images_path = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_images_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ReconstructionData.images_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sfm_path = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_sfm_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ReconstructionData.sfm_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mvs_path = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_mvs_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ReconstructionData.mvs_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string features_path = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_features_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ReconstructionData.features_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string matches_path = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_matches_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ReconstructionData.matches_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReconstructionData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReconstructionData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReconstructionData.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string root = 2;
  if (this->root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_root().data(), static_cast<int>(this->_internal_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReconstructionData.root");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_root(), target);
  }

  // repeated string images = 3;
  for (int i = 0, n = this->_internal_images_size(); i < n; i++) {
    const auto& s = this->_internal_images(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReconstructionData.images");
    target = stream->WriteString(3, s, target);
  }

  // string sparse_reconstruction = 4;
  if (this->sparse_reconstruction().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sparse_reconstruction().data(), static_cast<int>(this->_internal_sparse_reconstruction().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReconstructionData.sparse_reconstruction");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sparse_reconstruction(), target);
  }

  // string obj = 5;
  if (this->obj().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_obj().data(), static_cast<int>(this->_internal_obj().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReconstructionData.obj");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_obj(), target);
  }

  // string images_path = 6;
  if (this->images_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_images_path().data(), static_cast<int>(this->_internal_images_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReconstructionData.images_path");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_images_path(), target);
  }

  // string sfm_path = 7;
  if (this->sfm_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sfm_path().data(), static_cast<int>(this->_internal_sfm_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReconstructionData.sfm_path");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_sfm_path(), target);
  }

  // string mvs_path = 8;
  if (this->mvs_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mvs_path().data(), static_cast<int>(this->_internal_mvs_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReconstructionData.mvs_path");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_mvs_path(), target);
  }

  // string features_path = 9;
  if (this->features_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_features_path().data(), static_cast<int>(this->_internal_features_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReconstructionData.features_path");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_features_path(), target);
  }

  // string matches_path = 10;
  if (this->matches_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_matches_path().data(), static_cast<int>(this->_internal_matches_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReconstructionData.matches_path");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_matches_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReconstructionData)
  return target;
}

size_t ReconstructionData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReconstructionData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string images = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(images_.size());
  for (int i = 0, n = images_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      images_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string root = 2;
  if (this->root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_root());
  }

  // string sparse_reconstruction = 4;
  if (this->sparse_reconstruction().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sparse_reconstruction());
  }

  // string obj = 5;
  if (this->obj().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_obj());
  }

  // string images_path = 6;
  if (this->images_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_images_path());
  }

  // string sfm_path = 7;
  if (this->sfm_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sfm_path());
  }

  // string mvs_path = 8;
  if (this->mvs_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mvs_path());
  }

  // string features_path = 9;
  if (this->features_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_features_path());
  }

  // string matches_path = 10;
  if (this->matches_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_matches_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReconstructionData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReconstructionData)
  GOOGLE_DCHECK_NE(&from, this);
  const ReconstructionData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReconstructionData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReconstructionData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReconstructionData)
    MergeFrom(*source);
  }
}

void ReconstructionData::MergeFrom(const ReconstructionData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReconstructionData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.root().size() > 0) {
    _internal_set_root(from._internal_root());
  }
  if (from.sparse_reconstruction().size() > 0) {
    _internal_set_sparse_reconstruction(from._internal_sparse_reconstruction());
  }
  if (from.obj().size() > 0) {
    _internal_set_obj(from._internal_obj());
  }
  if (from.images_path().size() > 0) {
    _internal_set_images_path(from._internal_images_path());
  }
  if (from.sfm_path().size() > 0) {
    _internal_set_sfm_path(from._internal_sfm_path());
  }
  if (from.mvs_path().size() > 0) {
    _internal_set_mvs_path(from._internal_mvs_path());
  }
  if (from.features_path().size() > 0) {
    _internal_set_features_path(from._internal_features_path());
  }
  if (from.matches_path().size() > 0) {
    _internal_set_matches_path(from._internal_matches_path());
  }
}

void ReconstructionData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReconstructionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconstructionData::CopyFrom(const ReconstructionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReconstructionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconstructionData::IsInitialized() const {
  return true;
}

void ReconstructionData::InternalSwap(ReconstructionData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  images_.InternalSwap(&other->images_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  root_.Swap(&other->root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sparse_reconstruction_.Swap(&other->sparse_reconstruction_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  obj_.Swap(&other->obj_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  images_path_.Swap(&other->images_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sfm_path_.Swap(&other->sfm_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mvs_path_.Swap(&other->mvs_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  features_path_.Swap(&other->features_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  matches_path_.Swap(&other->matches_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReconstructionData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReconstructionUploadImageResponse::InitAsDefaultInstance() {
}
class ReconstructionUploadImageResponse::_Internal {
 public:
};

ReconstructionUploadImageResponse::ReconstructionUploadImageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ReconstructionUploadImageResponse)
}
ReconstructionUploadImageResponse::ReconstructionUploadImageResponse(const ReconstructionUploadImageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_id().empty()) {
    image_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_image_id(),
      GetArena());
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:ReconstructionUploadImageResponse)
}

void ReconstructionUploadImageResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReconstructionUploadImageResponse_server_2eproto.base);
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

ReconstructionUploadImageResponse::~ReconstructionUploadImageResponse() {
  // @@protoc_insertion_point(destructor:ReconstructionUploadImageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReconstructionUploadImageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  image_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReconstructionUploadImageResponse::ArenaDtor(void* object) {
  ReconstructionUploadImageResponse* _this = reinterpret_cast< ReconstructionUploadImageResponse* >(object);
  (void)_this;
}
void ReconstructionUploadImageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReconstructionUploadImageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReconstructionUploadImageResponse& ReconstructionUploadImageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReconstructionUploadImageResponse_server_2eproto.base);
  return *internal_default_instance();
}


void ReconstructionUploadImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ReconstructionUploadImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReconstructionUploadImageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ReconstructionUploadImageResponse.image_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReconstructionUploadImageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReconstructionUploadImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_id().data(), static_cast<int>(this->_internal_image_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReconstructionUploadImageResponse.image_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_image_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReconstructionUploadImageResponse)
  return target;
}

size_t ReconstructionUploadImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReconstructionUploadImageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_id());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReconstructionUploadImageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReconstructionUploadImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReconstructionUploadImageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReconstructionUploadImageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReconstructionUploadImageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReconstructionUploadImageResponse)
    MergeFrom(*source);
  }
}

void ReconstructionUploadImageResponse::MergeFrom(const ReconstructionUploadImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReconstructionUploadImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_id().size() > 0) {
    _internal_set_image_id(from._internal_image_id());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void ReconstructionUploadImageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReconstructionUploadImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconstructionUploadImageResponse::CopyFrom(const ReconstructionUploadImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReconstructionUploadImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconstructionUploadImageResponse::IsInitialized() const {
  return true;
}

void ReconstructionUploadImageResponse::InternalSwap(ReconstructionUploadImageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  image_id_.Swap(&other->image_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReconstructionUploadImageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReconstructionUploadImageRequest::InitAsDefaultInstance() {
  ::_ReconstructionUploadImageRequest_default_instance_._instance.get_mutable()->image_ = const_cast< ::ImageData*>(
      ::ImageData::internal_default_instance());
}
class ReconstructionUploadImageRequest::_Internal {
 public:
  static const ::ImageData& image(const ReconstructionUploadImageRequest* msg);
};

const ::ImageData&
ReconstructionUploadImageRequest::_Internal::image(const ReconstructionUploadImageRequest* msg) {
  return *msg->image_;
}
ReconstructionUploadImageRequest::ReconstructionUploadImageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ReconstructionUploadImageRequest)
}
ReconstructionUploadImageRequest::ReconstructionUploadImageRequest(const ReconstructionUploadImageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  if (from._internal_has_image()) {
    image_ = new ::ImageData(*from.image_);
  } else {
    image_ = nullptr;
  }
  compute_matches_ = from.compute_matches_;
  // @@protoc_insertion_point(copy_constructor:ReconstructionUploadImageRequest)
}

void ReconstructionUploadImageRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReconstructionUploadImageRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&image_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compute_matches_) -
      reinterpret_cast<char*>(&image_)) + sizeof(compute_matches_));
}

ReconstructionUploadImageRequest::~ReconstructionUploadImageRequest() {
  // @@protoc_insertion_point(destructor:ReconstructionUploadImageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReconstructionUploadImageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete image_;
}

void ReconstructionUploadImageRequest::ArenaDtor(void* object) {
  ReconstructionUploadImageRequest* _this = reinterpret_cast< ReconstructionUploadImageRequest* >(object);
  (void)_this;
}
void ReconstructionUploadImageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReconstructionUploadImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReconstructionUploadImageRequest& ReconstructionUploadImageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReconstructionUploadImageRequest_server_2eproto.base);
  return *internal_default_instance();
}


void ReconstructionUploadImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ReconstructionUploadImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && image_ != nullptr) {
    delete image_;
  }
  image_ = nullptr;
  compute_matches_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReconstructionUploadImageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ReconstructionUploadImageRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool compute_matches = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          compute_matches_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ImageData image = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_image(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReconstructionUploadImageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReconstructionUploadImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReconstructionUploadImageRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  // bool compute_matches = 2;
  if (this->compute_matches() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_compute_matches(), target);
  }

  // .ImageData image = 3;
  if (this->has_image()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::image(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReconstructionUploadImageRequest)
  return target;
}

size_t ReconstructionUploadImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReconstructionUploadImageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  // .ImageData image = 3;
  if (this->has_image()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *image_);
  }

  // bool compute_matches = 2;
  if (this->compute_matches() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReconstructionUploadImageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReconstructionUploadImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReconstructionUploadImageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReconstructionUploadImageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReconstructionUploadImageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReconstructionUploadImageRequest)
    MergeFrom(*source);
  }
}

void ReconstructionUploadImageRequest::MergeFrom(const ReconstructionUploadImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReconstructionUploadImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
  if (from.has_image()) {
    _internal_mutable_image()->::ImageData::MergeFrom(from._internal_image());
  }
  if (from.compute_matches() != 0) {
    _internal_set_compute_matches(from._internal_compute_matches());
  }
}

void ReconstructionUploadImageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReconstructionUploadImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconstructionUploadImageRequest::CopyFrom(const ReconstructionUploadImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReconstructionUploadImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconstructionUploadImageRequest::IsInitialized() const {
  return true;
}

void ReconstructionUploadImageRequest::InternalSwap(ReconstructionUploadImageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReconstructionUploadImageRequest, compute_matches_)
      + sizeof(ReconstructionUploadImageRequest::compute_matches_)
      - PROTOBUF_FIELD_OFFSET(ReconstructionUploadImageRequest, image_)>(
          reinterpret_cast<char*>(&image_),
          reinterpret_cast<char*>(&other->image_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReconstructionUploadImageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NewReconstructionRequest::InitAsDefaultInstance() {
}
class NewReconstructionRequest::_Internal {
 public:
};

NewReconstructionRequest::NewReconstructionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NewReconstructionRequest)
}
NewReconstructionRequest::NewReconstructionRequest(const NewReconstructionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NewReconstructionRequest)
}

void NewReconstructionRequest::SharedCtor() {
}

NewReconstructionRequest::~NewReconstructionRequest() {
  // @@protoc_insertion_point(destructor:NewReconstructionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NewReconstructionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void NewReconstructionRequest::ArenaDtor(void* object) {
  NewReconstructionRequest* _this = reinterpret_cast< NewReconstructionRequest* >(object);
  (void)_this;
}
void NewReconstructionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NewReconstructionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NewReconstructionRequest& NewReconstructionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NewReconstructionRequest_server_2eproto.base);
  return *internal_default_instance();
}


void NewReconstructionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NewReconstructionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewReconstructionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NewReconstructionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NewReconstructionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NewReconstructionRequest)
  return target;
}

size_t NewReconstructionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NewReconstructionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewReconstructionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NewReconstructionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NewReconstructionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NewReconstructionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NewReconstructionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NewReconstructionRequest)
    MergeFrom(*source);
  }
}

void NewReconstructionRequest::MergeFrom(const NewReconstructionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NewReconstructionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void NewReconstructionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NewReconstructionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewReconstructionRequest::CopyFrom(const NewReconstructionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NewReconstructionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewReconstructionRequest::IsInitialized() const {
  return true;
}

void NewReconstructionRequest::InternalSwap(NewReconstructionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NewReconstructionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NewReconstructionResponse::InitAsDefaultInstance() {
}
class NewReconstructionResponse::_Internal {
 public:
};

NewReconstructionResponse::NewReconstructionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NewReconstructionResponse)
}
NewReconstructionResponse::NewReconstructionResponse(const NewReconstructionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:NewReconstructionResponse)
}

void NewReconstructionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NewReconstructionResponse_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

NewReconstructionResponse::~NewReconstructionResponse() {
  // @@protoc_insertion_point(destructor:NewReconstructionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NewReconstructionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NewReconstructionResponse::ArenaDtor(void* object) {
  NewReconstructionResponse* _this = reinterpret_cast< NewReconstructionResponse* >(object);
  (void)_this;
}
void NewReconstructionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NewReconstructionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NewReconstructionResponse& NewReconstructionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NewReconstructionResponse_server_2eproto.base);
  return *internal_default_instance();
}


void NewReconstructionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NewReconstructionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewReconstructionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "NewReconstructionResponse.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NewReconstructionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NewReconstructionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NewReconstructionResponse.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NewReconstructionResponse)
  return target;
}

size_t NewReconstructionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NewReconstructionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewReconstructionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NewReconstructionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NewReconstructionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NewReconstructionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NewReconstructionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NewReconstructionResponse)
    MergeFrom(*source);
  }
}

void NewReconstructionResponse::MergeFrom(const NewReconstructionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NewReconstructionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
}

void NewReconstructionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NewReconstructionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewReconstructionResponse::CopyFrom(const NewReconstructionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NewReconstructionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewReconstructionResponse::IsInitialized() const {
  return true;
}

void NewReconstructionResponse::InternalSwap(NewReconstructionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata NewReconstructionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SparseReconstructRequest::InitAsDefaultInstance() {
}
class SparseReconstructRequest::_Internal {
 public:
};

SparseReconstructRequest::SparseReconstructRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SparseReconstructRequest)
}
SparseReconstructRequest::SparseReconstructRequest(const SparseReconstructRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:SparseReconstructRequest)
}

void SparseReconstructRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SparseReconstructRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SparseReconstructRequest::~SparseReconstructRequest() {
  // @@protoc_insertion_point(destructor:SparseReconstructRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SparseReconstructRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SparseReconstructRequest::ArenaDtor(void* object) {
  SparseReconstructRequest* _this = reinterpret_cast< SparseReconstructRequest* >(object);
  (void)_this;
}
void SparseReconstructRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SparseReconstructRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SparseReconstructRequest& SparseReconstructRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SparseReconstructRequest_server_2eproto.base);
  return *internal_default_instance();
}


void SparseReconstructRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SparseReconstructRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SparseReconstructRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SparseReconstructRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SparseReconstructRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SparseReconstructRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SparseReconstructRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SparseReconstructRequest)
  return target;
}

size_t SparseReconstructRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SparseReconstructRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SparseReconstructRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SparseReconstructRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SparseReconstructRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SparseReconstructRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SparseReconstructRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SparseReconstructRequest)
    MergeFrom(*source);
  }
}

void SparseReconstructRequest::MergeFrom(const SparseReconstructRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SparseReconstructRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
}

void SparseReconstructRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SparseReconstructRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SparseReconstructRequest::CopyFrom(const SparseReconstructRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SparseReconstructRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SparseReconstructRequest::IsInitialized() const {
  return true;
}

void SparseReconstructRequest::InternalSwap(SparseReconstructRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SparseReconstructRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOBJRequest::InitAsDefaultInstance() {
}
class GetOBJRequest::_Internal {
 public:
};

GetOBJRequest::GetOBJRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetOBJRequest)
}
GetOBJRequest::GetOBJRequest(const GetOBJRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GetOBJRequest)
}

void GetOBJRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOBJRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetOBJRequest::~GetOBJRequest() {
  // @@protoc_insertion_point(destructor:GetOBJRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOBJRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetOBJRequest::ArenaDtor(void* object) {
  GetOBJRequest* _this = reinterpret_cast< GetOBJRequest* >(object);
  (void)_this;
}
void GetOBJRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOBJRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOBJRequest& GetOBJRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOBJRequest_server_2eproto.base);
  return *internal_default_instance();
}


void GetOBJRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetOBJRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOBJRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetOBJRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOBJRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetOBJRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetOBJRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetOBJRequest)
  return target;
}

size_t GetOBJRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetOBJRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOBJRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetOBJRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOBJRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOBJRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetOBJRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetOBJRequest)
    MergeFrom(*source);
  }
}

void GetOBJRequest::MergeFrom(const GetOBJRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetOBJRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
}

void GetOBJRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetOBJRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOBJRequest::CopyFrom(const GetOBJRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetOBJRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOBJRequest::IsInitialized() const {
  return true;
}

void GetOBJRequest::InternalSwap(GetOBJRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOBJRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOBJResponse::InitAsDefaultInstance() {
  ::_GetOBJResponse_default_instance_._instance.get_mutable()->obj_ = const_cast< ::OBJData*>(
      ::OBJData::internal_default_instance());
}
class GetOBJResponse::_Internal {
 public:
  static const ::OBJData& obj(const GetOBJResponse* msg);
};

const ::OBJData&
GetOBJResponse::_Internal::obj(const GetOBJResponse* msg) {
  return *msg->obj_;
}
GetOBJResponse::GetOBJResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetOBJResponse)
}
GetOBJResponse::GetOBJResponse(const GetOBJResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_obj()) {
    obj_ = new ::OBJData(*from.obj_);
  } else {
    obj_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:GetOBJResponse)
}

void GetOBJResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOBJResponse_server_2eproto.base);
  ::memset(&obj_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&obj_)) + sizeof(success_));
}

GetOBJResponse::~GetOBJResponse() {
  // @@protoc_insertion_point(destructor:GetOBJResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOBJResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete obj_;
}

void GetOBJResponse::ArenaDtor(void* object) {
  GetOBJResponse* _this = reinterpret_cast< GetOBJResponse* >(object);
  (void)_this;
}
void GetOBJResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOBJResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOBJResponse& GetOBJResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOBJResponse_server_2eproto.base);
  return *internal_default_instance();
}


void GetOBJResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetOBJResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && obj_ != nullptr) {
    delete obj_;
  }
  obj_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOBJResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .OBJData obj = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_obj(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOBJResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetOBJResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // .OBJData obj = 2;
  if (this->has_obj()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::obj(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetOBJResponse)
  return target;
}

size_t GetOBJResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetOBJResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OBJData obj = 2;
  if (this->has_obj()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *obj_);
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOBJResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetOBJResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOBJResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOBJResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetOBJResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetOBJResponse)
    MergeFrom(*source);
  }
}

void GetOBJResponse::MergeFrom(const GetOBJResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetOBJResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_obj()) {
    _internal_mutable_obj()->::OBJData::MergeFrom(from._internal_obj());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void GetOBJResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetOBJResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOBJResponse::CopyFrom(const GetOBJResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetOBJResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOBJResponse::IsInitialized() const {
  return true;
}

void GetOBJResponse::InternalSwap(GetOBJResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetOBJResponse, success_)
      + sizeof(GetOBJResponse::success_)
      - PROTOBUF_FIELD_OFFSET(GetOBJResponse, obj_)>(
          reinterpret_cast<char*>(&obj_),
          reinterpret_cast<char*>(&other->obj_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOBJResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SparseReconstructResponse::InitAsDefaultInstance() {
}
class SparseReconstructResponse::_Internal {
 public:
};

SparseReconstructResponse::SparseReconstructResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SparseReconstructResponse)
}
SparseReconstructResponse::SparseReconstructResponse(const SparseReconstructResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_msg().empty()) {
    error_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_msg(),
      GetArena());
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:SparseReconstructResponse)
}

void SparseReconstructResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SparseReconstructResponse_server_2eproto.base);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

SparseReconstructResponse::~SparseReconstructResponse() {
  // @@protoc_insertion_point(destructor:SparseReconstructResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SparseReconstructResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SparseReconstructResponse::ArenaDtor(void* object) {
  SparseReconstructResponse* _this = reinterpret_cast< SparseReconstructResponse* >(object);
  (void)_this;
}
void SparseReconstructResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SparseReconstructResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SparseReconstructResponse& SparseReconstructResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SparseReconstructResponse_server_2eproto.base);
  return *internal_default_instance();
}


void SparseReconstructResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SparseReconstructResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SparseReconstructResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SparseReconstructResponse.error_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SparseReconstructResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SparseReconstructResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SparseReconstructResponse.error_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SparseReconstructResponse)
  return target;
}

size_t SparseReconstructResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SparseReconstructResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SparseReconstructResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SparseReconstructResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SparseReconstructResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SparseReconstructResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SparseReconstructResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SparseReconstructResponse)
    MergeFrom(*source);
  }
}

void SparseReconstructResponse::MergeFrom(const SparseReconstructResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SparseReconstructResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {
    _internal_set_error_msg(from._internal_error_msg());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void SparseReconstructResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SparseReconstructResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SparseReconstructResponse::CopyFrom(const SparseReconstructResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SparseReconstructResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SparseReconstructResponse::IsInitialized() const {
  return true;
}

void SparseReconstructResponse::InternalSwap(SparseReconstructResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SparseReconstructResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReconstructionOBJ::InitAsDefaultInstance() {
}
class ReconstructionOBJ::_Internal {
 public:
};

ReconstructionOBJ::ReconstructionOBJ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ReconstructionOBJ)
}
ReconstructionOBJ::ReconstructionOBJ(const ReconstructionOBJ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  obj_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_obj().empty()) {
    obj_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_obj(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ReconstructionOBJ)
}

void ReconstructionOBJ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReconstructionOBJ_server_2eproto.base);
  obj_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReconstructionOBJ::~ReconstructionOBJ() {
  // @@protoc_insertion_point(destructor:ReconstructionOBJ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReconstructionOBJ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  obj_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReconstructionOBJ::ArenaDtor(void* object) {
  ReconstructionOBJ* _this = reinterpret_cast< ReconstructionOBJ* >(object);
  (void)_this;
}
void ReconstructionOBJ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReconstructionOBJ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReconstructionOBJ& ReconstructionOBJ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReconstructionOBJ_server_2eproto.base);
  return *internal_default_instance();
}


void ReconstructionOBJ::Clear() {
// @@protoc_insertion_point(message_clear_start:ReconstructionOBJ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReconstructionOBJ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes obj = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_obj();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReconstructionOBJ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReconstructionOBJ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes obj = 1;
  if (this->obj().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_obj(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReconstructionOBJ)
  return target;
}

size_t ReconstructionOBJ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReconstructionOBJ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes obj = 1;
  if (this->obj().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_obj());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReconstructionOBJ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReconstructionOBJ)
  GOOGLE_DCHECK_NE(&from, this);
  const ReconstructionOBJ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReconstructionOBJ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReconstructionOBJ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReconstructionOBJ)
    MergeFrom(*source);
  }
}

void ReconstructionOBJ::MergeFrom(const ReconstructionOBJ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReconstructionOBJ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj().size() > 0) {
    _internal_set_obj(from._internal_obj());
  }
}

void ReconstructionOBJ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReconstructionOBJ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconstructionOBJ::CopyFrom(const ReconstructionOBJ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReconstructionOBJ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconstructionOBJ::IsInitialized() const {
  return true;
}

void ReconstructionOBJ::InternalSwap(ReconstructionOBJ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  obj_.Swap(&other->obj_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReconstructionOBJ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteReconstructionRequest::InitAsDefaultInstance() {
}
class DeleteReconstructionRequest::_Internal {
 public:
};

DeleteReconstructionRequest::DeleteReconstructionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:DeleteReconstructionRequest)
}
DeleteReconstructionRequest::DeleteReconstructionRequest(const DeleteReconstructionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:DeleteReconstructionRequest)
}

void DeleteReconstructionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteReconstructionRequest_server_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteReconstructionRequest::~DeleteReconstructionRequest() {
  // @@protoc_insertion_point(destructor:DeleteReconstructionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteReconstructionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteReconstructionRequest::ArenaDtor(void* object) {
  DeleteReconstructionRequest* _this = reinterpret_cast< DeleteReconstructionRequest* >(object);
  (void)_this;
}
void DeleteReconstructionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteReconstructionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteReconstructionRequest& DeleteReconstructionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteReconstructionRequest_server_2eproto.base);
  return *internal_default_instance();
}


void DeleteReconstructionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteReconstructionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteReconstructionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DeleteReconstructionRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteReconstructionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeleteReconstructionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeleteReconstructionRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteReconstructionRequest)
  return target;
}

size_t DeleteReconstructionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteReconstructionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteReconstructionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteReconstructionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteReconstructionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteReconstructionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteReconstructionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteReconstructionRequest)
    MergeFrom(*source);
  }
}

void DeleteReconstructionRequest::MergeFrom(const DeleteReconstructionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteReconstructionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteReconstructionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteReconstructionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteReconstructionRequest::CopyFrom(const DeleteReconstructionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteReconstructionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteReconstructionRequest::IsInitialized() const {
  return true;
}

void DeleteReconstructionRequest::InternalSwap(DeleteReconstructionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteReconstructionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteReconstructionResponse::InitAsDefaultInstance() {
}
class DeleteReconstructionResponse::_Internal {
 public:
};

DeleteReconstructionResponse::DeleteReconstructionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:DeleteReconstructionResponse)
}
DeleteReconstructionResponse::DeleteReconstructionResponse(const DeleteReconstructionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:DeleteReconstructionResponse)
}

void DeleteReconstructionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteReconstructionResponse_server_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

DeleteReconstructionResponse::~DeleteReconstructionResponse() {
  // @@protoc_insertion_point(destructor:DeleteReconstructionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteReconstructionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteReconstructionResponse::ArenaDtor(void* object) {
  DeleteReconstructionResponse* _this = reinterpret_cast< DeleteReconstructionResponse* >(object);
  (void)_this;
}
void DeleteReconstructionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteReconstructionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteReconstructionResponse& DeleteReconstructionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteReconstructionResponse_server_2eproto.base);
  return *internal_default_instance();
}


void DeleteReconstructionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteReconstructionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteReconstructionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DeleteReconstructionResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteReconstructionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeleteReconstructionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeleteReconstructionResponse.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteReconstructionResponse)
  return target;
}

size_t DeleteReconstructionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteReconstructionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteReconstructionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteReconstructionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteReconstructionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteReconstructionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteReconstructionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteReconstructionResponse)
    MergeFrom(*source);
  }
}

void DeleteReconstructionResponse::MergeFrom(const DeleteReconstructionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteReconstructionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void DeleteReconstructionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteReconstructionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteReconstructionResponse::CopyFrom(const DeleteReconstructionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteReconstructionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteReconstructionResponse::IsInitialized() const {
  return true;
}

void DeleteReconstructionResponse::InternalSwap(DeleteReconstructionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteReconstructionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CameraIntrinsics::InitAsDefaultInstance() {
}
class CameraIntrinsics::_Internal {
 public:
};

CameraIntrinsics::CameraIntrinsics(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CameraIntrinsics)
}
CameraIntrinsics::CameraIntrinsics(const CameraIntrinsics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model().empty()) {
    model_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_model(),
      GetArena());
  }
  maker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_maker().empty()) {
    maker_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_maker(),
      GetArena());
  }
  numeric_model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_numeric_model().empty()) {
    numeric_model_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_numeric_model(),
      GetArena());
  }
  focus_mode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_focus_mode().empty()) {
    focus_mode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_focus_mode(),
      GetArena());
  }
  ::memcpy(&sensor_size_, &from.sensor_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&jpeg_quality_) -
    reinterpret_cast<char*>(&sensor_size_)) + sizeof(jpeg_quality_));
  // @@protoc_insertion_point(copy_constructor:CameraIntrinsics)
}

void CameraIntrinsics::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CameraIntrinsics_server_2eproto.base);
  model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  maker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  numeric_model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  focus_mode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&sensor_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&jpeg_quality_) -
      reinterpret_cast<char*>(&sensor_size_)) + sizeof(jpeg_quality_));
}

CameraIntrinsics::~CameraIntrinsics() {
  // @@protoc_insertion_point(destructor:CameraIntrinsics)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CameraIntrinsics::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  model_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  maker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  numeric_model_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  focus_mode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CameraIntrinsics::ArenaDtor(void* object) {
  CameraIntrinsics* _this = reinterpret_cast< CameraIntrinsics* >(object);
  (void)_this;
}
void CameraIntrinsics::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CameraIntrinsics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CameraIntrinsics& CameraIntrinsics::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CameraIntrinsics_server_2eproto.base);
  return *internal_default_instance();
}


void CameraIntrinsics::Clear() {
// @@protoc_insertion_point(message_clear_start:CameraIntrinsics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  maker_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  numeric_model_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  focus_mode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&sensor_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&jpeg_quality_) -
      reinterpret_cast<char*>(&sensor_size_)) + sizeof(jpeg_quality_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CameraIntrinsics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_model();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CameraIntrinsics.model"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string maker = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_maker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CameraIntrinsics.maker"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string numeric_model = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_numeric_model();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CameraIntrinsics.numeric_model"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float sensor_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          sensor_size_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string focus_mode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_focus_mode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CameraIntrinsics.focus_mode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float horizontal_view_angle = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          horizontal_view_angle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 jpeg_quality = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          jpeg_quality_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CameraIntrinsics::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CameraIntrinsics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string model = 1;
  if (this->model().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model().data(), static_cast<int>(this->_internal_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CameraIntrinsics.model");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model(), target);
  }

  // string maker = 2;
  if (this->maker().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_maker().data(), static_cast<int>(this->_internal_maker().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CameraIntrinsics.maker");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_maker(), target);
  }

  // string numeric_model = 3;
  if (this->numeric_model().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_numeric_model().data(), static_cast<int>(this->_internal_numeric_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CameraIntrinsics.numeric_model");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_numeric_model(), target);
  }

  // float sensor_size = 4;
  if (!(this->sensor_size() <= 0 && this->sensor_size() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_sensor_size(), target);
  }

  // string focus_mode = 5;
  if (this->focus_mode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_focus_mode().data(), static_cast<int>(this->_internal_focus_mode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CameraIntrinsics.focus_mode");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_focus_mode(), target);
  }

  // float horizontal_view_angle = 6;
  if (!(this->horizontal_view_angle() <= 0 && this->horizontal_view_angle() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_horizontal_view_angle(), target);
  }

  // int32 jpeg_quality = 7;
  if (this->jpeg_quality() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_jpeg_quality(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CameraIntrinsics)
  return target;
}

size_t CameraIntrinsics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CameraIntrinsics)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string model = 1;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model());
  }

  // string maker = 2;
  if (this->maker().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_maker());
  }

  // string numeric_model = 3;
  if (this->numeric_model().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_numeric_model());
  }

  // string focus_mode = 5;
  if (this->focus_mode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_focus_mode());
  }

  // float sensor_size = 4;
  if (!(this->sensor_size() <= 0 && this->sensor_size() >= 0)) {
    total_size += 1 + 4;
  }

  // float horizontal_view_angle = 6;
  if (!(this->horizontal_view_angle() <= 0 && this->horizontal_view_angle() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 jpeg_quality = 7;
  if (this->jpeg_quality() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_jpeg_quality());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CameraIntrinsics::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CameraIntrinsics)
  GOOGLE_DCHECK_NE(&from, this);
  const CameraIntrinsics* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CameraIntrinsics>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CameraIntrinsics)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CameraIntrinsics)
    MergeFrom(*source);
  }
}

void CameraIntrinsics::MergeFrom(const CameraIntrinsics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CameraIntrinsics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.model().size() > 0) {
    _internal_set_model(from._internal_model());
  }
  if (from.maker().size() > 0) {
    _internal_set_maker(from._internal_maker());
  }
  if (from.numeric_model().size() > 0) {
    _internal_set_numeric_model(from._internal_numeric_model());
  }
  if (from.focus_mode().size() > 0) {
    _internal_set_focus_mode(from._internal_focus_mode());
  }
  if (!(from.sensor_size() <= 0 && from.sensor_size() >= 0)) {
    _internal_set_sensor_size(from._internal_sensor_size());
  }
  if (!(from.horizontal_view_angle() <= 0 && from.horizontal_view_angle() >= 0)) {
    _internal_set_horizontal_view_angle(from._internal_horizontal_view_angle());
  }
  if (from.jpeg_quality() != 0) {
    _internal_set_jpeg_quality(from._internal_jpeg_quality());
  }
}

void CameraIntrinsics::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CameraIntrinsics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CameraIntrinsics::CopyFrom(const CameraIntrinsics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CameraIntrinsics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CameraIntrinsics::IsInitialized() const {
  return true;
}

void CameraIntrinsics::InternalSwap(CameraIntrinsics* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  model_.Swap(&other->model_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  maker_.Swap(&other->maker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  numeric_model_.Swap(&other->numeric_model_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  focus_mode_.Swap(&other->focus_mode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CameraIntrinsics, jpeg_quality_)
      + sizeof(CameraIntrinsics::jpeg_quality_)
      - PROTOBUF_FIELD_OFFSET(CameraIntrinsics, sensor_size_)>(
          reinterpret_cast<char*>(&sensor_size_),
          reinterpret_cast<char*>(&other->sensor_size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CameraIntrinsics::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HandhsakeRequest::InitAsDefaultInstance() {
  ::_HandhsakeRequest_default_instance_._instance.get_mutable()->camera_intrinsics_ = const_cast< ::CameraIntrinsics*>(
      ::CameraIntrinsics::internal_default_instance());
}
class HandhsakeRequest::_Internal {
 public:
  static const ::CameraIntrinsics& camera_intrinsics(const HandhsakeRequest* msg);
};

const ::CameraIntrinsics&
HandhsakeRequest::_Internal::camera_intrinsics(const HandhsakeRequest* msg) {
  return *msg->camera_intrinsics_;
}
HandhsakeRequest::HandhsakeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:HandhsakeRequest)
}
HandhsakeRequest::HandhsakeRequest(const HandhsakeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identifier().empty()) {
    identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identifier(),
      GetArena());
  }
  if (from._internal_has_camera_intrinsics()) {
    camera_intrinsics_ = new ::CameraIntrinsics(*from.camera_intrinsics_);
  } else {
    camera_intrinsics_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:HandhsakeRequest)
}

void HandhsakeRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HandhsakeRequest_server_2eproto.base);
  identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  camera_intrinsics_ = nullptr;
}

HandhsakeRequest::~HandhsakeRequest() {
  // @@protoc_insertion_point(destructor:HandhsakeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HandhsakeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identifier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete camera_intrinsics_;
}

void HandhsakeRequest::ArenaDtor(void* object) {
  HandhsakeRequest* _this = reinterpret_cast< HandhsakeRequest* >(object);
  (void)_this;
}
void HandhsakeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HandhsakeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HandhsakeRequest& HandhsakeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HandhsakeRequest_server_2eproto.base);
  return *internal_default_instance();
}


void HandhsakeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HandhsakeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identifier_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && camera_intrinsics_ != nullptr) {
    delete camera_intrinsics_;
  }
  camera_intrinsics_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandhsakeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identifier();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "HandhsakeRequest.identifier"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .CameraIntrinsics camera_intrinsics = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_intrinsics(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HandhsakeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HandhsakeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identifier = 1;
  if (this->identifier().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identifier().data(), static_cast<int>(this->_internal_identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "HandhsakeRequest.identifier");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identifier(), target);
  }

  // .CameraIntrinsics camera_intrinsics = 2;
  if (this->has_camera_intrinsics()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::camera_intrinsics(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HandhsakeRequest)
  return target;
}

size_t HandhsakeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HandhsakeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identifier = 1;
  if (this->identifier().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identifier());
  }

  // .CameraIntrinsics camera_intrinsics = 2;
  if (this->has_camera_intrinsics()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *camera_intrinsics_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HandhsakeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HandhsakeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HandhsakeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HandhsakeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HandhsakeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HandhsakeRequest)
    MergeFrom(*source);
  }
}

void HandhsakeRequest::MergeFrom(const HandhsakeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HandhsakeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identifier().size() > 0) {
    _internal_set_identifier(from._internal_identifier());
  }
  if (from.has_camera_intrinsics()) {
    _internal_mutable_camera_intrinsics()->::CameraIntrinsics::MergeFrom(from._internal_camera_intrinsics());
  }
}

void HandhsakeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HandhsakeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandhsakeRequest::CopyFrom(const HandhsakeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HandhsakeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandhsakeRequest::IsInitialized() const {
  return true;
}

void HandhsakeRequest::InternalSwap(HandhsakeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  identifier_.Swap(&other->identifier_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(camera_intrinsics_, other->camera_intrinsics_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HandhsakeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HandshakeResponse::InitAsDefaultInstance() {
}
class HandshakeResponse::_Internal {
 public:
};

HandshakeResponse::HandshakeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:HandshakeResponse)
}
HandshakeResponse::HandshakeResponse(const HandshakeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:HandshakeResponse)
}

void HandshakeResponse::SharedCtor() {
  success_ = false;
}

HandshakeResponse::~HandshakeResponse() {
  // @@protoc_insertion_point(destructor:HandshakeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HandshakeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HandshakeResponse::ArenaDtor(void* object) {
  HandshakeResponse* _this = reinterpret_cast< HandshakeResponse* >(object);
  (void)_this;
}
void HandshakeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HandshakeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HandshakeResponse& HandshakeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HandshakeResponse_server_2eproto.base);
  return *internal_default_instance();
}


void HandshakeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HandshakeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandshakeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HandshakeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HandshakeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HandshakeResponse)
  return target;
}

size_t HandshakeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HandshakeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HandshakeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HandshakeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HandshakeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HandshakeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HandshakeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HandshakeResponse)
    MergeFrom(*source);
  }
}

void HandshakeResponse::MergeFrom(const HandshakeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HandshakeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void HandshakeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HandshakeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandshakeResponse::CopyFrom(const HandshakeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HandshakeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandshakeResponse::IsInitialized() const {
  return true;
}

void HandshakeResponse::InternalSwap(HandshakeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HandshakeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StartSessionRequest::InitAsDefaultInstance() {
}
class StartSessionRequest::_Internal {
 public:
};

StartSessionRequest::StartSessionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StartSessionRequest)
}
StartSessionRequest::StartSessionRequest(const StartSessionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:StartSessionRequest)
}

void StartSessionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StartSessionRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartSessionRequest::~StartSessionRequest() {
  // @@protoc_insertion_point(destructor:StartSessionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartSessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartSessionRequest::ArenaDtor(void* object) {
  StartSessionRequest* _this = reinterpret_cast< StartSessionRequest* >(object);
  (void)_this;
}
void StartSessionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartSessionRequest& StartSessionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartSessionRequest_server_2eproto.base);
  return *internal_default_instance();
}


void StartSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StartSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartSessionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StartSessionRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartSessionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StartSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StartSessionRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StartSessionRequest)
  return target;
}

size_t StartSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StartSessionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartSessionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StartSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartSessionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StartSessionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StartSessionRequest)
    MergeFrom(*source);
  }
}

void StartSessionRequest::MergeFrom(const StartSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StartSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
}

void StartSessionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StartSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartSessionRequest::CopyFrom(const StartSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StartSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartSessionRequest::IsInitialized() const {
  return true;
}

void StartSessionRequest::InternalSwap(StartSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StartSessionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StartSessionResponse::InitAsDefaultInstance() {
}
class StartSessionResponse::_Internal {
 public:
};

StartSessionResponse::StartSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StartSessionResponse)
}
StartSessionResponse::StartSessionResponse(const StartSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_session_id().empty()) {
    session_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_session_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:StartSessionResponse)
}

void StartSessionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StartSessionResponse_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartSessionResponse::~StartSessionResponse() {
  // @@protoc_insertion_point(destructor:StartSessionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartSessionResponse::ArenaDtor(void* object) {
  StartSessionResponse* _this = reinterpret_cast< StartSessionResponse* >(object);
  (void)_this;
}
void StartSessionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartSessionResponse& StartSessionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartSessionResponse_server_2eproto.base);
  return *internal_default_instance();
}


void StartSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StartSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  session_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartSessionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StartSessionResponse.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string session_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_session_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StartSessionResponse.session_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartSessionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StartSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StartSessionResponse.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  // string session_id = 2;
  if (this->session_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StartSessionResponse.session_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StartSessionResponse)
  return target;
}

size_t StartSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StartSessionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  // string session_id = 2;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartSessionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StartSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StartSessionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StartSessionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StartSessionResponse)
    MergeFrom(*source);
  }
}

void StartSessionResponse::MergeFrom(const StartSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StartSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
  if (from.session_id().size() > 0) {
    _internal_set_session_id(from._internal_session_id());
  }
}

void StartSessionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StartSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartSessionResponse::CopyFrom(const StartSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StartSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartSessionResponse::IsInitialized() const {
  return true;
}

void StartSessionResponse::InternalSwap(StartSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  session_id_.Swap(&other->session_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StartSessionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopSessionRequest::InitAsDefaultInstance() {
}
class StopSessionRequest::_Internal {
 public:
};

StopSessionRequest::StopSessionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StopSessionRequest)
}
StopSessionRequest::StopSessionRequest(const StopSessionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_session_id().empty()) {
    session_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_session_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:StopSessionRequest)
}

void StopSessionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopSessionRequest_server_2eproto.base);
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopSessionRequest::~StopSessionRequest() {
  // @@protoc_insertion_point(destructor:StopSessionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopSessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  session_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopSessionRequest::ArenaDtor(void* object) {
  StopSessionRequest* _this = reinterpret_cast< StopSessionRequest* >(object);
  (void)_this;
}
void StopSessionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopSessionRequest& StopSessionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopSessionRequest_server_2eproto.base);
  return *internal_default_instance();
}


void StopSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StopSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopSessionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_session_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StopSessionRequest.session_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopSessionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StopSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StopSessionRequest.session_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StopSessionRequest)
  return target;
}

size_t StopSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StopSessionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopSessionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StopSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopSessionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StopSessionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StopSessionRequest)
    MergeFrom(*source);
  }
}

void StopSessionRequest::MergeFrom(const StopSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StopSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id().size() > 0) {
    _internal_set_session_id(from._internal_session_id());
  }
}

void StopSessionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StopSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopSessionRequest::CopyFrom(const StopSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StopSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopSessionRequest::IsInitialized() const {
  return true;
}

void StopSessionRequest::InternalSwap(StopSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  session_id_.Swap(&other->session_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopSessionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopSessionResponse::InitAsDefaultInstance() {
}
class StopSessionResponse::_Internal {
 public:
};

StopSessionResponse::StopSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StopSessionResponse)
}
StopSessionResponse::StopSessionResponse(const StopSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_session_id().empty()) {
    session_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_session_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:StopSessionResponse)
}

void StopSessionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopSessionResponse_server_2eproto.base);
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopSessionResponse::~StopSessionResponse() {
  // @@protoc_insertion_point(destructor:StopSessionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  session_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopSessionResponse::ArenaDtor(void* object) {
  StopSessionResponse* _this = reinterpret_cast< StopSessionResponse* >(object);
  (void)_this;
}
void StopSessionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopSessionResponse& StopSessionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopSessionResponse_server_2eproto.base);
  return *internal_default_instance();
}


void StopSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StopSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopSessionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_session_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StopSessionResponse.session_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopSessionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StopSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StopSessionResponse.session_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StopSessionResponse)
  return target;
}

size_t StopSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StopSessionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopSessionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StopSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopSessionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StopSessionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StopSessionResponse)
    MergeFrom(*source);
  }
}

void StopSessionResponse::MergeFrom(const StopSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StopSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id().size() > 0) {
    _internal_set_session_id(from._internal_session_id());
  }
}

void StopSessionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StopSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopSessionResponse::CopyFrom(const StopSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StopSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopSessionResponse::IsInitialized() const {
  return true;
}

void StopSessionResponse::InternalSwap(StopSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  session_id_.Swap(&other->session_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopSessionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SessionAddImageRequest::InitAsDefaultInstance() {
  ::_SessionAddImageRequest_default_instance_._instance.get_mutable()->upload_image_ = const_cast< ::ReconstructionUploadImageRequest*>(
      ::ReconstructionUploadImageRequest::internal_default_instance());
}
class SessionAddImageRequest::_Internal {
 public:
  static const ::ReconstructionUploadImageRequest& upload_image(const SessionAddImageRequest* msg);
};

const ::ReconstructionUploadImageRequest&
SessionAddImageRequest::_Internal::upload_image(const SessionAddImageRequest* msg) {
  return *msg->upload_image_;
}
SessionAddImageRequest::SessionAddImageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SessionAddImageRequest)
}
SessionAddImageRequest::SessionAddImageRequest(const SessionAddImageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_session_id().empty()) {
    session_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_session_id(),
      GetArena());
  }
  if (from._internal_has_upload_image()) {
    upload_image_ = new ::ReconstructionUploadImageRequest(*from.upload_image_);
  } else {
    upload_image_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:SessionAddImageRequest)
}

void SessionAddImageRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SessionAddImageRequest_server_2eproto.base);
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  upload_image_ = nullptr;
}

SessionAddImageRequest::~SessionAddImageRequest() {
  // @@protoc_insertion_point(destructor:SessionAddImageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SessionAddImageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  session_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete upload_image_;
}

void SessionAddImageRequest::ArenaDtor(void* object) {
  SessionAddImageRequest* _this = reinterpret_cast< SessionAddImageRequest* >(object);
  (void)_this;
}
void SessionAddImageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SessionAddImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SessionAddImageRequest& SessionAddImageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SessionAddImageRequest_server_2eproto.base);
  return *internal_default_instance();
}


void SessionAddImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SessionAddImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && upload_image_ != nullptr) {
    delete upload_image_;
  }
  upload_image_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionAddImageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_session_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SessionAddImageRequest.session_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ReconstructionUploadImageRequest upload_image = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_upload_image(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SessionAddImageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SessionAddImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SessionAddImageRequest.session_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_session_id(), target);
  }

  // .ReconstructionUploadImageRequest upload_image = 2;
  if (this->has_upload_image()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::upload_image(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SessionAddImageRequest)
  return target;
}

size_t SessionAddImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SessionAddImageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  // .ReconstructionUploadImageRequest upload_image = 2;
  if (this->has_upload_image()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *upload_image_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionAddImageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SessionAddImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionAddImageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SessionAddImageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SessionAddImageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SessionAddImageRequest)
    MergeFrom(*source);
  }
}

void SessionAddImageRequest::MergeFrom(const SessionAddImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SessionAddImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id().size() > 0) {
    _internal_set_session_id(from._internal_session_id());
  }
  if (from.has_upload_image()) {
    _internal_mutable_upload_image()->::ReconstructionUploadImageRequest::MergeFrom(from._internal_upload_image());
  }
}

void SessionAddImageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SessionAddImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionAddImageRequest::CopyFrom(const SessionAddImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SessionAddImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionAddImageRequest::IsInitialized() const {
  return true;
}

void SessionAddImageRequest::InternalSwap(SessionAddImageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  session_id_.Swap(&other->session_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(upload_image_, other->upload_image_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionAddImageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SessionAddImageResponse::InitAsDefaultInstance() {
}
class SessionAddImageResponse::_Internal {
 public:
};

SessionAddImageResponse::SessionAddImageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SessionAddImageResponse)
}
SessionAddImageResponse::SessionAddImageResponse(const SessionAddImageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SessionAddImageResponse)
}

void SessionAddImageResponse::SharedCtor() {
}

SessionAddImageResponse::~SessionAddImageResponse() {
  // @@protoc_insertion_point(destructor:SessionAddImageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SessionAddImageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SessionAddImageResponse::ArenaDtor(void* object) {
  SessionAddImageResponse* _this = reinterpret_cast< SessionAddImageResponse* >(object);
  (void)_this;
}
void SessionAddImageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SessionAddImageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SessionAddImageResponse& SessionAddImageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SessionAddImageResponse_server_2eproto.base);
  return *internal_default_instance();
}


void SessionAddImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SessionAddImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionAddImageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SessionAddImageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SessionAddImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SessionAddImageResponse)
  return target;
}

size_t SessionAddImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SessionAddImageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionAddImageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SessionAddImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionAddImageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SessionAddImageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SessionAddImageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SessionAddImageResponse)
    MergeFrom(*source);
  }
}

void SessionAddImageResponse::MergeFrom(const SessionAddImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SessionAddImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SessionAddImageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SessionAddImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionAddImageResponse::CopyFrom(const SessionAddImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SessionAddImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionAddImageResponse::IsInitialized() const {
  return true;
}

void SessionAddImageResponse::InternalSwap(SessionAddImageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionAddImageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSparseRequest::InitAsDefaultInstance() {
}
class GetSparseRequest::_Internal {
 public:
};

GetSparseRequest::GetSparseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetSparseRequest)
}
GetSparseRequest::GetSparseRequest(const GetSparseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GetSparseRequest)
}

void GetSparseRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSparseRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSparseRequest::~GetSparseRequest() {
  // @@protoc_insertion_point(destructor:GetSparseRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSparseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSparseRequest::ArenaDtor(void* object) {
  GetSparseRequest* _this = reinterpret_cast< GetSparseRequest* >(object);
  (void)_this;
}
void GetSparseRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSparseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSparseRequest& GetSparseRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSparseRequest_server_2eproto.base);
  return *internal_default_instance();
}


void GetSparseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetSparseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSparseRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetSparseRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSparseRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetSparseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetSparseRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetSparseRequest)
  return target;
}

size_t GetSparseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetSparseRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSparseRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetSparseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSparseRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSparseRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetSparseRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetSparseRequest)
    MergeFrom(*source);
  }
}

void GetSparseRequest::MergeFrom(const GetSparseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetSparseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
}

void GetSparseRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetSparseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSparseRequest::CopyFrom(const GetSparseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetSparseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSparseRequest::IsInitialized() const {
  return true;
}

void GetSparseRequest::InternalSwap(GetSparseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSparseRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSparseResponse::InitAsDefaultInstance() {
  ::_GetSparseResponse_default_instance_._instance.get_mutable()->sparse_ = const_cast< ::SparsePointCloudData*>(
      ::SparsePointCloudData::internal_default_instance());
}
class GetSparseResponse::_Internal {
 public:
  static const ::SparsePointCloudData& sparse(const GetSparseResponse* msg);
};

const ::SparsePointCloudData&
GetSparseResponse::_Internal::sparse(const GetSparseResponse* msg) {
  return *msg->sparse_;
}
GetSparseResponse::GetSparseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetSparseResponse)
}
GetSparseResponse::GetSparseResponse(const GetSparseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_sparse()) {
    sparse_ = new ::SparsePointCloudData(*from.sparse_);
  } else {
    sparse_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GetSparseResponse)
}

void GetSparseResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSparseResponse_server_2eproto.base);
  sparse_ = nullptr;
}

GetSparseResponse::~GetSparseResponse() {
  // @@protoc_insertion_point(destructor:GetSparseResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSparseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete sparse_;
}

void GetSparseResponse::ArenaDtor(void* object) {
  GetSparseResponse* _this = reinterpret_cast< GetSparseResponse* >(object);
  (void)_this;
}
void GetSparseResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSparseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSparseResponse& GetSparseResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSparseResponse_server_2eproto.base);
  return *internal_default_instance();
}


void GetSparseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetSparseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && sparse_ != nullptr) {
    delete sparse_;
  }
  sparse_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSparseResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .SparsePointCloudData sparse = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_sparse(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSparseResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetSparseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SparsePointCloudData sparse = 1;
  if (this->has_sparse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::sparse(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetSparseResponse)
  return target;
}

size_t GetSparseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetSparseResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .SparsePointCloudData sparse = 1;
  if (this->has_sparse()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *sparse_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSparseResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetSparseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSparseResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSparseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetSparseResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetSparseResponse)
    MergeFrom(*source);
  }
}

void GetSparseResponse::MergeFrom(const GetSparseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetSparseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sparse()) {
    _internal_mutable_sparse()->::SparsePointCloudData::MergeFrom(from._internal_sparse());
  }
}

void GetSparseResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetSparseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSparseResponse::CopyFrom(const GetSparseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetSparseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSparseResponse::IsInitialized() const {
  return true;
}

void GetSparseResponse::InternalSwap(GetSparseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(sparse_, other->sparse_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSparseResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetReconstructionConfigRequest::InitAsDefaultInstance() {
}
class GetReconstructionConfigRequest::_Internal {
 public:
};

GetReconstructionConfigRequest::GetReconstructionConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetReconstructionConfigRequest)
}
GetReconstructionConfigRequest::GetReconstructionConfigRequest(const GetReconstructionConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GetReconstructionConfigRequest)
}

void GetReconstructionConfigRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetReconstructionConfigRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetReconstructionConfigRequest::~GetReconstructionConfigRequest() {
  // @@protoc_insertion_point(destructor:GetReconstructionConfigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetReconstructionConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetReconstructionConfigRequest::ArenaDtor(void* object) {
  GetReconstructionConfigRequest* _this = reinterpret_cast< GetReconstructionConfigRequest* >(object);
  (void)_this;
}
void GetReconstructionConfigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetReconstructionConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetReconstructionConfigRequest& GetReconstructionConfigRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetReconstructionConfigRequest_server_2eproto.base);
  return *internal_default_instance();
}


void GetReconstructionConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetReconstructionConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetReconstructionConfigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetReconstructionConfigRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetReconstructionConfigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetReconstructionConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetReconstructionConfigRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetReconstructionConfigRequest)
  return target;
}

size_t GetReconstructionConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetReconstructionConfigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetReconstructionConfigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetReconstructionConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetReconstructionConfigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetReconstructionConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetReconstructionConfigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetReconstructionConfigRequest)
    MergeFrom(*source);
  }
}

void GetReconstructionConfigRequest::MergeFrom(const GetReconstructionConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetReconstructionConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
}

void GetReconstructionConfigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetReconstructionConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetReconstructionConfigRequest::CopyFrom(const GetReconstructionConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetReconstructionConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetReconstructionConfigRequest::IsInitialized() const {
  return true;
}

void GetReconstructionConfigRequest::InternalSwap(GetReconstructionConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetReconstructionConfigRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetReconstructionConfigResponse::InitAsDefaultInstance() {
}
class GetReconstructionConfigResponse::_Internal {
 public:
};

GetReconstructionConfigResponse::GetReconstructionConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetReconstructionConfigResponse)
}
GetReconstructionConfigResponse::GetReconstructionConfigResponse(const GetReconstructionConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  config_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_config_json().empty()) {
    config_json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_config_json(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GetReconstructionConfigResponse)
}

void GetReconstructionConfigResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetReconstructionConfigResponse_server_2eproto.base);
  config_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetReconstructionConfigResponse::~GetReconstructionConfigResponse() {
  // @@protoc_insertion_point(destructor:GetReconstructionConfigResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetReconstructionConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  config_json_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetReconstructionConfigResponse::ArenaDtor(void* object) {
  GetReconstructionConfigResponse* _this = reinterpret_cast< GetReconstructionConfigResponse* >(object);
  (void)_this;
}
void GetReconstructionConfigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetReconstructionConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetReconstructionConfigResponse& GetReconstructionConfigResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetReconstructionConfigResponse_server_2eproto.base);
  return *internal_default_instance();
}


void GetReconstructionConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetReconstructionConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_json_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetReconstructionConfigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string config_json = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_config_json();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetReconstructionConfigResponse.config_json"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetReconstructionConfigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetReconstructionConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string config_json = 1;
  if (this->config_json().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_json().data(), static_cast<int>(this->_internal_config_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetReconstructionConfigResponse.config_json");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_config_json(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetReconstructionConfigResponse)
  return target;
}

size_t GetReconstructionConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetReconstructionConfigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string config_json = 1;
  if (this->config_json().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_json());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetReconstructionConfigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetReconstructionConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetReconstructionConfigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetReconstructionConfigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetReconstructionConfigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetReconstructionConfigResponse)
    MergeFrom(*source);
  }
}

void GetReconstructionConfigResponse::MergeFrom(const GetReconstructionConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetReconstructionConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.config_json().size() > 0) {
    _internal_set_config_json(from._internal_config_json());
  }
}

void GetReconstructionConfigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetReconstructionConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetReconstructionConfigResponse::CopyFrom(const GetReconstructionConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetReconstructionConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetReconstructionConfigResponse::IsInitialized() const {
  return true;
}

void GetReconstructionConfigResponse::InternalSwap(GetReconstructionConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  config_json_.Swap(&other->config_json_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetReconstructionConfigResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReconstructionUploadImageBatchRequest::InitAsDefaultInstance() {
  ::_ReconstructionUploadImageBatchRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::ImageData*>(
      ::ImageData::internal_default_instance());
}
class ReconstructionUploadImageBatchRequest::_Internal {
 public:
  static const ::ImageData& data(const ReconstructionUploadImageBatchRequest* msg);
};

const ::ImageData&
ReconstructionUploadImageBatchRequest::_Internal::data(const ReconstructionUploadImageBatchRequest* msg) {
  return *msg->data_;
}
ReconstructionUploadImageBatchRequest::ReconstructionUploadImageBatchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ReconstructionUploadImageBatchRequest)
}
ReconstructionUploadImageBatchRequest::ReconstructionUploadImageBatchRequest(const ReconstructionUploadImageBatchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    data_ = new ::ImageData(*from.data_);
  } else {
    data_ = nullptr;
  }
  idx_ = from.idx_;
  // @@protoc_insertion_point(copy_constructor:ReconstructionUploadImageBatchRequest)
}

void ReconstructionUploadImageBatchRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReconstructionUploadImageBatchRequest_server_2eproto.base);
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idx_) -
      reinterpret_cast<char*>(&data_)) + sizeof(idx_));
}

ReconstructionUploadImageBatchRequest::~ReconstructionUploadImageBatchRequest() {
  // @@protoc_insertion_point(destructor:ReconstructionUploadImageBatchRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReconstructionUploadImageBatchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete data_;
}

void ReconstructionUploadImageBatchRequest::ArenaDtor(void* object) {
  ReconstructionUploadImageBatchRequest* _this = reinterpret_cast< ReconstructionUploadImageBatchRequest* >(object);
  (void)_this;
}
void ReconstructionUploadImageBatchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReconstructionUploadImageBatchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReconstructionUploadImageBatchRequest& ReconstructionUploadImageBatchRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReconstructionUploadImageBatchRequest_server_2eproto.base);
  return *internal_default_instance();
}


void ReconstructionUploadImageBatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ReconstructionUploadImageBatchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  idx_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReconstructionUploadImageBatchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 idx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ImageData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReconstructionUploadImageBatchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReconstructionUploadImageBatchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 idx = 1;
  if (this->idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_idx(), target);
  }

  // .ImageData data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReconstructionUploadImageBatchRequest)
  return target;
}

size_t ReconstructionUploadImageBatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReconstructionUploadImageBatchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ImageData data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // int32 idx = 1;
  if (this->idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_idx());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReconstructionUploadImageBatchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReconstructionUploadImageBatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReconstructionUploadImageBatchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReconstructionUploadImageBatchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReconstructionUploadImageBatchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReconstructionUploadImageBatchRequest)
    MergeFrom(*source);
  }
}

void ReconstructionUploadImageBatchRequest::MergeFrom(const ReconstructionUploadImageBatchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReconstructionUploadImageBatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    _internal_mutable_data()->::ImageData::MergeFrom(from._internal_data());
  }
  if (from.idx() != 0) {
    _internal_set_idx(from._internal_idx());
  }
}

void ReconstructionUploadImageBatchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReconstructionUploadImageBatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconstructionUploadImageBatchRequest::CopyFrom(const ReconstructionUploadImageBatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReconstructionUploadImageBatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconstructionUploadImageBatchRequest::IsInitialized() const {
  return true;
}

void ReconstructionUploadImageBatchRequest::InternalSwap(ReconstructionUploadImageBatchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReconstructionUploadImageBatchRequest, idx_)
      + sizeof(ReconstructionUploadImageBatchRequest::idx_)
      - PROTOBUF_FIELD_OFFSET(ReconstructionUploadImageBatchRequest, data_)>(
          reinterpret_cast<char*>(&data_),
          reinterpret_cast<char*>(&other->data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReconstructionUploadImageBatchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReconstructionUploadImageBatchResponse::InitAsDefaultInstance() {
}
class ReconstructionUploadImageBatchResponse::_Internal {
 public:
};

ReconstructionUploadImageBatchResponse::ReconstructionUploadImageBatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ReconstructionUploadImageBatchResponse)
}
ReconstructionUploadImageBatchResponse::ReconstructionUploadImageBatchResponse(const ReconstructionUploadImageBatchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  images_uploaded_ = from.images_uploaded_;
  // @@protoc_insertion_point(copy_constructor:ReconstructionUploadImageBatchResponse)
}

void ReconstructionUploadImageBatchResponse::SharedCtor() {
  images_uploaded_ = 0;
}

ReconstructionUploadImageBatchResponse::~ReconstructionUploadImageBatchResponse() {
  // @@protoc_insertion_point(destructor:ReconstructionUploadImageBatchResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReconstructionUploadImageBatchResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReconstructionUploadImageBatchResponse::ArenaDtor(void* object) {
  ReconstructionUploadImageBatchResponse* _this = reinterpret_cast< ReconstructionUploadImageBatchResponse* >(object);
  (void)_this;
}
void ReconstructionUploadImageBatchResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReconstructionUploadImageBatchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReconstructionUploadImageBatchResponse& ReconstructionUploadImageBatchResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReconstructionUploadImageBatchResponse_server_2eproto.base);
  return *internal_default_instance();
}


void ReconstructionUploadImageBatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ReconstructionUploadImageBatchResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_uploaded_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReconstructionUploadImageBatchResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 images_uploaded = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          images_uploaded_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReconstructionUploadImageBatchResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReconstructionUploadImageBatchResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 images_uploaded = 1;
  if (this->images_uploaded() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_images_uploaded(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReconstructionUploadImageBatchResponse)
  return target;
}

size_t ReconstructionUploadImageBatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReconstructionUploadImageBatchResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 images_uploaded = 1;
  if (this->images_uploaded() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_images_uploaded());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReconstructionUploadImageBatchResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReconstructionUploadImageBatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReconstructionUploadImageBatchResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReconstructionUploadImageBatchResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReconstructionUploadImageBatchResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReconstructionUploadImageBatchResponse)
    MergeFrom(*source);
  }
}

void ReconstructionUploadImageBatchResponse::MergeFrom(const ReconstructionUploadImageBatchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReconstructionUploadImageBatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.images_uploaded() != 0) {
    _internal_set_images_uploaded(from._internal_images_uploaded());
  }
}

void ReconstructionUploadImageBatchResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReconstructionUploadImageBatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconstructionUploadImageBatchResponse::CopyFrom(const ReconstructionUploadImageBatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReconstructionUploadImageBatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconstructionUploadImageBatchResponse::IsInitialized() const {
  return true;
}

void ReconstructionUploadImageBatchResponse::InternalSwap(ReconstructionUploadImageBatchResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(images_uploaded_, other->images_uploaded_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReconstructionUploadImageBatchResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MVSRequest::InitAsDefaultInstance() {
}
class MVSRequest::_Internal {
 public:
};

MVSRequest::MVSRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MVSRequest)
}
MVSRequest::MVSRequest(const MVSRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:MVSRequest)
}

void MVSRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MVSRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MVSRequest::~MVSRequest() {
  // @@protoc_insertion_point(destructor:MVSRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MVSRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MVSRequest::ArenaDtor(void* object) {
  MVSRequest* _this = reinterpret_cast< MVSRequest* >(object);
  (void)_this;
}
void MVSRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MVSRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MVSRequest& MVSRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MVSRequest_server_2eproto.base);
  return *internal_default_instance();
}


void MVSRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MVSRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MVSRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MVSRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MVSRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MVSRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MVSRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MVSRequest)
  return target;
}

size_t MVSRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MVSRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MVSRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MVSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MVSRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MVSRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MVSRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MVSRequest)
    MergeFrom(*source);
  }
}

void MVSRequest::MergeFrom(const MVSRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MVSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
}

void MVSRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MVSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MVSRequest::CopyFrom(const MVSRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MVSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MVSRequest::IsInitialized() const {
  return true;
}

void MVSRequest::InternalSwap(MVSRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata MVSRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MVSResponse::InitAsDefaultInstance() {
}
class MVSResponse::_Internal {
 public:
};

MVSResponse::MVSResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MVSResponse)
}
MVSResponse::MVSResponse(const MVSResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MVSResponse)
}

void MVSResponse::SharedCtor() {
  success_ = false;
}

MVSResponse::~MVSResponse() {
  // @@protoc_insertion_point(destructor:MVSResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MVSResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MVSResponse::ArenaDtor(void* object) {
  MVSResponse* _this = reinterpret_cast< MVSResponse* >(object);
  (void)_this;
}
void MVSResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MVSResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MVSResponse& MVSResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MVSResponse_server_2eproto.base);
  return *internal_default_instance();
}


void MVSResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MVSResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MVSResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MVSResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MVSResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MVSResponse)
  return target;
}

size_t MVSResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MVSResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MVSResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MVSResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MVSResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MVSResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MVSResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MVSResponse)
    MergeFrom(*source);
  }
}

void MVSResponse::MergeFrom(const MVSResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MVSResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void MVSResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MVSResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MVSResponse::CopyFrom(const MVSResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MVSResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MVSResponse::IsInitialized() const {
  return true;
}

void MVSResponse::InternalSwap(MVSResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MVSResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetAgentConfigFieldsRequest::InitAsDefaultInstance() {
}
class SetAgentConfigFieldsRequest::_Internal {
 public:
};

SetAgentConfigFieldsRequest::SetAgentConfigFieldsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SetAgentConfigFieldsRequest)
}
SetAgentConfigFieldsRequest::SetAgentConfigFieldsRequest(const SetAgentConfigFieldsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  agent_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_agent_name().empty()) {
    agent_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_agent_name(),
      GetArena());
  }
  config_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_config_json().empty()) {
    config_json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_config_json(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:SetAgentConfigFieldsRequest)
}

void SetAgentConfigFieldsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetAgentConfigFieldsRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  agent_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  config_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetAgentConfigFieldsRequest::~SetAgentConfigFieldsRequest() {
  // @@protoc_insertion_point(destructor:SetAgentConfigFieldsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetAgentConfigFieldsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  agent_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  config_json_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetAgentConfigFieldsRequest::ArenaDtor(void* object) {
  SetAgentConfigFieldsRequest* _this = reinterpret_cast< SetAgentConfigFieldsRequest* >(object);
  (void)_this;
}
void SetAgentConfigFieldsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetAgentConfigFieldsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetAgentConfigFieldsRequest& SetAgentConfigFieldsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetAgentConfigFieldsRequest_server_2eproto.base);
  return *internal_default_instance();
}


void SetAgentConfigFieldsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SetAgentConfigFieldsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  agent_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  config_json_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAgentConfigFieldsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SetAgentConfigFieldsRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string agent_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_agent_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SetAgentConfigFieldsRequest.agent_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string config_json = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_config_json();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SetAgentConfigFieldsRequest.config_json"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetAgentConfigFieldsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SetAgentConfigFieldsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SetAgentConfigFieldsRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  // string agent_name = 2;
  if (this->agent_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_name().data(), static_cast<int>(this->_internal_agent_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SetAgentConfigFieldsRequest.agent_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_agent_name(), target);
  }

  // string config_json = 3;
  if (this->config_json().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_json().data(), static_cast<int>(this->_internal_config_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SetAgentConfigFieldsRequest.config_json");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_config_json(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetAgentConfigFieldsRequest)
  return target;
}

size_t SetAgentConfigFieldsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetAgentConfigFieldsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  // string agent_name = 2;
  if (this->agent_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_name());
  }

  // string config_json = 3;
  if (this->config_json().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_json());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAgentConfigFieldsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetAgentConfigFieldsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAgentConfigFieldsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetAgentConfigFieldsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetAgentConfigFieldsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetAgentConfigFieldsRequest)
    MergeFrom(*source);
  }
}

void SetAgentConfigFieldsRequest::MergeFrom(const SetAgentConfigFieldsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetAgentConfigFieldsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
  if (from.agent_name().size() > 0) {
    _internal_set_agent_name(from._internal_agent_name());
  }
  if (from.config_json().size() > 0) {
    _internal_set_config_json(from._internal_config_json());
  }
}

void SetAgentConfigFieldsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetAgentConfigFieldsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAgentConfigFieldsRequest::CopyFrom(const SetAgentConfigFieldsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetAgentConfigFieldsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAgentConfigFieldsRequest::IsInitialized() const {
  return true;
}

void SetAgentConfigFieldsRequest::InternalSwap(SetAgentConfigFieldsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  agent_name_.Swap(&other->agent_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  config_json_.Swap(&other->config_json_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAgentConfigFieldsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetAgentConfigFieldsResponse::InitAsDefaultInstance() {
}
class SetAgentConfigFieldsResponse::_Internal {
 public:
};

SetAgentConfigFieldsResponse::SetAgentConfigFieldsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SetAgentConfigFieldsResponse)
}
SetAgentConfigFieldsResponse::SetAgentConfigFieldsResponse(const SetAgentConfigFieldsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SetAgentConfigFieldsResponse)
}

void SetAgentConfigFieldsResponse::SharedCtor() {
}

SetAgentConfigFieldsResponse::~SetAgentConfigFieldsResponse() {
  // @@protoc_insertion_point(destructor:SetAgentConfigFieldsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetAgentConfigFieldsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetAgentConfigFieldsResponse::ArenaDtor(void* object) {
  SetAgentConfigFieldsResponse* _this = reinterpret_cast< SetAgentConfigFieldsResponse* >(object);
  (void)_this;
}
void SetAgentConfigFieldsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetAgentConfigFieldsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetAgentConfigFieldsResponse& SetAgentConfigFieldsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetAgentConfigFieldsResponse_server_2eproto.base);
  return *internal_default_instance();
}


void SetAgentConfigFieldsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SetAgentConfigFieldsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAgentConfigFieldsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetAgentConfigFieldsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SetAgentConfigFieldsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetAgentConfigFieldsResponse)
  return target;
}

size_t SetAgentConfigFieldsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetAgentConfigFieldsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAgentConfigFieldsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetAgentConfigFieldsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAgentConfigFieldsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetAgentConfigFieldsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetAgentConfigFieldsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetAgentConfigFieldsResponse)
    MergeFrom(*source);
  }
}

void SetAgentConfigFieldsResponse::MergeFrom(const SetAgentConfigFieldsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetAgentConfigFieldsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetAgentConfigFieldsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetAgentConfigFieldsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAgentConfigFieldsResponse::CopyFrom(const SetAgentConfigFieldsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetAgentConfigFieldsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAgentConfigFieldsResponse::IsInitialized() const {
  return true;
}

void SetAgentConfigFieldsResponse::InternalSwap(SetAgentConfigFieldsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAgentConfigFieldsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetReconstructionConfigFieldsRequest::InitAsDefaultInstance() {
}
class SetReconstructionConfigFieldsRequest::_Internal {
 public:
};

SetReconstructionConfigFieldsRequest::SetReconstructionConfigFieldsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SetReconstructionConfigFieldsRequest)
}
SetReconstructionConfigFieldsRequest::SetReconstructionConfigFieldsRequest(const SetReconstructionConfigFieldsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  config_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_config_json().empty()) {
    config_json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_config_json(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:SetReconstructionConfigFieldsRequest)
}

void SetReconstructionConfigFieldsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetReconstructionConfigFieldsRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  config_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetReconstructionConfigFieldsRequest::~SetReconstructionConfigFieldsRequest() {
  // @@protoc_insertion_point(destructor:SetReconstructionConfigFieldsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetReconstructionConfigFieldsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  config_json_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetReconstructionConfigFieldsRequest::ArenaDtor(void* object) {
  SetReconstructionConfigFieldsRequest* _this = reinterpret_cast< SetReconstructionConfigFieldsRequest* >(object);
  (void)_this;
}
void SetReconstructionConfigFieldsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetReconstructionConfigFieldsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetReconstructionConfigFieldsRequest& SetReconstructionConfigFieldsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetReconstructionConfigFieldsRequest_server_2eproto.base);
  return *internal_default_instance();
}


void SetReconstructionConfigFieldsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SetReconstructionConfigFieldsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  config_json_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetReconstructionConfigFieldsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SetReconstructionConfigFieldsRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string config_json = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_config_json();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SetReconstructionConfigFieldsRequest.config_json"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetReconstructionConfigFieldsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SetReconstructionConfigFieldsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SetReconstructionConfigFieldsRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  // string config_json = 2;
  if (this->config_json().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_json().data(), static_cast<int>(this->_internal_config_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SetReconstructionConfigFieldsRequest.config_json");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_config_json(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetReconstructionConfigFieldsRequest)
  return target;
}

size_t SetReconstructionConfigFieldsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetReconstructionConfigFieldsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  // string config_json = 2;
  if (this->config_json().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_json());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetReconstructionConfigFieldsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetReconstructionConfigFieldsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetReconstructionConfigFieldsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetReconstructionConfigFieldsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetReconstructionConfigFieldsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetReconstructionConfigFieldsRequest)
    MergeFrom(*source);
  }
}

void SetReconstructionConfigFieldsRequest::MergeFrom(const SetReconstructionConfigFieldsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetReconstructionConfigFieldsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
  if (from.config_json().size() > 0) {
    _internal_set_config_json(from._internal_config_json());
  }
}

void SetReconstructionConfigFieldsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetReconstructionConfigFieldsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetReconstructionConfigFieldsRequest::CopyFrom(const SetReconstructionConfigFieldsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetReconstructionConfigFieldsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetReconstructionConfigFieldsRequest::IsInitialized() const {
  return true;
}

void SetReconstructionConfigFieldsRequest::InternalSwap(SetReconstructionConfigFieldsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  config_json_.Swap(&other->config_json_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetReconstructionConfigFieldsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetReconstructionConfigFieldsResponse::InitAsDefaultInstance() {
}
class SetReconstructionConfigFieldsResponse::_Internal {
 public:
};

SetReconstructionConfigFieldsResponse::SetReconstructionConfigFieldsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SetReconstructionConfigFieldsResponse)
}
SetReconstructionConfigFieldsResponse::SetReconstructionConfigFieldsResponse(const SetReconstructionConfigFieldsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SetReconstructionConfigFieldsResponse)
}

void SetReconstructionConfigFieldsResponse::SharedCtor() {
}

SetReconstructionConfigFieldsResponse::~SetReconstructionConfigFieldsResponse() {
  // @@protoc_insertion_point(destructor:SetReconstructionConfigFieldsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetReconstructionConfigFieldsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetReconstructionConfigFieldsResponse::ArenaDtor(void* object) {
  SetReconstructionConfigFieldsResponse* _this = reinterpret_cast< SetReconstructionConfigFieldsResponse* >(object);
  (void)_this;
}
void SetReconstructionConfigFieldsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetReconstructionConfigFieldsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetReconstructionConfigFieldsResponse& SetReconstructionConfigFieldsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetReconstructionConfigFieldsResponse_server_2eproto.base);
  return *internal_default_instance();
}


void SetReconstructionConfigFieldsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SetReconstructionConfigFieldsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetReconstructionConfigFieldsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetReconstructionConfigFieldsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SetReconstructionConfigFieldsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetReconstructionConfigFieldsResponse)
  return target;
}

size_t SetReconstructionConfigFieldsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetReconstructionConfigFieldsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetReconstructionConfigFieldsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetReconstructionConfigFieldsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetReconstructionConfigFieldsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetReconstructionConfigFieldsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetReconstructionConfigFieldsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetReconstructionConfigFieldsResponse)
    MergeFrom(*source);
  }
}

void SetReconstructionConfigFieldsResponse::MergeFrom(const SetReconstructionConfigFieldsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetReconstructionConfigFieldsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetReconstructionConfigFieldsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetReconstructionConfigFieldsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetReconstructionConfigFieldsResponse::CopyFrom(const SetReconstructionConfigFieldsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetReconstructionConfigFieldsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetReconstructionConfigFieldsResponse::IsInitialized() const {
  return true;
}

void SetReconstructionConfigFieldsResponse::InternalSwap(SetReconstructionConfigFieldsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetReconstructionConfigFieldsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAgentConfigRequest::InitAsDefaultInstance() {
}
class GetAgentConfigRequest::_Internal {
 public:
};

GetAgentConfigRequest::GetAgentConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetAgentConfigRequest)
}
GetAgentConfigRequest::GetAgentConfigRequest(const GetAgentConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  agent_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_agent_name().empty()) {
    agent_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_agent_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GetAgentConfigRequest)
}

void GetAgentConfigRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAgentConfigRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  agent_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAgentConfigRequest::~GetAgentConfigRequest() {
  // @@protoc_insertion_point(destructor:GetAgentConfigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAgentConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  agent_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAgentConfigRequest::ArenaDtor(void* object) {
  GetAgentConfigRequest* _this = reinterpret_cast< GetAgentConfigRequest* >(object);
  (void)_this;
}
void GetAgentConfigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAgentConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAgentConfigRequest& GetAgentConfigRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAgentConfigRequest_server_2eproto.base);
  return *internal_default_instance();
}


void GetAgentConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetAgentConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  agent_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAgentConfigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetAgentConfigRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string agent_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_agent_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetAgentConfigRequest.agent_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAgentConfigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetAgentConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetAgentConfigRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  // string agent_name = 2;
  if (this->agent_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_name().data(), static_cast<int>(this->_internal_agent_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetAgentConfigRequest.agent_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_agent_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetAgentConfigRequest)
  return target;
}

size_t GetAgentConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetAgentConfigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  // string agent_name = 2;
  if (this->agent_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAgentConfigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetAgentConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAgentConfigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAgentConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetAgentConfigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetAgentConfigRequest)
    MergeFrom(*source);
  }
}

void GetAgentConfigRequest::MergeFrom(const GetAgentConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetAgentConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
  if (from.agent_name().size() > 0) {
    _internal_set_agent_name(from._internal_agent_name());
  }
}

void GetAgentConfigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetAgentConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAgentConfigRequest::CopyFrom(const GetAgentConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetAgentConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAgentConfigRequest::IsInitialized() const {
  return true;
}

void GetAgentConfigRequest::InternalSwap(GetAgentConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  agent_name_.Swap(&other->agent_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAgentConfigRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAgentCOnfigResponse::InitAsDefaultInstance() {
}
class GetAgentCOnfigResponse::_Internal {
 public:
};

GetAgentCOnfigResponse::GetAgentCOnfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetAgentCOnfigResponse)
}
GetAgentCOnfigResponse::GetAgentCOnfigResponse(const GetAgentCOnfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  config_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_config_json().empty()) {
    config_json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_config_json(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GetAgentCOnfigResponse)
}

void GetAgentCOnfigResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAgentCOnfigResponse_server_2eproto.base);
  config_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAgentCOnfigResponse::~GetAgentCOnfigResponse() {
  // @@protoc_insertion_point(destructor:GetAgentCOnfigResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAgentCOnfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  config_json_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAgentCOnfigResponse::ArenaDtor(void* object) {
  GetAgentCOnfigResponse* _this = reinterpret_cast< GetAgentCOnfigResponse* >(object);
  (void)_this;
}
void GetAgentCOnfigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAgentCOnfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAgentCOnfigResponse& GetAgentCOnfigResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAgentCOnfigResponse_server_2eproto.base);
  return *internal_default_instance();
}


void GetAgentCOnfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetAgentCOnfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_json_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAgentCOnfigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string config_json = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_config_json();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetAgentCOnfigResponse.config_json"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAgentCOnfigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetAgentCOnfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string config_json = 1;
  if (this->config_json().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_json().data(), static_cast<int>(this->_internal_config_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetAgentCOnfigResponse.config_json");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_config_json(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetAgentCOnfigResponse)
  return target;
}

size_t GetAgentCOnfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetAgentCOnfigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string config_json = 1;
  if (this->config_json().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_json());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAgentCOnfigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetAgentCOnfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAgentCOnfigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAgentCOnfigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetAgentCOnfigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetAgentCOnfigResponse)
    MergeFrom(*source);
  }
}

void GetAgentCOnfigResponse::MergeFrom(const GetAgentCOnfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetAgentCOnfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.config_json().size() > 0) {
    _internal_set_config_json(from._internal_config_json());
  }
}

void GetAgentCOnfigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetAgentCOnfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAgentCOnfigResponse::CopyFrom(const GetAgentCOnfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetAgentCOnfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAgentCOnfigResponse::IsInitialized() const {
  return true;
}

void GetAgentCOnfigResponse::InternalSwap(GetAgentCOnfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  config_json_.Swap(&other->config_json_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAgentCOnfigResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ComputeMatchesRequest::InitAsDefaultInstance() {
}
class ComputeMatchesRequest::_Internal {
 public:
};

ComputeMatchesRequest::ComputeMatchesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ComputeMatchesRequest)
}
ComputeMatchesRequest::ComputeMatchesRequest(const ComputeMatchesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_id().empty()) {
    image_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_image_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ComputeMatchesRequest)
}

void ComputeMatchesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ComputeMatchesRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ComputeMatchesRequest::~ComputeMatchesRequest() {
  // @@protoc_insertion_point(destructor:ComputeMatchesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ComputeMatchesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ComputeMatchesRequest::ArenaDtor(void* object) {
  ComputeMatchesRequest* _this = reinterpret_cast< ComputeMatchesRequest* >(object);
  (void)_this;
}
void ComputeMatchesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ComputeMatchesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ComputeMatchesRequest& ComputeMatchesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ComputeMatchesRequest_server_2eproto.base);
  return *internal_default_instance();
}


void ComputeMatchesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ComputeMatchesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComputeMatchesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ComputeMatchesRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ComputeMatchesRequest.image_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ComputeMatchesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComputeMatchesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ComputeMatchesRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_id().data(), static_cast<int>(this->_internal_image_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ComputeMatchesRequest.image_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_image_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComputeMatchesRequest)
  return target;
}

size_t ComputeMatchesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ComputeMatchesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComputeMatchesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ComputeMatchesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputeMatchesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ComputeMatchesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ComputeMatchesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ComputeMatchesRequest)
    MergeFrom(*source);
  }
}

void ComputeMatchesRequest::MergeFrom(const ComputeMatchesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ComputeMatchesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
  if (from.image_id().size() > 0) {
    _internal_set_image_id(from._internal_image_id());
  }
}

void ComputeMatchesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ComputeMatchesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputeMatchesRequest::CopyFrom(const ComputeMatchesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ComputeMatchesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputeMatchesRequest::IsInitialized() const {
  return true;
}

void ComputeMatchesRequest::InternalSwap(ComputeMatchesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_id_.Swap(&other->image_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ComputeMatchesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ComputeMatchesResponse::InitAsDefaultInstance() {
}
class ComputeMatchesResponse::_Internal {
 public:
};

ComputeMatchesResponse::ComputeMatchesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ComputeMatchesResponse)
}
ComputeMatchesResponse::ComputeMatchesResponse(const ComputeMatchesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ComputeMatchesResponse)
}

void ComputeMatchesResponse::SharedCtor() {
}

ComputeMatchesResponse::~ComputeMatchesResponse() {
  // @@protoc_insertion_point(destructor:ComputeMatchesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ComputeMatchesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ComputeMatchesResponse::ArenaDtor(void* object) {
  ComputeMatchesResponse* _this = reinterpret_cast< ComputeMatchesResponse* >(object);
  (void)_this;
}
void ComputeMatchesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ComputeMatchesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ComputeMatchesResponse& ComputeMatchesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ComputeMatchesResponse_server_2eproto.base);
  return *internal_default_instance();
}


void ComputeMatchesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ComputeMatchesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComputeMatchesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ComputeMatchesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ComputeMatchesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ComputeMatchesResponse)
  return target;
}

size_t ComputeMatchesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ComputeMatchesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComputeMatchesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ComputeMatchesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputeMatchesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ComputeMatchesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ComputeMatchesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ComputeMatchesResponse)
    MergeFrom(*source);
  }
}

void ComputeMatchesResponse::MergeFrom(const ComputeMatchesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ComputeMatchesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ComputeMatchesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ComputeMatchesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputeMatchesResponse::CopyFrom(const ComputeMatchesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ComputeMatchesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputeMatchesResponse::IsInitialized() const {
  return true;
}

void ComputeMatchesResponse::InternalSwap(ComputeMatchesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ComputeMatchesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllImagesRequest::InitAsDefaultInstance() {
}
class GetAllImagesRequest::_Internal {
 public:
};

GetAllImagesRequest::GetAllImagesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetAllImagesRequest)
}
GetAllImagesRequest::GetAllImagesRequest(const GetAllImagesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GetAllImagesRequest)
}

void GetAllImagesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAllImagesRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAllImagesRequest::~GetAllImagesRequest() {
  // @@protoc_insertion_point(destructor:GetAllImagesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllImagesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAllImagesRequest::ArenaDtor(void* object) {
  GetAllImagesRequest* _this = reinterpret_cast< GetAllImagesRequest* >(object);
  (void)_this;
}
void GetAllImagesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllImagesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllImagesRequest& GetAllImagesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllImagesRequest_server_2eproto.base);
  return *internal_default_instance();
}


void GetAllImagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetAllImagesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllImagesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetAllImagesRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllImagesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetAllImagesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetAllImagesRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetAllImagesRequest)
  return target;
}

size_t GetAllImagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetAllImagesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllImagesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetAllImagesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllImagesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllImagesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetAllImagesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetAllImagesRequest)
    MergeFrom(*source);
  }
}

void GetAllImagesRequest::MergeFrom(const GetAllImagesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetAllImagesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
}

void GetAllImagesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetAllImagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllImagesRequest::CopyFrom(const GetAllImagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetAllImagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllImagesRequest::IsInitialized() const {
  return true;
}

void GetAllImagesRequest::InternalSwap(GetAllImagesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllImagesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllImagesResponse::InitAsDefaultInstance() {
}
class GetAllImagesResponse::_Internal {
 public:
};

GetAllImagesResponse::GetAllImagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  images_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetAllImagesResponse)
}
GetAllImagesResponse::GetAllImagesResponse(const GetAllImagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      images_(from.images_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GetAllImagesResponse)
}

void GetAllImagesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAllImagesResponse_server_2eproto.base);
}

GetAllImagesResponse::~GetAllImagesResponse() {
  // @@protoc_insertion_point(destructor:GetAllImagesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllImagesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAllImagesResponse::ArenaDtor(void* object) {
  GetAllImagesResponse* _this = reinterpret_cast< GetAllImagesResponse* >(object);
  (void)_this;
}
void GetAllImagesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllImagesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllImagesResponse& GetAllImagesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllImagesResponse_server_2eproto.base);
  return *internal_default_instance();
}


void GetAllImagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetAllImagesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllImagesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string images = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_images();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetAllImagesResponse.images"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllImagesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetAllImagesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string images = 1;
  for (int i = 0, n = this->_internal_images_size(); i < n; i++) {
    const auto& s = this->_internal_images(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetAllImagesResponse.images");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetAllImagesResponse)
  return target;
}

size_t GetAllImagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetAllImagesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string images = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(images_.size());
  for (int i = 0, n = images_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      images_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllImagesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetAllImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllImagesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllImagesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetAllImagesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetAllImagesResponse)
    MergeFrom(*source);
  }
}

void GetAllImagesResponse::MergeFrom(const GetAllImagesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetAllImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
}

void GetAllImagesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetAllImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllImagesResponse::CopyFrom(const GetAllImagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetAllImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllImagesResponse::IsInitialized() const {
  return true;
}

void GetAllImagesResponse::InternalSwap(GetAllImagesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  images_.InternalSwap(&other->images_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllImagesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetImageRegionsResponse_FeatureList_Feature::InitAsDefaultInstance() {
}
class GetImageRegionsResponse_FeatureList_Feature::_Internal {
 public:
};

GetImageRegionsResponse_FeatureList_Feature::GetImageRegionsResponse_FeatureList_Feature(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetImageRegionsResponse.FeatureList.Feature)
}
GetImageRegionsResponse_FeatureList_Feature::GetImageRegionsResponse_FeatureList_Feature(const GetImageRegionsResponse_FeatureList_Feature& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:GetImageRegionsResponse.FeatureList.Feature)
}

void GetImageRegionsResponse_FeatureList_Feature::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

GetImageRegionsResponse_FeatureList_Feature::~GetImageRegionsResponse_FeatureList_Feature() {
  // @@protoc_insertion_point(destructor:GetImageRegionsResponse.FeatureList.Feature)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetImageRegionsResponse_FeatureList_Feature::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetImageRegionsResponse_FeatureList_Feature::ArenaDtor(void* object) {
  GetImageRegionsResponse_FeatureList_Feature* _this = reinterpret_cast< GetImageRegionsResponse_FeatureList_Feature* >(object);
  (void)_this;
}
void GetImageRegionsResponse_FeatureList_Feature::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetImageRegionsResponse_FeatureList_Feature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetImageRegionsResponse_FeatureList_Feature& GetImageRegionsResponse_FeatureList_Feature::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetImageRegionsResponse_FeatureList_Feature_server_2eproto.base);
  return *internal_default_instance();
}


void GetImageRegionsResponse_FeatureList_Feature::Clear() {
// @@protoc_insertion_point(message_clear_start:GetImageRegionsResponse.FeatureList.Feature)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetImageRegionsResponse_FeatureList_Feature::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetImageRegionsResponse_FeatureList_Feature::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetImageRegionsResponse.FeatureList.Feature)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetImageRegionsResponse.FeatureList.Feature)
  return target;
}

size_t GetImageRegionsResponse_FeatureList_Feature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetImageRegionsResponse.FeatureList.Feature)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_y());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetImageRegionsResponse_FeatureList_Feature::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetImageRegionsResponse.FeatureList.Feature)
  GOOGLE_DCHECK_NE(&from, this);
  const GetImageRegionsResponse_FeatureList_Feature* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetImageRegionsResponse_FeatureList_Feature>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetImageRegionsResponse.FeatureList.Feature)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetImageRegionsResponse.FeatureList.Feature)
    MergeFrom(*source);
  }
}

void GetImageRegionsResponse_FeatureList_Feature::MergeFrom(const GetImageRegionsResponse_FeatureList_Feature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetImageRegionsResponse.FeatureList.Feature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    _internal_set_x(from._internal_x());
  }
  if (from.y() != 0) {
    _internal_set_y(from._internal_y());
  }
}

void GetImageRegionsResponse_FeatureList_Feature::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetImageRegionsResponse.FeatureList.Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetImageRegionsResponse_FeatureList_Feature::CopyFrom(const GetImageRegionsResponse_FeatureList_Feature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetImageRegionsResponse.FeatureList.Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetImageRegionsResponse_FeatureList_Feature::IsInitialized() const {
  return true;
}

void GetImageRegionsResponse_FeatureList_Feature::InternalSwap(GetImageRegionsResponse_FeatureList_Feature* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetImageRegionsResponse_FeatureList_Feature, y_)
      + sizeof(GetImageRegionsResponse_FeatureList_Feature::y_)
      - PROTOBUF_FIELD_OFFSET(GetImageRegionsResponse_FeatureList_Feature, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetImageRegionsResponse_FeatureList_Feature::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetImageRegionsResponse_FeatureList::InitAsDefaultInstance() {
}
class GetImageRegionsResponse_FeatureList::_Internal {
 public:
};

GetImageRegionsResponse_FeatureList::GetImageRegionsResponse_FeatureList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  features_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetImageRegionsResponse.FeatureList)
}
GetImageRegionsResponse_FeatureList::GetImageRegionsResponse_FeatureList(const GetImageRegionsResponse_FeatureList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      features_(from.features_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GetImageRegionsResponse.FeatureList)
}

void GetImageRegionsResponse_FeatureList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetImageRegionsResponse_FeatureList_server_2eproto.base);
}

GetImageRegionsResponse_FeatureList::~GetImageRegionsResponse_FeatureList() {
  // @@protoc_insertion_point(destructor:GetImageRegionsResponse.FeatureList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetImageRegionsResponse_FeatureList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetImageRegionsResponse_FeatureList::ArenaDtor(void* object) {
  GetImageRegionsResponse_FeatureList* _this = reinterpret_cast< GetImageRegionsResponse_FeatureList* >(object);
  (void)_this;
}
void GetImageRegionsResponse_FeatureList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetImageRegionsResponse_FeatureList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetImageRegionsResponse_FeatureList& GetImageRegionsResponse_FeatureList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetImageRegionsResponse_FeatureList_server_2eproto.base);
  return *internal_default_instance();
}


void GetImageRegionsResponse_FeatureList::Clear() {
// @@protoc_insertion_point(message_clear_start:GetImageRegionsResponse.FeatureList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetImageRegionsResponse_FeatureList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .GetImageRegionsResponse.FeatureList.Feature features = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_features(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetImageRegionsResponse_FeatureList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetImageRegionsResponse.FeatureList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GetImageRegionsResponse.FeatureList.Feature features = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_features_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_features(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetImageRegionsResponse.FeatureList)
  return target;
}

size_t GetImageRegionsResponse_FeatureList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetImageRegionsResponse.FeatureList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GetImageRegionsResponse.FeatureList.Feature features = 1;
  total_size += 1UL * this->_internal_features_size();
  for (const auto& msg : this->features_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetImageRegionsResponse_FeatureList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetImageRegionsResponse.FeatureList)
  GOOGLE_DCHECK_NE(&from, this);
  const GetImageRegionsResponse_FeatureList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetImageRegionsResponse_FeatureList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetImageRegionsResponse.FeatureList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetImageRegionsResponse.FeatureList)
    MergeFrom(*source);
  }
}

void GetImageRegionsResponse_FeatureList::MergeFrom(const GetImageRegionsResponse_FeatureList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetImageRegionsResponse.FeatureList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
}

void GetImageRegionsResponse_FeatureList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetImageRegionsResponse.FeatureList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetImageRegionsResponse_FeatureList::CopyFrom(const GetImageRegionsResponse_FeatureList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetImageRegionsResponse.FeatureList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetImageRegionsResponse_FeatureList::IsInitialized() const {
  return true;
}

void GetImageRegionsResponse_FeatureList::InternalSwap(GetImageRegionsResponse_FeatureList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  features_.InternalSwap(&other->features_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetImageRegionsResponse_FeatureList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetImageRegionsResponse_RegionsEntry_DoNotUse::GetImageRegionsResponse_RegionsEntry_DoNotUse() {}
GetImageRegionsResponse_RegionsEntry_DoNotUse::GetImageRegionsResponse_RegionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetImageRegionsResponse_RegionsEntry_DoNotUse::MergeFrom(const GetImageRegionsResponse_RegionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetImageRegionsResponse_RegionsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetImageRegionsResponse_RegionsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetImageRegionsResponse::InitAsDefaultInstance() {
}
class GetImageRegionsResponse::_Internal {
 public:
};

GetImageRegionsResponse::GetImageRegionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  regions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetImageRegionsResponse)
}
GetImageRegionsResponse::GetImageRegionsResponse(const GetImageRegionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  regions_.MergeFrom(from.regions_);
  // @@protoc_insertion_point(copy_constructor:GetImageRegionsResponse)
}

void GetImageRegionsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetImageRegionsResponse_server_2eproto.base);
}

GetImageRegionsResponse::~GetImageRegionsResponse() {
  // @@protoc_insertion_point(destructor:GetImageRegionsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetImageRegionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetImageRegionsResponse::ArenaDtor(void* object) {
  GetImageRegionsResponse* _this = reinterpret_cast< GetImageRegionsResponse* >(object);
  (void)_this;
}
void GetImageRegionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetImageRegionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetImageRegionsResponse& GetImageRegionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetImageRegionsResponse_server_2eproto.base);
  return *internal_default_instance();
}


void GetImageRegionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetImageRegionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  regions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetImageRegionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .GetImageRegionsResponse.FeatureList> regions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&regions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetImageRegionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetImageRegionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .GetImageRegionsResponse.FeatureList> regions = 1;
  if (!this->_internal_regions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::GetImageRegionsResponse_FeatureList >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "GetImageRegionsResponse.RegionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_regions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_regions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::GetImageRegionsResponse_FeatureList >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::GetImageRegionsResponse_FeatureList >::const_iterator
          it = this->_internal_regions().begin();
          it != this->_internal_regions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetImageRegionsResponse_RegionsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::GetImageRegionsResponse_FeatureList >::const_iterator
          it = this->_internal_regions().begin();
          it != this->_internal_regions().end(); ++it) {
        target = GetImageRegionsResponse_RegionsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetImageRegionsResponse)
  return target;
}

size_t GetImageRegionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetImageRegionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .GetImageRegionsResponse.FeatureList> regions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_regions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::GetImageRegionsResponse_FeatureList >::const_iterator
      it = this->_internal_regions().begin();
      it != this->_internal_regions().end(); ++it) {
    total_size += GetImageRegionsResponse_RegionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetImageRegionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetImageRegionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetImageRegionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetImageRegionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetImageRegionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetImageRegionsResponse)
    MergeFrom(*source);
  }
}

void GetImageRegionsResponse::MergeFrom(const GetImageRegionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetImageRegionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  regions_.MergeFrom(from.regions_);
}

void GetImageRegionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetImageRegionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetImageRegionsResponse::CopyFrom(const GetImageRegionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetImageRegionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetImageRegionsResponse::IsInitialized() const {
  return true;
}

void GetImageRegionsResponse::InternalSwap(GetImageRegionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  regions_.Swap(&other->regions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetImageRegionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetImageRegionsRequest::InitAsDefaultInstance() {
}
class GetImageRegionsRequest::_Internal {
 public:
};

GetImageRegionsRequest::GetImageRegionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetImageRegionsRequest)
}
GetImageRegionsRequest::GetImageRegionsRequest(const GetImageRegionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_id().empty()) {
    image_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_image_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GetImageRegionsRequest)
}

void GetImageRegionsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetImageRegionsRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetImageRegionsRequest::~GetImageRegionsRequest() {
  // @@protoc_insertion_point(destructor:GetImageRegionsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetImageRegionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetImageRegionsRequest::ArenaDtor(void* object) {
  GetImageRegionsRequest* _this = reinterpret_cast< GetImageRegionsRequest* >(object);
  (void)_this;
}
void GetImageRegionsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetImageRegionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetImageRegionsRequest& GetImageRegionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetImageRegionsRequest_server_2eproto.base);
  return *internal_default_instance();
}


void GetImageRegionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetImageRegionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetImageRegionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetImageRegionsRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetImageRegionsRequest.image_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetImageRegionsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetImageRegionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetImageRegionsRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_id().data(), static_cast<int>(this->_internal_image_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetImageRegionsRequest.image_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_image_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetImageRegionsRequest)
  return target;
}

size_t GetImageRegionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetImageRegionsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetImageRegionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetImageRegionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetImageRegionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetImageRegionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetImageRegionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetImageRegionsRequest)
    MergeFrom(*source);
  }
}

void GetImageRegionsRequest::MergeFrom(const GetImageRegionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetImageRegionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
  if (from.image_id().size() > 0) {
    _internal_set_image_id(from._internal_image_id());
  }
}

void GetImageRegionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetImageRegionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetImageRegionsRequest::CopyFrom(const GetImageRegionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetImageRegionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetImageRegionsRequest::IsInitialized() const {
  return true;
}

void GetImageRegionsRequest::InternalSwap(GetImageRegionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_id_.Swap(&other->image_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetImageRegionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ScoreImagesRequest::InitAsDefaultInstance() {
}
class ScoreImagesRequest::_Internal {
 public:
};

ScoreImagesRequest::ScoreImagesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ScoreImagesRequest)
}
ScoreImagesRequest::ScoreImagesRequest(const ScoreImagesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ScoreImagesRequest)
}

void ScoreImagesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ScoreImagesRequest_server_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ScoreImagesRequest::~ScoreImagesRequest() {
  // @@protoc_insertion_point(destructor:ScoreImagesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ScoreImagesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ScoreImagesRequest::ArenaDtor(void* object) {
  ScoreImagesRequest* _this = reinterpret_cast< ScoreImagesRequest* >(object);
  (void)_this;
}
void ScoreImagesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ScoreImagesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScoreImagesRequest& ScoreImagesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScoreImagesRequest_server_2eproto.base);
  return *internal_default_instance();
}


void ScoreImagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ScoreImagesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScoreImagesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ScoreImagesRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScoreImagesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ScoreImagesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ScoreImagesRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScoreImagesRequest)
  return target;
}

size_t ScoreImagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScoreImagesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScoreImagesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScoreImagesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScoreImagesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScoreImagesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScoreImagesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScoreImagesRequest)
    MergeFrom(*source);
  }
}

void ScoreImagesRequest::MergeFrom(const ScoreImagesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScoreImagesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
}

void ScoreImagesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScoreImagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScoreImagesRequest::CopyFrom(const ScoreImagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScoreImagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScoreImagesRequest::IsInitialized() const {
  return true;
}

void ScoreImagesRequest::InternalSwap(ScoreImagesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ScoreImagesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ScoreImagesResponse::InitAsDefaultInstance() {
}
class ScoreImagesResponse::_Internal {
 public:
};

ScoreImagesResponse::ScoreImagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ScoreImagesResponse)
}
ScoreImagesResponse::ScoreImagesResponse(const ScoreImagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ScoreImagesResponse)
}

void ScoreImagesResponse::SharedCtor() {
}

ScoreImagesResponse::~ScoreImagesResponse() {
  // @@protoc_insertion_point(destructor:ScoreImagesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ScoreImagesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ScoreImagesResponse::ArenaDtor(void* object) {
  ScoreImagesResponse* _this = reinterpret_cast< ScoreImagesResponse* >(object);
  (void)_this;
}
void ScoreImagesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ScoreImagesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScoreImagesResponse& ScoreImagesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScoreImagesResponse_server_2eproto.base);
  return *internal_default_instance();
}


void ScoreImagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ScoreImagesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScoreImagesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScoreImagesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ScoreImagesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScoreImagesResponse)
  return target;
}

size_t ScoreImagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScoreImagesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScoreImagesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScoreImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScoreImagesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScoreImagesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScoreImagesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScoreImagesResponse)
    MergeFrom(*source);
  }
}

void ScoreImagesResponse::MergeFrom(const ScoreImagesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScoreImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ScoreImagesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScoreImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScoreImagesResponse::CopyFrom(const ScoreImagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScoreImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScoreImagesResponse::IsInitialized() const {
  return true;
}

void ScoreImagesResponse::InternalSwap(ScoreImagesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScoreImagesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ImageMetaData* Arena::CreateMaybeMessage< ::ImageMetaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ImageMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::ImageData* Arena::CreateMaybeMessage< ::ImageData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ImageData >(arena);
}
template<> PROTOBUF_NOINLINE ::SparsePointCloudData* Arena::CreateMaybeMessage< ::SparsePointCloudData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SparsePointCloudData >(arena);
}
template<> PROTOBUF_NOINLINE ::SparsePointCloudMetaData* Arena::CreateMaybeMessage< ::SparsePointCloudMetaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SparsePointCloudMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::OBJMetaData* Arena::CreateMaybeMessage< ::OBJMetaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OBJMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::OBJData* Arena::CreateMaybeMessage< ::OBJData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OBJData >(arena);
}
template<> PROTOBUF_NOINLINE ::ReconstructionData* Arena::CreateMaybeMessage< ::ReconstructionData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReconstructionData >(arena);
}
template<> PROTOBUF_NOINLINE ::ReconstructionUploadImageResponse* Arena::CreateMaybeMessage< ::ReconstructionUploadImageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReconstructionUploadImageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ReconstructionUploadImageRequest* Arena::CreateMaybeMessage< ::ReconstructionUploadImageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReconstructionUploadImageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::NewReconstructionRequest* Arena::CreateMaybeMessage< ::NewReconstructionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NewReconstructionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::NewReconstructionResponse* Arena::CreateMaybeMessage< ::NewReconstructionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NewReconstructionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SparseReconstructRequest* Arena::CreateMaybeMessage< ::SparseReconstructRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SparseReconstructRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GetOBJRequest* Arena::CreateMaybeMessage< ::GetOBJRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetOBJRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GetOBJResponse* Arena::CreateMaybeMessage< ::GetOBJResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetOBJResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SparseReconstructResponse* Arena::CreateMaybeMessage< ::SparseReconstructResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SparseReconstructResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ReconstructionOBJ* Arena::CreateMaybeMessage< ::ReconstructionOBJ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReconstructionOBJ >(arena);
}
template<> PROTOBUF_NOINLINE ::DeleteReconstructionRequest* Arena::CreateMaybeMessage< ::DeleteReconstructionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DeleteReconstructionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::DeleteReconstructionResponse* Arena::CreateMaybeMessage< ::DeleteReconstructionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DeleteReconstructionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CameraIntrinsics* Arena::CreateMaybeMessage< ::CameraIntrinsics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CameraIntrinsics >(arena);
}
template<> PROTOBUF_NOINLINE ::HandhsakeRequest* Arena::CreateMaybeMessage< ::HandhsakeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HandhsakeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::HandshakeResponse* Arena::CreateMaybeMessage< ::HandshakeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HandshakeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::StartSessionRequest* Arena::CreateMaybeMessage< ::StartSessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StartSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::StartSessionResponse* Arena::CreateMaybeMessage< ::StartSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StartSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::StopSessionRequest* Arena::CreateMaybeMessage< ::StopSessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StopSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::StopSessionResponse* Arena::CreateMaybeMessage< ::StopSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StopSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SessionAddImageRequest* Arena::CreateMaybeMessage< ::SessionAddImageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SessionAddImageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SessionAddImageResponse* Arena::CreateMaybeMessage< ::SessionAddImageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SessionAddImageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetSparseRequest* Arena::CreateMaybeMessage< ::GetSparseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetSparseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GetSparseResponse* Arena::CreateMaybeMessage< ::GetSparseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetSparseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetReconstructionConfigRequest* Arena::CreateMaybeMessage< ::GetReconstructionConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetReconstructionConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GetReconstructionConfigResponse* Arena::CreateMaybeMessage< ::GetReconstructionConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetReconstructionConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ReconstructionUploadImageBatchRequest* Arena::CreateMaybeMessage< ::ReconstructionUploadImageBatchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReconstructionUploadImageBatchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ReconstructionUploadImageBatchResponse* Arena::CreateMaybeMessage< ::ReconstructionUploadImageBatchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReconstructionUploadImageBatchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MVSRequest* Arena::CreateMaybeMessage< ::MVSRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MVSRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MVSResponse* Arena::CreateMaybeMessage< ::MVSResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MVSResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SetAgentConfigFieldsRequest* Arena::CreateMaybeMessage< ::SetAgentConfigFieldsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SetAgentConfigFieldsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SetAgentConfigFieldsResponse* Arena::CreateMaybeMessage< ::SetAgentConfigFieldsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SetAgentConfigFieldsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SetReconstructionConfigFieldsRequest* Arena::CreateMaybeMessage< ::SetReconstructionConfigFieldsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SetReconstructionConfigFieldsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SetReconstructionConfigFieldsResponse* Arena::CreateMaybeMessage< ::SetReconstructionConfigFieldsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SetReconstructionConfigFieldsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetAgentConfigRequest* Arena::CreateMaybeMessage< ::GetAgentConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetAgentConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GetAgentCOnfigResponse* Arena::CreateMaybeMessage< ::GetAgentCOnfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetAgentCOnfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ComputeMatchesRequest* Arena::CreateMaybeMessage< ::ComputeMatchesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ComputeMatchesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ComputeMatchesResponse* Arena::CreateMaybeMessage< ::ComputeMatchesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ComputeMatchesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetAllImagesRequest* Arena::CreateMaybeMessage< ::GetAllImagesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetAllImagesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GetAllImagesResponse* Arena::CreateMaybeMessage< ::GetAllImagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetAllImagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetImageRegionsResponse_FeatureList_Feature* Arena::CreateMaybeMessage< ::GetImageRegionsResponse_FeatureList_Feature >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetImageRegionsResponse_FeatureList_Feature >(arena);
}
template<> PROTOBUF_NOINLINE ::GetImageRegionsResponse_FeatureList* Arena::CreateMaybeMessage< ::GetImageRegionsResponse_FeatureList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetImageRegionsResponse_FeatureList >(arena);
}
template<> PROTOBUF_NOINLINE ::GetImageRegionsResponse_RegionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::GetImageRegionsResponse_RegionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetImageRegionsResponse_RegionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetImageRegionsResponse* Arena::CreateMaybeMessage< ::GetImageRegionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetImageRegionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetImageRegionsRequest* Arena::CreateMaybeMessage< ::GetImageRegionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetImageRegionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ScoreImagesRequest* Arena::CreateMaybeMessage< ::ScoreImagesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ScoreImagesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ScoreImagesResponse* Arena::CreateMaybeMessage< ::ScoreImagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ScoreImagesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
