// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: index.proto

#include "index.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_index_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClosestNDetails_index_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_index_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClosestNDetails_ClosestNImageDetails_index_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_index_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse_index_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_index_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClosestNDetails_ImageDetailsEntry_DoNotUse_index_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_index_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IndexWord_index_2eproto;
class IndexWordDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IndexWord> _instance;
} _IndexWord_default_instance_;
class IndexImageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IndexImageRequest> _instance;
} _IndexImageRequest_default_instance_;
class IndexImageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IndexImageResponse> _instance;
} _IndexImageResponse_default_instance_;
class GetBagOfWordsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBagOfWordsRequest> _instance;
} _GetBagOfWordsRequest_default_instance_;
class GetBagOfWordsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBagOfWordsResponse> _instance;
} _GetBagOfWordsResponse_default_instance_;
class ClosestNRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClosestNRequest> _instance;
} _ClosestNRequest_default_instance_;
class ClosestNResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClosestNResponse> _instance;
} _ClosestNResponse_default_instance_;
class ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse> _instance;
} _ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse_default_instance_;
class ClosestNDetails_ClosestNImageDetailsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClosestNDetails_ClosestNImageDetails> _instance;
} _ClosestNDetails_ClosestNImageDetails_default_instance_;
class ClosestNDetails_ImageDetailsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClosestNDetails_ImageDetailsEntry_DoNotUse> _instance;
} _ClosestNDetails_ImageDetailsEntry_DoNotUse_default_instance_;
class ClosestNDetailsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClosestNDetails> _instance;
} _ClosestNDetails_default_instance_;
class ScoreImageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScoreImageRequest> _instance;
} _ScoreImageRequest_default_instance_;
class ScoreImageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScoreImageResponse> _instance;
} _ScoreImageResponse_default_instance_;
static void InitDefaultsscc_info_ClosestNDetails_index_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClosestNDetails_default_instance_;
    new (ptr) ::ClosestNDetails();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClosestNDetails::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClosestNDetails_index_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ClosestNDetails_index_2eproto}, {
      &scc_info_ClosestNDetails_ImageDetailsEntry_DoNotUse_index_2eproto.base,}};

static void InitDefaultsscc_info_ClosestNDetails_ClosestNImageDetails_index_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClosestNDetails_ClosestNImageDetails_default_instance_;
    new (ptr) ::ClosestNDetails_ClosestNImageDetails();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClosestNDetails_ClosestNImageDetails::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClosestNDetails_ClosestNImageDetails_index_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ClosestNDetails_ClosestNImageDetails_index_2eproto}, {
      &scc_info_ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse_index_2eproto.base,}};

static void InitDefaultsscc_info_ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse_index_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse_default_instance_;
    new (ptr) ::ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse();
  }
  ::ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse_index_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse_index_2eproto}, {}};

static void InitDefaultsscc_info_ClosestNDetails_ImageDetailsEntry_DoNotUse_index_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClosestNDetails_ImageDetailsEntry_DoNotUse_default_instance_;
    new (ptr) ::ClosestNDetails_ImageDetailsEntry_DoNotUse();
  }
  ::ClosestNDetails_ImageDetailsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClosestNDetails_ImageDetailsEntry_DoNotUse_index_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ClosestNDetails_ImageDetailsEntry_DoNotUse_index_2eproto}, {
      &scc_info_ClosestNDetails_ClosestNImageDetails_index_2eproto.base,}};

static void InitDefaultsscc_info_ClosestNRequest_index_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClosestNRequest_default_instance_;
    new (ptr) ::ClosestNRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClosestNRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClosestNRequest_index_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClosestNRequest_index_2eproto}, {}};

static void InitDefaultsscc_info_ClosestNResponse_index_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClosestNResponse_default_instance_;
    new (ptr) ::ClosestNResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClosestNResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClosestNResponse_index_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ClosestNResponse_index_2eproto}, {
      &scc_info_ClosestNDetails_index_2eproto.base,}};

static void InitDefaultsscc_info_GetBagOfWordsRequest_index_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetBagOfWordsRequest_default_instance_;
    new (ptr) ::GetBagOfWordsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetBagOfWordsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBagOfWordsRequest_index_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetBagOfWordsRequest_index_2eproto}, {}};

static void InitDefaultsscc_info_GetBagOfWordsResponse_index_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetBagOfWordsResponse_default_instance_;
    new (ptr) ::GetBagOfWordsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetBagOfWordsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetBagOfWordsResponse_index_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetBagOfWordsResponse_index_2eproto}, {
      &scc_info_IndexWord_index_2eproto.base,}};

static void InitDefaultsscc_info_IndexImageRequest_index_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_IndexImageRequest_default_instance_;
    new (ptr) ::IndexImageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IndexImageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IndexImageRequest_index_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IndexImageRequest_index_2eproto}, {}};

static void InitDefaultsscc_info_IndexImageResponse_index_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_IndexImageResponse_default_instance_;
    new (ptr) ::IndexImageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IndexImageResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IndexImageResponse_index_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IndexImageResponse_index_2eproto}, {}};

static void InitDefaultsscc_info_IndexWord_index_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_IndexWord_default_instance_;
    new (ptr) ::IndexWord();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IndexWord::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IndexWord_index_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IndexWord_index_2eproto}, {}};

static void InitDefaultsscc_info_ScoreImageRequest_index_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ScoreImageRequest_default_instance_;
    new (ptr) ::ScoreImageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScoreImageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScoreImageRequest_index_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScoreImageRequest_index_2eproto}, {}};

static void InitDefaultsscc_info_ScoreImageResponse_index_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ScoreImageResponse_default_instance_;
    new (ptr) ::ScoreImageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScoreImageResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScoreImageResponse_index_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScoreImageResponse_index_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_index_2eproto[13];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_index_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_index_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_index_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IndexWord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IndexWord, word_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IndexImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IndexImageRequest, reconstruction_id_),
  PROTOBUF_FIELD_OFFSET(::IndexImageRequest, image_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IndexImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetBagOfWordsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetBagOfWordsRequest, image_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetBagOfWordsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetBagOfWordsResponse, words_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClosestNRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClosestNRequest, reconstruction_id_),
  PROTOBUF_FIELD_OFFSET(::ClosestNRequest, image_id_),
  PROTOBUF_FIELD_OFFSET(::ClosestNRequest, n_),
  PROTOBUF_FIELD_OFFSET(::ClosestNRequest, include_details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClosestNResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClosestNResponse, image_ids_),
  PROTOBUF_FIELD_OFFSET(::ClosestNResponse, details_),
  PROTOBUF_FIELD_OFFSET(::ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClosestNDetails_ClosestNImageDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClosestNDetails_ClosestNImageDetails, descriptor_scores_),
  PROTOBUF_FIELD_OFFSET(::ClosestNDetails_ClosestNImageDetails, score_),
  PROTOBUF_FIELD_OFFSET(::ClosestNDetails_ImageDetailsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClosestNDetails_ImageDetailsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClosestNDetails_ImageDetailsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ClosestNDetails_ImageDetailsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClosestNDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClosestNDetails, image_details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ScoreImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ScoreImageRequest, reconstruction_id_),
  PROTOBUF_FIELD_OFFSET(::ScoreImageRequest, image_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ScoreImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::IndexWord)},
  { 6, -1, sizeof(::IndexImageRequest)},
  { 13, -1, sizeof(::IndexImageResponse)},
  { 18, -1, sizeof(::GetBagOfWordsRequest)},
  { 24, -1, sizeof(::GetBagOfWordsResponse)},
  { 30, -1, sizeof(::ClosestNRequest)},
  { 39, -1, sizeof(::ClosestNResponse)},
  { 46, 53, sizeof(::ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse)},
  { 55, -1, sizeof(::ClosestNDetails_ClosestNImageDetails)},
  { 62, 69, sizeof(::ClosestNDetails_ImageDetailsEntry_DoNotUse)},
  { 71, -1, sizeof(::ClosestNDetails)},
  { 77, -1, sizeof(::ScoreImageRequest)},
  { 84, -1, sizeof(::ScoreImageResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_IndexWord_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_IndexImageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_IndexImageResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetBagOfWordsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetBagOfWordsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClosestNRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClosestNResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClosestNDetails_ClosestNImageDetails_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClosestNDetails_ImageDetailsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClosestNDetails_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ScoreImageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ScoreImageResponse_default_instance_),
};

const char descriptor_table_protodef_index_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013index.proto\"\031\n\tIndexWord\022\014\n\004word\030\001 \001(\014"
  "\"@\n\021IndexImageRequest\022\031\n\021reconstruction_"
  "id\030\001 \001(\t\022\020\n\010image_id\030\002 \001(\t\"\024\n\022IndexImage"
  "Response\"(\n\024GetBagOfWordsRequest\022\020\n\010imag"
  "e_id\030\001 \001(\t\"2\n\025GetBagOfWordsResponse\022\031\n\005w"
  "ords\030\001 \003(\0132\n.IndexWord\"b\n\017ClosestNReques"
  "t\022\031\n\021reconstruction_id\030\001 \001(\t\022\020\n\010image_id"
  "\030\002 \001(\t\022\t\n\001N\030\003 \001(\r\022\027\n\017include_details\030\004 \001"
  "(\010\"H\n\020ClosestNResponse\022\021\n\timage_ids\030\001 \003("
  "\t\022!\n\007details\030\002 \001(\0132\020.ClosestNDetails\"\341\002\n"
  "\017ClosestNDetails\0229\n\rimage_details\030\001 \003(\0132"
  "\".ClosestNDetails.ImageDetailsEntry\032\266\001\n\024"
  "ClosestNImageDetails\022V\n\021descriptor_score"
  "s\030\001 \003(\0132;.ClosestNDetails.ClosestNImageD"
  "etails.DescriptorScoresEntry\022\r\n\005score\030\002 "
  "\001(\002\0327\n\025DescriptorScoresEntry\022\013\n\003key\030\001 \001("
  "\t\022\r\n\005value\030\002 \001(\002:\0028\001\032Z\n\021ImageDetailsEntr"
  "y\022\013\n\003key\030\001 \001(\t\0224\n\005value\030\002 \001(\0132%.ClosestN"
  "Details.ClosestNImageDetails:\0028\001\"@\n\021Scor"
  "eImageRequest\022\031\n\021reconstruction_id\030\001 \001(\t"
  "\022\020\n\010image_id\030\002 \001(\t\"\024\n\022ScoreImageResponse"
  "2\366\001\n\025VisualIndexingService\0225\n\nIndexImage"
  "\022\022.IndexImageRequest\032\023.IndexImageRespons"
  "e\022>\n\rGetBagOfWords\022\025.GetBagOfWordsReques"
  "t\032\026.GetBagOfWordsResponse\022/\n\010ClosestN\022\020."
  "ClosestNRequest\032\021.ClosestNResponse\0225\n\nSc"
  "oreImage\022\022.ScoreImageRequest\032\023.ScoreImag"
  "eResponseb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_index_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_index_2eproto_sccs[13] = {
  &scc_info_ClosestNDetails_index_2eproto.base,
  &scc_info_ClosestNDetails_ClosestNImageDetails_index_2eproto.base,
  &scc_info_ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse_index_2eproto.base,
  &scc_info_ClosestNDetails_ImageDetailsEntry_DoNotUse_index_2eproto.base,
  &scc_info_ClosestNRequest_index_2eproto.base,
  &scc_info_ClosestNResponse_index_2eproto.base,
  &scc_info_GetBagOfWordsRequest_index_2eproto.base,
  &scc_info_GetBagOfWordsResponse_index_2eproto.base,
  &scc_info_IndexImageRequest_index_2eproto.base,
  &scc_info_IndexImageResponse_index_2eproto.base,
  &scc_info_IndexWord_index_2eproto.base,
  &scc_info_ScoreImageRequest_index_2eproto.base,
  &scc_info_ScoreImageResponse_index_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_index_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_index_2eproto = {
  false, false, descriptor_table_protodef_index_2eproto, "index.proto", 1097,
  &descriptor_table_index_2eproto_once, descriptor_table_index_2eproto_sccs, descriptor_table_index_2eproto_deps, 13, 0,
  schemas, file_default_instances, TableStruct_index_2eproto::offsets,
  file_level_metadata_index_2eproto, 13, file_level_enum_descriptors_index_2eproto, file_level_service_descriptors_index_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_index_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_index_2eproto)), true);

// ===================================================================

void IndexWord::InitAsDefaultInstance() {
}
class IndexWord::_Internal {
 public:
};

IndexWord::IndexWord(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndexWord)
}
IndexWord::IndexWord(const IndexWord& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_word().empty()) {
    word_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_word(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:IndexWord)
}

void IndexWord::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IndexWord_index_2eproto.base);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IndexWord::~IndexWord() {
  // @@protoc_insertion_point(destructor:IndexWord)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IndexWord::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  word_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IndexWord::ArenaDtor(void* object) {
  IndexWord* _this = reinterpret_cast< IndexWord* >(object);
  (void)_this;
}
void IndexWord::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IndexWord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IndexWord& IndexWord::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IndexWord_index_2eproto.base);
  return *internal_default_instance();
}


void IndexWord::Clear() {
// @@protoc_insertion_point(message_clear_start:IndexWord)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  word_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IndexWord::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_word();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IndexWord::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndexWord)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes word = 1;
  if (this->word().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_word(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndexWord)
  return target;
}

size_t IndexWord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndexWord)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes word = 1;
  if (this->word().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_word());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexWord::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IndexWord)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexWord* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IndexWord>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IndexWord)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IndexWord)
    MergeFrom(*source);
  }
}

void IndexWord::MergeFrom(const IndexWord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IndexWord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.word().size() > 0) {
    _internal_set_word(from._internal_word());
  }
}

void IndexWord::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IndexWord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexWord::CopyFrom(const IndexWord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndexWord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexWord::IsInitialized() const {
  return true;
}

void IndexWord::InternalSwap(IndexWord* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  word_.Swap(&other->word_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata IndexWord::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IndexImageRequest::InitAsDefaultInstance() {
}
class IndexImageRequest::_Internal {
 public:
};

IndexImageRequest::IndexImageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndexImageRequest)
}
IndexImageRequest::IndexImageRequest(const IndexImageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_id().empty()) {
    image_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_image_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:IndexImageRequest)
}

void IndexImageRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IndexImageRequest_index_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IndexImageRequest::~IndexImageRequest() {
  // @@protoc_insertion_point(destructor:IndexImageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IndexImageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IndexImageRequest::ArenaDtor(void* object) {
  IndexImageRequest* _this = reinterpret_cast< IndexImageRequest* >(object);
  (void)_this;
}
void IndexImageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IndexImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IndexImageRequest& IndexImageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IndexImageRequest_index_2eproto.base);
  return *internal_default_instance();
}


void IndexImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:IndexImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IndexImageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IndexImageRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IndexImageRequest.image_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IndexImageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndexImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IndexImageRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_id().data(), static_cast<int>(this->_internal_image_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IndexImageRequest.image_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_image_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndexImageRequest)
  return target;
}

size_t IndexImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndexImageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexImageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IndexImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexImageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IndexImageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IndexImageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IndexImageRequest)
    MergeFrom(*source);
  }
}

void IndexImageRequest::MergeFrom(const IndexImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IndexImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
  if (from.image_id().size() > 0) {
    _internal_set_image_id(from._internal_image_id());
  }
}

void IndexImageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IndexImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexImageRequest::CopyFrom(const IndexImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndexImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexImageRequest::IsInitialized() const {
  return true;
}

void IndexImageRequest::InternalSwap(IndexImageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_id_.Swap(&other->image_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata IndexImageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IndexImageResponse::InitAsDefaultInstance() {
}
class IndexImageResponse::_Internal {
 public:
};

IndexImageResponse::IndexImageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndexImageResponse)
}
IndexImageResponse::IndexImageResponse(const IndexImageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IndexImageResponse)
}

void IndexImageResponse::SharedCtor() {
}

IndexImageResponse::~IndexImageResponse() {
  // @@protoc_insertion_point(destructor:IndexImageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IndexImageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IndexImageResponse::ArenaDtor(void* object) {
  IndexImageResponse* _this = reinterpret_cast< IndexImageResponse* >(object);
  (void)_this;
}
void IndexImageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IndexImageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IndexImageResponse& IndexImageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IndexImageResponse_index_2eproto.base);
  return *internal_default_instance();
}


void IndexImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:IndexImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IndexImageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IndexImageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndexImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndexImageResponse)
  return target;
}

size_t IndexImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndexImageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexImageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IndexImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexImageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IndexImageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IndexImageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IndexImageResponse)
    MergeFrom(*source);
  }
}

void IndexImageResponse::MergeFrom(const IndexImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IndexImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void IndexImageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IndexImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexImageResponse::CopyFrom(const IndexImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndexImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexImageResponse::IsInitialized() const {
  return true;
}

void IndexImageResponse::InternalSwap(IndexImageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IndexImageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetBagOfWordsRequest::InitAsDefaultInstance() {
}
class GetBagOfWordsRequest::_Internal {
 public:
};

GetBagOfWordsRequest::GetBagOfWordsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetBagOfWordsRequest)
}
GetBagOfWordsRequest::GetBagOfWordsRequest(const GetBagOfWordsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_id().empty()) {
    image_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_image_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GetBagOfWordsRequest)
}

void GetBagOfWordsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBagOfWordsRequest_index_2eproto.base);
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetBagOfWordsRequest::~GetBagOfWordsRequest() {
  // @@protoc_insertion_point(destructor:GetBagOfWordsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBagOfWordsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  image_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBagOfWordsRequest::ArenaDtor(void* object) {
  GetBagOfWordsRequest* _this = reinterpret_cast< GetBagOfWordsRequest* >(object);
  (void)_this;
}
void GetBagOfWordsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBagOfWordsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBagOfWordsRequest& GetBagOfWordsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBagOfWordsRequest_index_2eproto.base);
  return *internal_default_instance();
}


void GetBagOfWordsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetBagOfWordsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBagOfWordsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string image_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_image_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetBagOfWordsRequest.image_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBagOfWordsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetBagOfWordsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_id = 1;
  if (this->image_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_id().data(), static_cast<int>(this->_internal_image_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetBagOfWordsRequest.image_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_image_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetBagOfWordsRequest)
  return target;
}

size_t GetBagOfWordsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetBagOfWordsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string image_id = 1;
  if (this->image_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBagOfWordsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetBagOfWordsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBagOfWordsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBagOfWordsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetBagOfWordsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetBagOfWordsRequest)
    MergeFrom(*source);
  }
}

void GetBagOfWordsRequest::MergeFrom(const GetBagOfWordsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetBagOfWordsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_id().size() > 0) {
    _internal_set_image_id(from._internal_image_id());
  }
}

void GetBagOfWordsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetBagOfWordsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBagOfWordsRequest::CopyFrom(const GetBagOfWordsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetBagOfWordsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBagOfWordsRequest::IsInitialized() const {
  return true;
}

void GetBagOfWordsRequest::InternalSwap(GetBagOfWordsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  image_id_.Swap(&other->image_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBagOfWordsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetBagOfWordsResponse::InitAsDefaultInstance() {
}
class GetBagOfWordsResponse::_Internal {
 public:
};

GetBagOfWordsResponse::GetBagOfWordsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  words_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetBagOfWordsResponse)
}
GetBagOfWordsResponse::GetBagOfWordsResponse(const GetBagOfWordsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      words_(from.words_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GetBagOfWordsResponse)
}

void GetBagOfWordsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBagOfWordsResponse_index_2eproto.base);
}

GetBagOfWordsResponse::~GetBagOfWordsResponse() {
  // @@protoc_insertion_point(destructor:GetBagOfWordsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBagOfWordsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetBagOfWordsResponse::ArenaDtor(void* object) {
  GetBagOfWordsResponse* _this = reinterpret_cast< GetBagOfWordsResponse* >(object);
  (void)_this;
}
void GetBagOfWordsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBagOfWordsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBagOfWordsResponse& GetBagOfWordsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBagOfWordsResponse_index_2eproto.base);
  return *internal_default_instance();
}


void GetBagOfWordsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetBagOfWordsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  words_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBagOfWordsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IndexWord words = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_words(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBagOfWordsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetBagOfWordsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IndexWord words = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_words_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_words(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetBagOfWordsResponse)
  return target;
}

size_t GetBagOfWordsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetBagOfWordsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IndexWord words = 1;
  total_size += 1UL * this->_internal_words_size();
  for (const auto& msg : this->words_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBagOfWordsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetBagOfWordsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBagOfWordsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBagOfWordsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetBagOfWordsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetBagOfWordsResponse)
    MergeFrom(*source);
  }
}

void GetBagOfWordsResponse::MergeFrom(const GetBagOfWordsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetBagOfWordsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  words_.MergeFrom(from.words_);
}

void GetBagOfWordsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetBagOfWordsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBagOfWordsResponse::CopyFrom(const GetBagOfWordsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetBagOfWordsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBagOfWordsResponse::IsInitialized() const {
  return true;
}

void GetBagOfWordsResponse::InternalSwap(GetBagOfWordsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  words_.InternalSwap(&other->words_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBagOfWordsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClosestNRequest::InitAsDefaultInstance() {
}
class ClosestNRequest::_Internal {
 public:
};

ClosestNRequest::ClosestNRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClosestNRequest)
}
ClosestNRequest::ClosestNRequest(const ClosestNRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_id().empty()) {
    image_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_image_id(),
      GetArena());
  }
  ::memcpy(&n_, &from.n_,
    static_cast<size_t>(reinterpret_cast<char*>(&include_details_) -
    reinterpret_cast<char*>(&n_)) + sizeof(include_details_));
  // @@protoc_insertion_point(copy_constructor:ClosestNRequest)
}

void ClosestNRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClosestNRequest_index_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&n_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_details_) -
      reinterpret_cast<char*>(&n_)) + sizeof(include_details_));
}

ClosestNRequest::~ClosestNRequest() {
  // @@protoc_insertion_point(destructor:ClosestNRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClosestNRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClosestNRequest::ArenaDtor(void* object) {
  ClosestNRequest* _this = reinterpret_cast< ClosestNRequest* >(object);
  (void)_this;
}
void ClosestNRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClosestNRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClosestNRequest& ClosestNRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClosestNRequest_index_2eproto.base);
  return *internal_default_instance();
}


void ClosestNRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ClosestNRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&n_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_details_) -
      reinterpret_cast<char*>(&n_)) + sizeof(include_details_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClosestNRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClosestNRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClosestNRequest.image_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 N = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          n_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool include_details = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          include_details_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClosestNRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClosestNRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClosestNRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_id().data(), static_cast<int>(this->_internal_image_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClosestNRequest.image_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_image_id(), target);
  }

  // uint32 N = 3;
  if (this->n() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_n(), target);
  }

  // bool include_details = 4;
  if (this->include_details() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_include_details(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClosestNRequest)
  return target;
}

size_t ClosestNRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClosestNRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_id());
  }

  // uint32 N = 3;
  if (this->n() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_n());
  }

  // bool include_details = 4;
  if (this->include_details() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClosestNRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClosestNRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClosestNRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClosestNRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClosestNRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClosestNRequest)
    MergeFrom(*source);
  }
}

void ClosestNRequest::MergeFrom(const ClosestNRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClosestNRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
  if (from.image_id().size() > 0) {
    _internal_set_image_id(from._internal_image_id());
  }
  if (from.n() != 0) {
    _internal_set_n(from._internal_n());
  }
  if (from.include_details() != 0) {
    _internal_set_include_details(from._internal_include_details());
  }
}

void ClosestNRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClosestNRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClosestNRequest::CopyFrom(const ClosestNRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClosestNRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClosestNRequest::IsInitialized() const {
  return true;
}

void ClosestNRequest::InternalSwap(ClosestNRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_id_.Swap(&other->image_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClosestNRequest, include_details_)
      + sizeof(ClosestNRequest::include_details_)
      - PROTOBUF_FIELD_OFFSET(ClosestNRequest, n_)>(
          reinterpret_cast<char*>(&n_),
          reinterpret_cast<char*>(&other->n_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ClosestNRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClosestNResponse::InitAsDefaultInstance() {
  ::_ClosestNResponse_default_instance_._instance.get_mutable()->details_ = const_cast< ::ClosestNDetails*>(
      ::ClosestNDetails::internal_default_instance());
}
class ClosestNResponse::_Internal {
 public:
  static const ::ClosestNDetails& details(const ClosestNResponse* msg);
};

const ::ClosestNDetails&
ClosestNResponse::_Internal::details(const ClosestNResponse* msg) {
  return *msg->details_;
}
ClosestNResponse::ClosestNResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  image_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClosestNResponse)
}
ClosestNResponse::ClosestNResponse(const ClosestNResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      image_ids_(from.image_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_details()) {
    details_ = new ::ClosestNDetails(*from.details_);
  } else {
    details_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ClosestNResponse)
}

void ClosestNResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClosestNResponse_index_2eproto.base);
  details_ = nullptr;
}

ClosestNResponse::~ClosestNResponse() {
  // @@protoc_insertion_point(destructor:ClosestNResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClosestNResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete details_;
}

void ClosestNResponse::ArenaDtor(void* object) {
  ClosestNResponse* _this = reinterpret_cast< ClosestNResponse* >(object);
  (void)_this;
}
void ClosestNResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClosestNResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClosestNResponse& ClosestNResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClosestNResponse_index_2eproto.base);
  return *internal_default_instance();
}


void ClosestNResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ClosestNResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_ids_.Clear();
  if (GetArena() == nullptr && details_ != nullptr) {
    delete details_;
  }
  details_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClosestNResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string image_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_image_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClosestNResponse.image_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .ClosestNDetails details = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_details(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClosestNResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClosestNResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string image_ids = 1;
  for (int i = 0, n = this->_internal_image_ids_size(); i < n; i++) {
    const auto& s = this->_internal_image_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClosestNResponse.image_ids");
    target = stream->WriteString(1, s, target);
  }

  // .ClosestNDetails details = 2;
  if (this->has_details()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::details(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClosestNResponse)
  return target;
}

size_t ClosestNResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClosestNResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string image_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(image_ids_.size());
  for (int i = 0, n = image_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      image_ids_.Get(i));
  }

  // .ClosestNDetails details = 2;
  if (this->has_details()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *details_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClosestNResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClosestNResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ClosestNResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClosestNResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClosestNResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClosestNResponse)
    MergeFrom(*source);
  }
}

void ClosestNResponse::MergeFrom(const ClosestNResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClosestNResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  image_ids_.MergeFrom(from.image_ids_);
  if (from.has_details()) {
    _internal_mutable_details()->::ClosestNDetails::MergeFrom(from._internal_details());
  }
}

void ClosestNResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClosestNResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClosestNResponse::CopyFrom(const ClosestNResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClosestNResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClosestNResponse::IsInitialized() const {
  return true;
}

void ClosestNResponse::InternalSwap(ClosestNResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  image_ids_.InternalSwap(&other->image_ids_);
  swap(details_, other->details_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClosestNResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse::ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse() {}
ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse::ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse::MergeFrom(const ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ClosestNDetails_ClosestNImageDetails::InitAsDefaultInstance() {
}
class ClosestNDetails_ClosestNImageDetails::_Internal {
 public:
};

ClosestNDetails_ClosestNImageDetails::ClosestNDetails_ClosestNImageDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  descriptor_scores_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClosestNDetails.ClosestNImageDetails)
}
ClosestNDetails_ClosestNImageDetails::ClosestNDetails_ClosestNImageDetails(const ClosestNDetails_ClosestNImageDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  descriptor_scores_.MergeFrom(from.descriptor_scores_);
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:ClosestNDetails.ClosestNImageDetails)
}

void ClosestNDetails_ClosestNImageDetails::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClosestNDetails_ClosestNImageDetails_index_2eproto.base);
  score_ = 0;
}

ClosestNDetails_ClosestNImageDetails::~ClosestNDetails_ClosestNImageDetails() {
  // @@protoc_insertion_point(destructor:ClosestNDetails.ClosestNImageDetails)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClosestNDetails_ClosestNImageDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClosestNDetails_ClosestNImageDetails::ArenaDtor(void* object) {
  ClosestNDetails_ClosestNImageDetails* _this = reinterpret_cast< ClosestNDetails_ClosestNImageDetails* >(object);
  (void)_this;
}
void ClosestNDetails_ClosestNImageDetails::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClosestNDetails_ClosestNImageDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClosestNDetails_ClosestNImageDetails& ClosestNDetails_ClosestNImageDetails::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClosestNDetails_ClosestNImageDetails_index_2eproto.base);
  return *internal_default_instance();
}


void ClosestNDetails_ClosestNImageDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:ClosestNDetails.ClosestNImageDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  descriptor_scores_.Clear();
  score_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClosestNDetails_ClosestNImageDetails::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, float> descriptor_scores = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&descriptor_scores_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // float score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClosestNDetails_ClosestNImageDetails::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClosestNDetails.ClosestNImageDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, float> descriptor_scores = 1;
  if (!this->_internal_descriptor_scores().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "ClosestNDetails.ClosestNImageDetails.DescriptorScoresEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_descriptor_scores().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_descriptor_scores().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
          it = this->_internal_descriptor_scores().begin();
          it != this->_internal_descriptor_scores().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
          it = this->_internal_descriptor_scores().begin();
          it != this->_internal_descriptor_scores().end(); ++it) {
        target = ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // float score = 2;
  if (!(this->score() <= 0 && this->score() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClosestNDetails.ClosestNImageDetails)
  return target;
}

size_t ClosestNDetails_ClosestNImageDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClosestNDetails.ClosestNImageDetails)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, float> descriptor_scores = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_descriptor_scores_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_descriptor_scores().begin();
      it != this->_internal_descriptor_scores().end(); ++it) {
    total_size += ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // float score = 2;
  if (!(this->score() <= 0 && this->score() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClosestNDetails_ClosestNImageDetails::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClosestNDetails.ClosestNImageDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const ClosestNDetails_ClosestNImageDetails* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClosestNDetails_ClosestNImageDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClosestNDetails.ClosestNImageDetails)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClosestNDetails.ClosestNImageDetails)
    MergeFrom(*source);
  }
}

void ClosestNDetails_ClosestNImageDetails::MergeFrom(const ClosestNDetails_ClosestNImageDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClosestNDetails.ClosestNImageDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  descriptor_scores_.MergeFrom(from.descriptor_scores_);
  if (!(from.score() <= 0 && from.score() >= 0)) {
    _internal_set_score(from._internal_score());
  }
}

void ClosestNDetails_ClosestNImageDetails::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClosestNDetails.ClosestNImageDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClosestNDetails_ClosestNImageDetails::CopyFrom(const ClosestNDetails_ClosestNImageDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClosestNDetails.ClosestNImageDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClosestNDetails_ClosestNImageDetails::IsInitialized() const {
  return true;
}

void ClosestNDetails_ClosestNImageDetails::InternalSwap(ClosestNDetails_ClosestNImageDetails* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  descriptor_scores_.Swap(&other->descriptor_scores_);
  swap(score_, other->score_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClosestNDetails_ClosestNImageDetails::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ClosestNDetails_ImageDetailsEntry_DoNotUse::ClosestNDetails_ImageDetailsEntry_DoNotUse() {}
ClosestNDetails_ImageDetailsEntry_DoNotUse::ClosestNDetails_ImageDetailsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ClosestNDetails_ImageDetailsEntry_DoNotUse::MergeFrom(const ClosestNDetails_ImageDetailsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ClosestNDetails_ImageDetailsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ClosestNDetails_ImageDetailsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ClosestNDetails::InitAsDefaultInstance() {
}
class ClosestNDetails::_Internal {
 public:
};

ClosestNDetails::ClosestNDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  image_details_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClosestNDetails)
}
ClosestNDetails::ClosestNDetails(const ClosestNDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  image_details_.MergeFrom(from.image_details_);
  // @@protoc_insertion_point(copy_constructor:ClosestNDetails)
}

void ClosestNDetails::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClosestNDetails_index_2eproto.base);
}

ClosestNDetails::~ClosestNDetails() {
  // @@protoc_insertion_point(destructor:ClosestNDetails)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClosestNDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClosestNDetails::ArenaDtor(void* object) {
  ClosestNDetails* _this = reinterpret_cast< ClosestNDetails* >(object);
  (void)_this;
}
void ClosestNDetails::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClosestNDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClosestNDetails& ClosestNDetails::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClosestNDetails_index_2eproto.base);
  return *internal_default_instance();
}


void ClosestNDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:ClosestNDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_details_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClosestNDetails::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .ClosestNDetails.ClosestNImageDetails> image_details = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&image_details_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClosestNDetails::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClosestNDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .ClosestNDetails.ClosestNImageDetails> image_details = 1;
  if (!this->_internal_image_details().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ClosestNDetails_ClosestNImageDetails >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "ClosestNDetails.ImageDetailsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_image_details().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_image_details().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ClosestNDetails_ClosestNImageDetails >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ClosestNDetails_ClosestNImageDetails >::const_iterator
          it = this->_internal_image_details().begin();
          it != this->_internal_image_details().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ClosestNDetails_ImageDetailsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ClosestNDetails_ClosestNImageDetails >::const_iterator
          it = this->_internal_image_details().begin();
          it != this->_internal_image_details().end(); ++it) {
        target = ClosestNDetails_ImageDetailsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClosestNDetails)
  return target;
}

size_t ClosestNDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClosestNDetails)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .ClosestNDetails.ClosestNImageDetails> image_details = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_image_details_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ClosestNDetails_ClosestNImageDetails >::const_iterator
      it = this->_internal_image_details().begin();
      it != this->_internal_image_details().end(); ++it) {
    total_size += ClosestNDetails_ImageDetailsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClosestNDetails::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClosestNDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const ClosestNDetails* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClosestNDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClosestNDetails)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClosestNDetails)
    MergeFrom(*source);
  }
}

void ClosestNDetails::MergeFrom(const ClosestNDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClosestNDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  image_details_.MergeFrom(from.image_details_);
}

void ClosestNDetails::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClosestNDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClosestNDetails::CopyFrom(const ClosestNDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClosestNDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClosestNDetails::IsInitialized() const {
  return true;
}

void ClosestNDetails::InternalSwap(ClosestNDetails* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  image_details_.Swap(&other->image_details_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClosestNDetails::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ScoreImageRequest::InitAsDefaultInstance() {
}
class ScoreImageRequest::_Internal {
 public:
};

ScoreImageRequest::ScoreImageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ScoreImageRequest)
}
ScoreImageRequest::ScoreImageRequest(const ScoreImageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reconstruction_id(),
      GetArena());
  }
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_id().empty()) {
    image_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_image_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ScoreImageRequest)
}

void ScoreImageRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ScoreImageRequest_index_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ScoreImageRequest::~ScoreImageRequest() {
  // @@protoc_insertion_point(destructor:ScoreImageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ScoreImageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ScoreImageRequest::ArenaDtor(void* object) {
  ScoreImageRequest* _this = reinterpret_cast< ScoreImageRequest* >(object);
  (void)_this;
}
void ScoreImageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ScoreImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScoreImageRequest& ScoreImageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScoreImageRequest_index_2eproto.base);
  return *internal_default_instance();
}


void ScoreImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ScoreImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScoreImageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ScoreImageRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ScoreImageRequest.image_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScoreImageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ScoreImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ScoreImageRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_id().data(), static_cast<int>(this->_internal_image_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ScoreImageRequest.image_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_image_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScoreImageRequest)
  return target;
}

size_t ScoreImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScoreImageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScoreImageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScoreImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScoreImageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScoreImageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScoreImageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScoreImageRequest)
    MergeFrom(*source);
  }
}

void ScoreImageRequest::MergeFrom(const ScoreImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScoreImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {
    _internal_set_reconstruction_id(from._internal_reconstruction_id());
  }
  if (from.image_id().size() > 0) {
    _internal_set_image_id(from._internal_image_id());
  }
}

void ScoreImageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScoreImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScoreImageRequest::CopyFrom(const ScoreImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScoreImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScoreImageRequest::IsInitialized() const {
  return true;
}

void ScoreImageRequest::InternalSwap(ScoreImageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_id_.Swap(&other->image_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ScoreImageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ScoreImageResponse::InitAsDefaultInstance() {
}
class ScoreImageResponse::_Internal {
 public:
};

ScoreImageResponse::ScoreImageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ScoreImageResponse)
}
ScoreImageResponse::ScoreImageResponse(const ScoreImageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ScoreImageResponse)
}

void ScoreImageResponse::SharedCtor() {
}

ScoreImageResponse::~ScoreImageResponse() {
  // @@protoc_insertion_point(destructor:ScoreImageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ScoreImageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ScoreImageResponse::ArenaDtor(void* object) {
  ScoreImageResponse* _this = reinterpret_cast< ScoreImageResponse* >(object);
  (void)_this;
}
void ScoreImageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ScoreImageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScoreImageResponse& ScoreImageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScoreImageResponse_index_2eproto.base);
  return *internal_default_instance();
}


void ScoreImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ScoreImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScoreImageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScoreImageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ScoreImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScoreImageResponse)
  return target;
}

size_t ScoreImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScoreImageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScoreImageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScoreImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScoreImageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScoreImageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScoreImageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScoreImageResponse)
    MergeFrom(*source);
  }
}

void ScoreImageResponse::MergeFrom(const ScoreImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScoreImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ScoreImageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScoreImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScoreImageResponse::CopyFrom(const ScoreImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScoreImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScoreImageResponse::IsInitialized() const {
  return true;
}

void ScoreImageResponse::InternalSwap(ScoreImageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScoreImageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::IndexWord* Arena::CreateMaybeMessage< ::IndexWord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IndexWord >(arena);
}
template<> PROTOBUF_NOINLINE ::IndexImageRequest* Arena::CreateMaybeMessage< ::IndexImageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IndexImageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::IndexImageResponse* Arena::CreateMaybeMessage< ::IndexImageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IndexImageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetBagOfWordsRequest* Arena::CreateMaybeMessage< ::GetBagOfWordsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetBagOfWordsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GetBagOfWordsResponse* Arena::CreateMaybeMessage< ::GetBagOfWordsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetBagOfWordsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ClosestNRequest* Arena::CreateMaybeMessage< ::ClosestNRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClosestNRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ClosestNResponse* Arena::CreateMaybeMessage< ::ClosestNResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClosestNResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse* Arena::CreateMaybeMessage< ::ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClosestNDetails_ClosestNImageDetails_DescriptorScoresEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ClosestNDetails_ClosestNImageDetails* Arena::CreateMaybeMessage< ::ClosestNDetails_ClosestNImageDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClosestNDetails_ClosestNImageDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::ClosestNDetails_ImageDetailsEntry_DoNotUse* Arena::CreateMaybeMessage< ::ClosestNDetails_ImageDetailsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClosestNDetails_ImageDetailsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ClosestNDetails* Arena::CreateMaybeMessage< ::ClosestNDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClosestNDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::ScoreImageRequest* Arena::CreateMaybeMessage< ::ScoreImageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ScoreImageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ScoreImageResponse* Arena::CreateMaybeMessage< ::ScoreImageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ScoreImageResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
