// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: worker.proto

#include "worker.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
class WorkerComputeFeaturesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerComputeFeaturesRequest> _instance;
} _WorkerComputeFeaturesRequest_default_instance_;
class WorkerComputeFeaturesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerComputeFeaturesResponse> _instance;
} _WorkerComputeFeaturesResponse_default_instance_;
class WorkerComputeMatchesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerComputeMatchesRequest> _instance;
} _WorkerComputeMatchesRequest_default_instance_;
class WorkerComputeMatchesReponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerComputeMatchesReponse> _instance;
} _WorkerComputeMatchesReponse_default_instance_;
class RegisterWorkerRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterWorkerRequest> _instance;
} _RegisterWorkerRequest_default_instance_;
class RegisterWorkerResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterWorkerResponse> _instance;
} _RegisterWorkerResponse_default_instance_;
static void InitDefaultsscc_info_RegisterWorkerRequest_worker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RegisterWorkerRequest_default_instance_;
    new (ptr) ::RegisterWorkerRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RegisterWorkerRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterWorkerRequest_worker_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterWorkerRequest_worker_2eproto}, {}};

static void InitDefaultsscc_info_RegisterWorkerResponse_worker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RegisterWorkerResponse_default_instance_;
    new (ptr) ::RegisterWorkerResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RegisterWorkerResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterWorkerResponse_worker_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterWorkerResponse_worker_2eproto}, {}};

static void InitDefaultsscc_info_WorkerComputeFeaturesRequest_worker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WorkerComputeFeaturesRequest_default_instance_;
    new (ptr) ::WorkerComputeFeaturesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WorkerComputeFeaturesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerComputeFeaturesRequest_worker_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WorkerComputeFeaturesRequest_worker_2eproto}, {}};

static void InitDefaultsscc_info_WorkerComputeFeaturesResponse_worker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WorkerComputeFeaturesResponse_default_instance_;
    new (ptr) ::WorkerComputeFeaturesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WorkerComputeFeaturesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerComputeFeaturesResponse_worker_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WorkerComputeFeaturesResponse_worker_2eproto}, {}};

static void InitDefaultsscc_info_WorkerComputeMatchesReponse_worker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WorkerComputeMatchesReponse_default_instance_;
    new (ptr) ::WorkerComputeMatchesReponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WorkerComputeMatchesReponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerComputeMatchesReponse_worker_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WorkerComputeMatchesReponse_worker_2eproto}, {}};

static void InitDefaultsscc_info_WorkerComputeMatchesRequest_worker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WorkerComputeMatchesRequest_default_instance_;
    new (ptr) ::WorkerComputeMatchesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WorkerComputeMatchesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerComputeMatchesRequest_worker_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WorkerComputeMatchesRequest_worker_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_worker_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_worker_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_worker_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_worker_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WorkerComputeFeaturesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::WorkerComputeFeaturesRequest, reconstruction_id_),
  PROTOBUF_FIELD_OFFSET(::WorkerComputeFeaturesRequest, image_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WorkerComputeFeaturesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WorkerComputeMatchesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::WorkerComputeMatchesRequest, reconstruction_id_),
  PROTOBUF_FIELD_OFFSET(::WorkerComputeMatchesRequest, image_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WorkerComputeMatchesReponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RegisterWorkerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RegisterWorkerRequest, address_),
  PROTOBUF_FIELD_OFFSET(::RegisterWorkerRequest, cores_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RegisterWorkerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::WorkerComputeFeaturesRequest)},
  { 7, -1, sizeof(::WorkerComputeFeaturesResponse)},
  { 12, -1, sizeof(::WorkerComputeMatchesRequest)},
  { 19, -1, sizeof(::WorkerComputeMatchesReponse)},
  { 24, -1, sizeof(::RegisterWorkerRequest)},
  { 31, -1, sizeof(::RegisterWorkerResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_WorkerComputeFeaturesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_WorkerComputeFeaturesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_WorkerComputeMatchesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_WorkerComputeMatchesReponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_RegisterWorkerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_RegisterWorkerResponse_default_instance_),
};

const char descriptor_table_protodef_worker_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014worker.proto\"K\n\034WorkerComputeFeaturesR"
  "equest\022\031\n\021reconstruction_id\030\001 \001(\t\022\020\n\010ima"
  "ge_id\030\002 \001(\t\"\037\n\035WorkerComputeFeaturesResp"
  "onse\"J\n\033WorkerComputeMatchesRequest\022\031\n\021r"
  "econstruction_id\030\001 \001(\t\022\020\n\010image_id\030\002 \001(\t"
  "\"\035\n\033WorkerComputeMatchesReponse\"7\n\025Regis"
  "terWorkerRequest\022\017\n\007address\030\001 \001(\t\022\r\n\005cor"
  "es\030\002 \001(\005\"\030\n\026RegisterWorkerResponse2\360\001\n\021W"
  "orkerPoolManager\022P\n\017ComputeFeatures\022\035.Wo"
  "rkerComputeFeaturesRequest\032\036.WorkerCompu"
  "teFeaturesResponse\022L\n\016ComputeMatches\022\034.W"
  "orkerComputeMatchesRequest\032\034.WorkerCompu"
  "teMatchesReponse\022;\n\010Register\022\026.RegisterW"
  "orkerRequest\032\027.RegisterWorkerResponse2\250\001"
  "\n\006Worker\022P\n\017ComputeFeatures\022\035.WorkerComp"
  "uteFeaturesRequest\032\036.WorkerComputeFeatur"
  "esResponse\022L\n\016ComputeMatches\022\034.WorkerCom"
  "puteMatchesRequest\032\034.WorkerComputeMatche"
  "sReponseb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_worker_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_worker_2eproto_sccs[6] = {
  &scc_info_RegisterWorkerRequest_worker_2eproto.base,
  &scc_info_RegisterWorkerResponse_worker_2eproto.base,
  &scc_info_WorkerComputeFeaturesRequest_worker_2eproto.base,
  &scc_info_WorkerComputeFeaturesResponse_worker_2eproto.base,
  &scc_info_WorkerComputeMatchesReponse_worker_2eproto.base,
  &scc_info_WorkerComputeMatchesRequest_worker_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_worker_2eproto_once;
static bool descriptor_table_worker_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_worker_2eproto = {
  &descriptor_table_worker_2eproto_initialized, descriptor_table_protodef_worker_2eproto, "worker.proto", 736,
  &descriptor_table_worker_2eproto_once, descriptor_table_worker_2eproto_sccs, descriptor_table_worker_2eproto_deps, 6, 0,
  schemas, file_default_instances, TableStruct_worker_2eproto::offsets,
  file_level_metadata_worker_2eproto, 6, file_level_enum_descriptors_worker_2eproto, file_level_service_descriptors_worker_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_worker_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_worker_2eproto), true);

// ===================================================================

void WorkerComputeFeaturesRequest::InitAsDefaultInstance() {
}
class WorkerComputeFeaturesRequest::_Internal {
 public:
};

WorkerComputeFeaturesRequest::WorkerComputeFeaturesRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WorkerComputeFeaturesRequest)
}
WorkerComputeFeaturesRequest::WorkerComputeFeaturesRequest(const WorkerComputeFeaturesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.reconstruction_id_);
  }
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_id().empty()) {
    image_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_id_);
  }
  // @@protoc_insertion_point(copy_constructor:WorkerComputeFeaturesRequest)
}

void WorkerComputeFeaturesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkerComputeFeaturesRequest_worker_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WorkerComputeFeaturesRequest::~WorkerComputeFeaturesRequest() {
  // @@protoc_insertion_point(destructor:WorkerComputeFeaturesRequest)
  SharedDtor();
}

void WorkerComputeFeaturesRequest::SharedDtor() {
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WorkerComputeFeaturesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkerComputeFeaturesRequest& WorkerComputeFeaturesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkerComputeFeaturesRequest_worker_2eproto.base);
  return *internal_default_instance();
}


void WorkerComputeFeaturesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:WorkerComputeFeaturesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* WorkerComputeFeaturesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkerComputeFeaturesRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkerComputeFeaturesRequest.image_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkerComputeFeaturesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WorkerComputeFeaturesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkerComputeFeaturesRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_id().data(), static_cast<int>(this->_internal_image_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkerComputeFeaturesRequest.image_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_image_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorkerComputeFeaturesRequest)
  return target;
}

size_t WorkerComputeFeaturesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorkerComputeFeaturesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerComputeFeaturesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WorkerComputeFeaturesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerComputeFeaturesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkerComputeFeaturesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WorkerComputeFeaturesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WorkerComputeFeaturesRequest)
    MergeFrom(*source);
  }
}

void WorkerComputeFeaturesRequest::MergeFrom(const WorkerComputeFeaturesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WorkerComputeFeaturesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {

    reconstruction_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.reconstruction_id_);
  }
  if (from.image_id().size() > 0) {

    image_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_id_);
  }
}

void WorkerComputeFeaturesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WorkerComputeFeaturesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerComputeFeaturesRequest::CopyFrom(const WorkerComputeFeaturesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorkerComputeFeaturesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerComputeFeaturesRequest::IsInitialized() const {
  return true;
}

void WorkerComputeFeaturesRequest::InternalSwap(WorkerComputeFeaturesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_id_.Swap(&other->image_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkerComputeFeaturesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WorkerComputeFeaturesResponse::InitAsDefaultInstance() {
}
class WorkerComputeFeaturesResponse::_Internal {
 public:
};

WorkerComputeFeaturesResponse::WorkerComputeFeaturesResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WorkerComputeFeaturesResponse)
}
WorkerComputeFeaturesResponse::WorkerComputeFeaturesResponse(const WorkerComputeFeaturesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:WorkerComputeFeaturesResponse)
}

void WorkerComputeFeaturesResponse::SharedCtor() {
}

WorkerComputeFeaturesResponse::~WorkerComputeFeaturesResponse() {
  // @@protoc_insertion_point(destructor:WorkerComputeFeaturesResponse)
  SharedDtor();
}

void WorkerComputeFeaturesResponse::SharedDtor() {
}

void WorkerComputeFeaturesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkerComputeFeaturesResponse& WorkerComputeFeaturesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkerComputeFeaturesResponse_worker_2eproto.base);
  return *internal_default_instance();
}


void WorkerComputeFeaturesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:WorkerComputeFeaturesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* WorkerComputeFeaturesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkerComputeFeaturesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WorkerComputeFeaturesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorkerComputeFeaturesResponse)
  return target;
}

size_t WorkerComputeFeaturesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorkerComputeFeaturesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerComputeFeaturesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WorkerComputeFeaturesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerComputeFeaturesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkerComputeFeaturesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WorkerComputeFeaturesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WorkerComputeFeaturesResponse)
    MergeFrom(*source);
  }
}

void WorkerComputeFeaturesResponse::MergeFrom(const WorkerComputeFeaturesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WorkerComputeFeaturesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void WorkerComputeFeaturesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WorkerComputeFeaturesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerComputeFeaturesResponse::CopyFrom(const WorkerComputeFeaturesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorkerComputeFeaturesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerComputeFeaturesResponse::IsInitialized() const {
  return true;
}

void WorkerComputeFeaturesResponse::InternalSwap(WorkerComputeFeaturesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkerComputeFeaturesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WorkerComputeMatchesRequest::InitAsDefaultInstance() {
}
class WorkerComputeMatchesRequest::_Internal {
 public:
};

WorkerComputeMatchesRequest::WorkerComputeMatchesRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WorkerComputeMatchesRequest)
}
WorkerComputeMatchesRequest::WorkerComputeMatchesRequest(const WorkerComputeMatchesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reconstruction_id().empty()) {
    reconstruction_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.reconstruction_id_);
  }
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_id().empty()) {
    image_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_id_);
  }
  // @@protoc_insertion_point(copy_constructor:WorkerComputeMatchesRequest)
}

void WorkerComputeMatchesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkerComputeMatchesRequest_worker_2eproto.base);
  reconstruction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WorkerComputeMatchesRequest::~WorkerComputeMatchesRequest() {
  // @@protoc_insertion_point(destructor:WorkerComputeMatchesRequest)
  SharedDtor();
}

void WorkerComputeMatchesRequest::SharedDtor() {
  reconstruction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WorkerComputeMatchesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkerComputeMatchesRequest& WorkerComputeMatchesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkerComputeMatchesRequest_worker_2eproto.base);
  return *internal_default_instance();
}


void WorkerComputeMatchesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:WorkerComputeMatchesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reconstruction_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* WorkerComputeMatchesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reconstruction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reconstruction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkerComputeMatchesRequest.reconstruction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkerComputeMatchesRequest.image_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkerComputeMatchesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WorkerComputeMatchesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reconstruction_id().data(), static_cast<int>(this->_internal_reconstruction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkerComputeMatchesRequest.reconstruction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reconstruction_id(), target);
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_id().data(), static_cast<int>(this->_internal_image_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkerComputeMatchesRequest.image_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_image_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorkerComputeMatchesRequest)
  return target;
}

size_t WorkerComputeMatchesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorkerComputeMatchesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reconstruction_id = 1;
  if (this->reconstruction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reconstruction_id());
  }

  // string image_id = 2;
  if (this->image_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerComputeMatchesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WorkerComputeMatchesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerComputeMatchesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkerComputeMatchesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WorkerComputeMatchesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WorkerComputeMatchesRequest)
    MergeFrom(*source);
  }
}

void WorkerComputeMatchesRequest::MergeFrom(const WorkerComputeMatchesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WorkerComputeMatchesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reconstruction_id().size() > 0) {

    reconstruction_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.reconstruction_id_);
  }
  if (from.image_id().size() > 0) {

    image_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_id_);
  }
}

void WorkerComputeMatchesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WorkerComputeMatchesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerComputeMatchesRequest::CopyFrom(const WorkerComputeMatchesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorkerComputeMatchesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerComputeMatchesRequest::IsInitialized() const {
  return true;
}

void WorkerComputeMatchesRequest::InternalSwap(WorkerComputeMatchesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  reconstruction_id_.Swap(&other->reconstruction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_id_.Swap(&other->image_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkerComputeMatchesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WorkerComputeMatchesReponse::InitAsDefaultInstance() {
}
class WorkerComputeMatchesReponse::_Internal {
 public:
};

WorkerComputeMatchesReponse::WorkerComputeMatchesReponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WorkerComputeMatchesReponse)
}
WorkerComputeMatchesReponse::WorkerComputeMatchesReponse(const WorkerComputeMatchesReponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:WorkerComputeMatchesReponse)
}

void WorkerComputeMatchesReponse::SharedCtor() {
}

WorkerComputeMatchesReponse::~WorkerComputeMatchesReponse() {
  // @@protoc_insertion_point(destructor:WorkerComputeMatchesReponse)
  SharedDtor();
}

void WorkerComputeMatchesReponse::SharedDtor() {
}

void WorkerComputeMatchesReponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkerComputeMatchesReponse& WorkerComputeMatchesReponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkerComputeMatchesReponse_worker_2eproto.base);
  return *internal_default_instance();
}


void WorkerComputeMatchesReponse::Clear() {
// @@protoc_insertion_point(message_clear_start:WorkerComputeMatchesReponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* WorkerComputeMatchesReponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkerComputeMatchesReponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WorkerComputeMatchesReponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorkerComputeMatchesReponse)
  return target;
}

size_t WorkerComputeMatchesReponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorkerComputeMatchesReponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerComputeMatchesReponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WorkerComputeMatchesReponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerComputeMatchesReponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkerComputeMatchesReponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WorkerComputeMatchesReponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WorkerComputeMatchesReponse)
    MergeFrom(*source);
  }
}

void WorkerComputeMatchesReponse::MergeFrom(const WorkerComputeMatchesReponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WorkerComputeMatchesReponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void WorkerComputeMatchesReponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WorkerComputeMatchesReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerComputeMatchesReponse::CopyFrom(const WorkerComputeMatchesReponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorkerComputeMatchesReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerComputeMatchesReponse::IsInitialized() const {
  return true;
}

void WorkerComputeMatchesReponse::InternalSwap(WorkerComputeMatchesReponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkerComputeMatchesReponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterWorkerRequest::InitAsDefaultInstance() {
}
class RegisterWorkerRequest::_Internal {
 public:
};

RegisterWorkerRequest::RegisterWorkerRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RegisterWorkerRequest)
}
RegisterWorkerRequest::RegisterWorkerRequest(const RegisterWorkerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_address().empty()) {
    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  cores_ = from.cores_;
  // @@protoc_insertion_point(copy_constructor:RegisterWorkerRequest)
}

void RegisterWorkerRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterWorkerRequest_worker_2eproto.base);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cores_ = 0;
}

RegisterWorkerRequest::~RegisterWorkerRequest() {
  // @@protoc_insertion_point(destructor:RegisterWorkerRequest)
  SharedDtor();
}

void RegisterWorkerRequest::SharedDtor() {
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterWorkerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterWorkerRequest& RegisterWorkerRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterWorkerRequest_worker_2eproto.base);
  return *internal_default_instance();
}


void RegisterWorkerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterWorkerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cores_ = 0;
  _internal_metadata_.Clear();
}

const char* RegisterWorkerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "RegisterWorkerRequest.address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cores = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          cores_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterWorkerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegisterWorkerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "RegisterWorkerRequest.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  // int32 cores = 2;
  if (this->cores() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_cores(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterWorkerRequest)
  return target;
}

size_t RegisterWorkerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterWorkerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // int32 cores = 2;
  if (this->cores() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cores());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterWorkerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RegisterWorkerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterWorkerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterWorkerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RegisterWorkerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RegisterWorkerRequest)
    MergeFrom(*source);
  }
}

void RegisterWorkerRequest::MergeFrom(const RegisterWorkerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RegisterWorkerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.cores() != 0) {
    _internal_set_cores(from._internal_cores());
  }
}

void RegisterWorkerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RegisterWorkerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterWorkerRequest::CopyFrom(const RegisterWorkerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterWorkerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterWorkerRequest::IsInitialized() const {
  return true;
}

void RegisterWorkerRequest::InternalSwap(RegisterWorkerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cores_, other->cores_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterWorkerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterWorkerResponse::InitAsDefaultInstance() {
}
class RegisterWorkerResponse::_Internal {
 public:
};

RegisterWorkerResponse::RegisterWorkerResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RegisterWorkerResponse)
}
RegisterWorkerResponse::RegisterWorkerResponse(const RegisterWorkerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:RegisterWorkerResponse)
}

void RegisterWorkerResponse::SharedCtor() {
}

RegisterWorkerResponse::~RegisterWorkerResponse() {
  // @@protoc_insertion_point(destructor:RegisterWorkerResponse)
  SharedDtor();
}

void RegisterWorkerResponse::SharedDtor() {
}

void RegisterWorkerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterWorkerResponse& RegisterWorkerResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterWorkerResponse_worker_2eproto.base);
  return *internal_default_instance();
}


void RegisterWorkerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterWorkerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* RegisterWorkerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterWorkerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegisterWorkerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterWorkerResponse)
  return target;
}

size_t RegisterWorkerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterWorkerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterWorkerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RegisterWorkerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterWorkerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterWorkerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RegisterWorkerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RegisterWorkerResponse)
    MergeFrom(*source);
  }
}

void RegisterWorkerResponse::MergeFrom(const RegisterWorkerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RegisterWorkerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RegisterWorkerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RegisterWorkerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterWorkerResponse::CopyFrom(const RegisterWorkerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterWorkerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterWorkerResponse::IsInitialized() const {
  return true;
}

void RegisterWorkerResponse::InternalSwap(RegisterWorkerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterWorkerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::WorkerComputeFeaturesRequest* Arena::CreateMaybeMessage< ::WorkerComputeFeaturesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::WorkerComputeFeaturesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::WorkerComputeFeaturesResponse* Arena::CreateMaybeMessage< ::WorkerComputeFeaturesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::WorkerComputeFeaturesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::WorkerComputeMatchesRequest* Arena::CreateMaybeMessage< ::WorkerComputeMatchesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::WorkerComputeMatchesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::WorkerComputeMatchesReponse* Arena::CreateMaybeMessage< ::WorkerComputeMatchesReponse >(Arena* arena) {
  return Arena::CreateInternal< ::WorkerComputeMatchesReponse >(arena);
}
template<> PROTOBUF_NOINLINE ::RegisterWorkerRequest* Arena::CreateMaybeMessage< ::RegisterWorkerRequest >(Arena* arena) {
  return Arena::CreateInternal< ::RegisterWorkerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::RegisterWorkerResponse* Arena::CreateMaybeMessage< ::RegisterWorkerResponse >(Arena* arena) {
  return Arena::CreateInternal< ::RegisterWorkerResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
